#line 2 "../Genesys++-scanner.cpp"

#line 4 "../Genesys++-scanner.cpp"

#define  YY_INT_ALIGNED short int

/* A lexical scanner generated by flex */

#define FLEX_SCANNER
#define YY_FLEX_MAJOR_VERSION 2
#define YY_FLEX_MINOR_VERSION 6
#define YY_FLEX_SUBMINOR_VERSION 4
#if YY_FLEX_SUBMINOR_VERSION > 0
#define FLEX_BETA
#endif

/* First, we deal with  platform-specific or compiler-specific issues. */

/* begin standard C headers. */
#include <stdio.h>
#include <string.h>
#include <errno.h>
#include <stdlib.h>

/* end standard C headers. */

/* flex integer type definitions */

#ifndef FLEXINT_H
#define FLEXINT_H

/* C99 systems have <inttypes.h>. Non-C99 systems may or may not. */

#if defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L

/* C99 says to define __STDC_LIMIT_MACROS before including stdint.h,
 * if you want the limit (max/min) macros for int types. 
 */
#ifndef __STDC_LIMIT_MACROS
#define __STDC_LIMIT_MACROS 1
#endif

#include <inttypes.h>
typedef int8_t flex_int8_t;
typedef uint8_t flex_uint8_t;
typedef int16_t flex_int16_t;
typedef uint16_t flex_uint16_t;
typedef int32_t flex_int32_t;
typedef uint32_t flex_uint32_t;
#else
typedef signed char flex_int8_t;
typedef short int flex_int16_t;
typedef int flex_int32_t;
typedef unsigned char flex_uint8_t; 
typedef unsigned short int flex_uint16_t;
typedef unsigned int flex_uint32_t;

/* Limits of integral types. */
#ifndef INT8_MIN
#define INT8_MIN               (-128)
#endif
#ifndef INT16_MIN
#define INT16_MIN              (-32767-1)
#endif
#ifndef INT32_MIN
#define INT32_MIN              (-2147483647-1)
#endif
#ifndef INT8_MAX
#define INT8_MAX               (127)
#endif
#ifndef INT16_MAX
#define INT16_MAX              (32767)
#endif
#ifndef INT32_MAX
#define INT32_MAX              (2147483647)
#endif
#ifndef UINT8_MAX
#define UINT8_MAX              (255U)
#endif
#ifndef UINT16_MAX
#define UINT16_MAX             (65535U)
#endif
#ifndef UINT32_MAX
#define UINT32_MAX             (4294967295U)
#endif

#ifndef SIZE_MAX
#define SIZE_MAX               (~(size_t)0)
#endif

#endif /* ! C99 */

#endif /* ! FLEXINT_H */

/* begin standard C++ headers. */

/* TODO: this is always defined, so inline it */
#define yyconst const

#if defined(__GNUC__) && __GNUC__ >= 3
#define yynoreturn __attribute__((__noreturn__))
#else
#define yynoreturn
#endif

/* Returned upon end-of-file. */
#define YY_NULL 0

/* Promotes a possibly negative, possibly signed char to an
 *   integer in range [0..255] for use as an array index.
 */
#define YY_SC_TO_UI(c) ((YY_CHAR) (c))

/* Enter a start condition.  This macro really ought to take a parameter,
 * but we do it the disgusting crufty way forced on us by the ()-less
 * definition of BEGIN.
 */
#define BEGIN (yy_start) = 1 + 2 *
/* Translate the current start state into a value that can be later handed
 * to BEGIN to return to the state.  The YYSTATE alias is for lex
 * compatibility.
 */
#define YY_START (((yy_start) - 1) / 2)
#define YYSTATE YY_START
/* Action number for EOF rule of a given start state. */
#define YY_STATE_EOF(state) (YY_END_OF_BUFFER + state + 1)
/* Special action meaning "start processing a new file". */
#define YY_NEW_FILE yyrestart( yyin  )
#define YY_END_OF_BUFFER_CHAR 0

/* Size of default input buffer. */
#ifndef YY_BUF_SIZE
#ifdef __ia64__
/* On IA-64, the buffer size is 16k, not 8k.
 * Moreover, YY_BUF_SIZE is 2*YY_READ_BUF_SIZE in the general case.
 * Ditto for the __ia64__ case accordingly.
 */
#define YY_BUF_SIZE 32768
#else
#define YY_BUF_SIZE 16384
#endif /* __ia64__ */
#endif

/* The state buf must be large enough to hold one state per character in the main buffer.
 */
#define YY_STATE_BUF_SIZE   ((YY_BUF_SIZE + 2) * sizeof(yy_state_type))

#ifndef YY_TYPEDEF_YY_BUFFER_STATE
#define YY_TYPEDEF_YY_BUFFER_STATE
typedef struct yy_buffer_state *YY_BUFFER_STATE;
#endif

#ifndef YY_TYPEDEF_YY_SIZE_T
#define YY_TYPEDEF_YY_SIZE_T
typedef size_t yy_size_t;
#endif

extern int yyleng;

extern FILE *yyin, *yyout;

#define EOB_ACT_CONTINUE_SCAN 0
#define EOB_ACT_END_OF_FILE 1
#define EOB_ACT_LAST_MATCH 2
    
    #define YY_LESS_LINENO(n)
    #define YY_LINENO_REWIND_TO(ptr)
    
/* Return all but the first "n" matched characters back to the input stream. */
#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
        int yyless_macro_arg = (n); \
        YY_LESS_LINENO(yyless_macro_arg);\
		*yy_cp = (yy_hold_char); \
		YY_RESTORE_YY_MORE_OFFSET \
		(yy_c_buf_p) = yy_cp = yy_bp + yyless_macro_arg - YY_MORE_ADJ; \
		YY_DO_BEFORE_ACTION; /* set up yytext again */ \
		} \
	while ( 0 )
#define unput(c) yyunput( c, (yytext_ptr)  )

#ifndef YY_STRUCT_YY_BUFFER_STATE
#define YY_STRUCT_YY_BUFFER_STATE
struct yy_buffer_state
	{
	FILE *yy_input_file;

	char *yy_ch_buf;		/* input buffer */
	char *yy_buf_pos;		/* current position in input buffer */

	/* Size of input buffer in bytes, not including room for EOB
	 * characters.
	 */
	int yy_buf_size;

	/* Number of characters read into yy_ch_buf, not including EOB
	 * characters.
	 */
	int yy_n_chars;

	/* Whether we "own" the buffer - i.e., we know we created it,
	 * and can realloc() it to grow it, and should free() it to
	 * delete it.
	 */
	int yy_is_our_buffer;

	/* Whether this is an "interactive" input source; if so, and
	 * if we're using stdio for input, then we want to use getc()
	 * instead of fread(), to make sure we stop fetching input after
	 * each newline.
	 */
	int yy_is_interactive;

	/* Whether we're considered to be at the beginning of a line.
	 * If so, '^' rules will be active on the next match, otherwise
	 * not.
	 */
	int yy_at_bol;

    int yy_bs_lineno; /**< The line count. */
    int yy_bs_column; /**< The column count. */

	/* Whether to try to fill the input buffer when we reach the
	 * end of it.
	 */
	int yy_fill_buffer;

	int yy_buffer_status;

#define YY_BUFFER_NEW 0
#define YY_BUFFER_NORMAL 1
	/* When an EOF's been seen but there's still some text to process
	 * then we mark the buffer as YY_EOF_PENDING, to indicate that we
	 * shouldn't try reading from the input source any more.  We might
	 * still have a bunch of tokens to match, though, because of
	 * possible backing-up.
	 *
	 * When we actually see the EOF, we change the status to "new"
	 * (via yyrestart()), so that the user can continue scanning by
	 * just pointing yyin at a new input file.
	 */
#define YY_BUFFER_EOF_PENDING 2

	};
#endif /* !YY_STRUCT_YY_BUFFER_STATE */

/* Stack of input buffers. */
static size_t yy_buffer_stack_top = 0; /**< index of top of stack. */
static size_t yy_buffer_stack_max = 0; /**< capacity of stack. */
static YY_BUFFER_STATE * yy_buffer_stack = NULL; /**< Stack as an array. */

/* We provide macros for accessing buffer states in case in the
 * future we want to put the buffer states in a more general
 * "scanner state".
 *
 * Returns the top of the stack, or NULL.
 */
#define YY_CURRENT_BUFFER ( (yy_buffer_stack) \
                          ? (yy_buffer_stack)[(yy_buffer_stack_top)] \
                          : NULL)
/* Same as previous macro, but useful when we know that the buffer stack is not
 * NULL or when we need an lvalue. For internal use only.
 */
#define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]

/* yy_hold_char holds the character lost when yytext is formed. */
static char yy_hold_char;
static int yy_n_chars;		/* number of characters read into yy_ch_buf */
int yyleng;

/* Points to current character in buffer. */
static char *yy_c_buf_p = NULL;
static int yy_init = 0;		/* whether we need to initialize */
static int yy_start = 0;	/* start state number */

/* Flag which is used to allow yywrap()'s to do buffer switches
 * instead of setting up a fresh yyin.  A bit of a hack ...
 */
static int yy_did_buffer_switch_on_eof;

void yyrestart ( FILE *input_file  );
void yy_switch_to_buffer ( YY_BUFFER_STATE new_buffer  );
YY_BUFFER_STATE yy_create_buffer ( FILE *file, int size  );
void yy_delete_buffer ( YY_BUFFER_STATE b  );
void yy_flush_buffer ( YY_BUFFER_STATE b  );
void yypush_buffer_state ( YY_BUFFER_STATE new_buffer  );
void yypop_buffer_state ( void );

static void yyensure_buffer_stack ( void );
static void yy_load_buffer_state ( void );
static void yy_init_buffer ( YY_BUFFER_STATE b, FILE *file  );
#define YY_FLUSH_BUFFER yy_flush_buffer( YY_CURRENT_BUFFER )

YY_BUFFER_STATE yy_scan_buffer ( char *base, yy_size_t size  );
YY_BUFFER_STATE yy_scan_string ( const char *yy_str  );
YY_BUFFER_STATE yy_scan_bytes ( const char *bytes, int len  );

void *yyalloc ( yy_size_t  );
void *yyrealloc ( void *, yy_size_t  );
void yyfree ( void *  );

#define yy_new_buffer yy_create_buffer
#define yy_set_interactive(is_interactive) \
	{ \
	if ( ! YY_CURRENT_BUFFER ){ \
        yyensure_buffer_stack (); \
		YY_CURRENT_BUFFER_LVALUE =    \
            yy_create_buffer( yyin, YY_BUF_SIZE ); \
	} \
	YY_CURRENT_BUFFER_LVALUE->yy_is_interactive = is_interactive; \
	}
#define yy_set_bol(at_bol) \
	{ \
	if ( ! YY_CURRENT_BUFFER ){\
        yyensure_buffer_stack (); \
		YY_CURRENT_BUFFER_LVALUE =    \
            yy_create_buffer( yyin, YY_BUF_SIZE ); \
	} \
	YY_CURRENT_BUFFER_LVALUE->yy_at_bol = at_bol; \
	}
#define YY_AT_BOL() (YY_CURRENT_BUFFER_LVALUE->yy_at_bol)

/* Begin user sect3 */

#define yywrap() (/*CONSTCOND*/1)
#define YY_SKIP_YYWRAP
typedef flex_uint8_t YY_CHAR;

FILE *yyin = NULL, *yyout = NULL;

typedef int yy_state_type;

extern int yylineno;
int yylineno = 1;

extern char *yytext;
#ifdef yytext_ptr
#undef yytext_ptr
#endif
#define yytext_ptr yytext

static const flex_int16_t yy_nxt[][128] =
    {
    {
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0
    },

    {
        3,    4,    4,    4,    4,    4,    4,    4,    4,    5,
        6,    4,    4,    4,    4,    4,    4,    4,    4,    4,
        4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
        4,    4,    5,    4,    4,    4,    4,    4,    4,    4,
        7,    8,    9,   10,   11,   12,   13,   14,   15,   16,
       16,   16,   16,   16,   16,   16,   16,   16,    4,    4,
       17,   18,   19,    4,    4,   20,   21,   22,   23,   24,

       25,   26,   13,   27,   13,   13,   28,   29,   30,   31,
       32,   13,   33,   34,   35,   36,   37,   38,   39,   13,
       13,   40,    4,   41,   42,   13,    4,   20,   21,   22,
       23,   24,   25,   26,   13,   27,   13,   13,   28,   29,
       43,   31,   13,   13,   33,   44,   45,   36,   37,   46,
       39,   13,   13,    4,    4,    4,    4,    4
    },

    {
        3,    4,    4,    4,    4,    4,    4,    4,    4,    5,
        6,    4,    4,    4,    4,    4,    4,    4,    4,    4,
        4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
        4,    4,    5,    4,    4,    4,    4,    4,    4,    4,

        7,    8,    9,   10,   11,   12,   13,   14,   15,   16,
       16,   16,   16,   16,   16,   16,   16,   16,    4,    4,
       17,   18,   19,    4,    4,   20,   21,   22,   23,   24,
       25,   26,   13,   27,   13,   13,   28,   29,   30,   31,
       32,   13,   33,   34,   35,   36,   37,   38,   39,   13,
       13,   40,    4,   41,   42,   13,    4,   20,   21,   22,
       23,   24,   25,   26,   13,   27,   13,   13,   28,   29,
       43,   31,   13,   13,   33,   44,   45,   36,   37,   46,
       39,   13,   13,    4,    4,    4,    4,    4
    },

    {
       -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,

       -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,
       -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,
       -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,
       -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,
       -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,
       -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,
       -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,
       -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,
       -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,
       -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,

       -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3,
       -3,   -3,   -3,   -3,   -3,   -3,   -3,   -3
    },

    {
        3,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,
       -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,
       -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,
       -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,
       -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,
       -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,
       -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,
       -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,

       -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,
       -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,
       -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,
       -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,
       -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4
    },

    {
        3,   -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,
       -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,
       -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,
       -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,
       -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,

       -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,
       -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,
       -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,
       -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,
       -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,
       -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,
       -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5,
       -5,   -5,   -5,   -5,   -5,   -5,   -5,   -5
    },

    {
        3,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,
       -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,

       -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,
       -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,
       -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,
       -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,
       -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,
       -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,
       -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,
       -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,
       -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,
       -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,

       -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6
    },

    {
        3,   -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,
       -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,
       -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,
       -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,
       -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,
       -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,
       -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,
       -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,
       -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,

       -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,
       -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,
       -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7,
       -7,   -7,   -7,   -7,   -7,   -7,   -7,   -7
    },

    {
        3,   -8,   -8,   -8,   -8,   -8,   -8,   -8,   -8,   -8,
       -8,   -8,   -8,   -8,   -8,   -8,   -8,   -8,   -8,   -8,
       -8,   -8,   -8,   -8,   -8,   -8,   -8,   -8,   -8,   -8,
       -8,   -8,   -8,   -8,   -8,   -8,   -8,   -8,   -8,   -8,
       -8,   -8,   -8,   -8,   -8,   -8,   -8,   -8,   -8,   -8,
       -8,   -8,   -8,   -8,   -8,   -8,   -8,   -8,   -8,   -8,

       -8,   -8,   -8,   -8,   -8,   -8,   -8,   -8,   -8,   -8,
       -8,   -8,   -8,   -8,   -8,   -8,   -8,   -8,   -8,   -8,
       -8,   -8,   -8,   -8,   -8,   -8,   -8,   -8,   -8,   -8,
       -8,   -8,   -8,   -8,   -8,   -8,   -8,   -8,   -8,   -8,
       -8,   -8,   -8,   -8,   -8,   -8,   -8,   -8,   -8,   -8,
       -8,   -8,   -8,   -8,   -8,   -8,   -8,   -8,   -8,   -8,
       -8,   -8,   -8,   -8,   -8,   -8,   -8,   -8
    },

    {
        3,   -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,
       -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,
       -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,

       -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,
       -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,
       -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,
       -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,
       -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,
       -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,
       -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,
       -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,
       -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9,
       -9,   -9,   -9,   -9,   -9,   -9,   -9,   -9

    },

    {
        3,  -10,  -10,  -10,  -10,  -10,  -10,  -10,  -10,  -10,
      -10,  -10,  -10,  -10,  -10,  -10,  -10,  -10,  -10,  -10,
      -10,  -10,  -10,  -10,  -10,  -10,  -10,  -10,  -10,  -10,
      -10,  -10,  -10,  -10,  -10,  -10,  -10,  -10,  -10,  -10,
      -10,  -10,  -10,  -10,  -10,  -10,  -10,  -10,  -10,  -10,
      -10,  -10,  -10,  -10,  -10,  -10,  -10,  -10,  -10,  -10,
      -10,  -10,  -10,  -10,  -10,  -10,  -10,  -10,  -10,  -10,
      -10,  -10,  -10,  -10,  -10,  -10,  -10,  -10,  -10,  -10,
      -10,  -10,  -10,  -10,  -10,  -10,  -10,  -10,  -10,  -10,
      -10,  -10,  -10,  -10,  -10,  -10,  -10,  -10,  -10,  -10,

      -10,  -10,  -10,  -10,  -10,  -10,  -10,  -10,  -10,  -10,
      -10,  -10,  -10,  -10,  -10,  -10,  -10,  -10,  -10,  -10,
      -10,  -10,  -10,  -10,  -10,  -10,  -10,  -10
    },

    {
        3,  -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11,
      -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11,
      -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11,
      -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11,
      -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11,
      -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11,
      -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11,

      -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11,
      -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11,
      -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11,
      -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11,
      -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11,
      -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11
    },

    {
        3,  -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,
      -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,
      -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,
      -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,

      -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,
      -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,
      -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,
      -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,
      -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,
      -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,
      -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,
      -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,
      -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12
    },

    {
        3,  -13,  -13,  -13,  -13,  -13,  -13,  -13,  -13,  -13,

      -13,  -13,  -13,  -13,  -13,  -13,  -13,  -13,  -13,  -13,
      -13,  -13,  -13,  -13,  -13,  -13,  -13,  -13,  -13,  -13,
      -13,  -13,  -13,  -13,  -13,  -13,  -13,  -13,  -13,  -13,
      -13,  -13,  -13,  -13,  -13,  -13,   47,  -13,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  -13,  -13,
      -13,  -13,  -13,  -13,  -13,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,  -13,  -13,  -13,  -13,   47,  -13,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,  -13,  -13,  -13,  -13,  -13
    },

    {
        3,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,
      -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,
      -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,
      -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,
      -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,
      -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,
      -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,
      -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,

      -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,
      -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,
      -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,
      -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,
      -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14
    },

    {
        3,  -15,  -15,  -15,  -15,  -15,  -15,  -15,  -15,  -15,
      -15,  -15,  -15,  -15,  -15,  -15,  -15,  -15,  -15,  -15,
      -15,  -15,  -15,  -15,  -15,  -15,  -15,  -15,  -15,  -15,
      -15,  -15,  -15,  -15,  -15,  -15,  -15,  -15,  -15,  -15,
      -15,  -15,  -15,  -15,  -15,  -15,   48,  -15,   49,   49,

       49,   49,   49,   49,   49,   49,   49,   49,  -15,  -15,
      -15,  -15,  -15,  -15,  -15,   47,   47,   47,   47,   50,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   51,   47,
       47,  -15,  -15,  -15,  -15,   47,  -15,   47,   47,   47,
       47,   50,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       51,   47,   47,  -15,  -15,  -15,  -15,  -15
    },

    {
        3,  -16,  -16,  -16,  -16,  -16,  -16,  -16,  -16,  -16,
      -16,  -16,  -16,  -16,  -16,  -16,  -16,  -16,  -16,  -16,

      -16,  -16,  -16,  -16,  -16,  -16,  -16,  -16,  -16,  -16,
      -16,  -16,  -16,  -16,  -16,  -16,  -16,  -16,  -16,  -16,
      -16,  -16,  -16,  -16,  -16,  -16,   48,  -16,   49,   49,
       49,   49,   49,   49,   49,   49,   49,   49,  -16,  -16,
      -16,  -16,  -16,  -16,  -16,   47,   47,   47,   47,   50,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,  -16,  -16,  -16,  -16,   47,  -16,   47,   47,   47,
       47,   50,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47,   47,   47,  -16,  -16,  -16,  -16,  -16
    },

    {
        3,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,
      -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,
      -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,
      -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,
      -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,
      -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,
      -17,   52,   53,  -17,  -17,  -17,  -17,  -17,  -17,  -17,
      -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,
      -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,

      -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,
      -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,
      -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,
      -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17
    },

    {
        3,  -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,
      -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,
      -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,
      -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,
      -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,
      -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,

      -18,   54,  -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,
      -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,
      -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,
      -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,
      -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,
      -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,
      -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18
    },

    {
        3,  -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,
      -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,
      -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,

      -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,
      -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,
      -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,
      -19,   55,  -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,
      -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,
      -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,
      -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,
      -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,
      -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19,
      -19,  -19,  -19,  -19,  -19,  -19,  -19,  -19

    },

    {
        3,  -20,  -20,  -20,  -20,  -20,  -20,  -20,  -20,  -20,
      -20,  -20,  -20,  -20,  -20,  -20,  -20,  -20,  -20,  -20,
      -20,  -20,  -20,  -20,  -20,  -20,  -20,  -20,  -20,  -20,
      -20,  -20,  -20,  -20,  -20,  -20,  -20,  -20,  -20,  -20,
      -20,  -20,  -20,  -20,  -20,  -20,   47,  -20,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  -20,  -20,
      -20,  -20,  -20,  -20,  -20,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   56,   47,
       47,   57,   47,   47,   58,   47,   47,   47,   47,   47,
       47,  -20,  -20,  -20,  -20,   47,  -20,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       56,   47,   47,   57,   47,   47,   58,   47,   47,   47,
       47,   47,   47,  -20,  -20,  -20,  -20,  -20
    },

    {
        3,  -21,  -21,  -21,  -21,  -21,  -21,  -21,  -21,  -21,
      -21,  -21,  -21,  -21,  -21,  -21,  -21,  -21,  -21,  -21,
      -21,  -21,  -21,  -21,  -21,  -21,  -21,  -21,  -21,  -21,
      -21,  -21,  -21,  -21,  -21,  -21,  -21,  -21,  -21,  -21,
      -21,  -21,  -21,  -21,  -21,  -21,   47,  -21,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  -21,  -21,
      -21,  -21,  -21,  -21,  -21,   47,   47,   47,   47,   59,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   60,   47,   47,   47,   47,
       47,  -21,  -21,  -21,  -21,   47,  -21,   47,   47,   47,
       47,   59,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   60,   47,   47,
       47,   47,   47,  -21,  -21,  -21,  -21,  -21
    },

    {
        3,  -22,  -22,  -22,  -22,  -22,  -22,  -22,  -22,  -22,
      -22,  -22,  -22,  -22,  -22,  -22,  -22,  -22,  -22,  -22,
      -22,  -22,  -22,  -22,  -22,  -22,  -22,  -22,  -22,  -22,
      -22,  -22,  -22,  -22,  -22,  -22,  -22,  -22,  -22,  -22,

      -22,  -22,  -22,  -22,  -22,  -22,   47,  -22,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  -22,  -22,
      -22,  -22,  -22,  -22,  -22,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   61,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,  -22,  -22,  -22,  -22,   47,  -22,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   61,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,  -22,  -22,  -22,  -22,  -22
    },

    {
        3,  -23,  -23,  -23,  -23,  -23,  -23,  -23,  -23,  -23,

      -23,  -23,  -23,  -23,  -23,  -23,  -23,  -23,  -23,  -23,
      -23,  -23,  -23,  -23,  -23,  -23,  -23,  -23,  -23,  -23,
      -23,  -23,  -23,  -23,  -23,  -23,  -23,  -23,  -23,  -23,
      -23,  -23,  -23,  -23,  -23,  -23,   47,  -23,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  -23,  -23,
      -23,  -23,  -23,  -23,  -23,   47,   47,   47,   47,   47,
       47,   47,   47,   62,   47,   47,   47,   47,   47,   63,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,  -23,  -23,  -23,  -23,   47,  -23,   47,   47,   47,
       47,   47,   47,   47,   47,   62,   47,   47,   47,   47,

       47,   63,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,  -23,  -23,  -23,  -23,  -23
    },

    {
        3,  -24,  -24,  -24,  -24,  -24,  -24,  -24,  -24,  -24,
      -24,  -24,  -24,  -24,  -24,  -24,  -24,  -24,  -24,  -24,
      -24,  -24,  -24,  -24,  -24,  -24,  -24,  -24,  -24,  -24,
      -24,  -24,  -24,  -24,  -24,  -24,  -24,  -24,  -24,  -24,
      -24,  -24,  -24,  -24,  -24,  -24,   47,  -24,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  -24,  -24,
      -24,  -24,  -24,  -24,  -24,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   64,   47,   65,   47,

       47,   47,   66,   47,   47,   47,   67,   47,   68,   47,
       47,  -24,  -24,  -24,  -24,   47,  -24,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   64,   47,
       65,   47,   47,   47,   66,   47,   47,   47,   67,   47,
       68,   47,   47,  -24,  -24,  -24,  -24,  -24
    },

    {
        3,  -25,  -25,  -25,  -25,  -25,  -25,  -25,  -25,  -25,
      -25,  -25,  -25,  -25,  -25,  -25,  -25,  -25,  -25,  -25,
      -25,  -25,  -25,  -25,  -25,  -25,  -25,  -25,  -25,  -25,
      -25,  -25,  -25,  -25,  -25,  -25,  -25,  -25,  -25,  -25,
      -25,  -25,  -25,  -25,  -25,  -25,   47,  -25,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,  -25,  -25,
      -25,  -25,  -25,  -25,  -25,   69,   47,   47,   47,   47,
       47,   47,   47,   70,   47,   47,   47,   47,   47,   71,
       47,   47,   72,   47,   47,   47,   47,   47,   47,   47,
       47,  -25,  -25,  -25,  -25,   47,  -25,   69,   47,   47,
       47,   47,   47,   47,   47,   70,   47,   47,   47,   47,
       47,   71,   47,   47,   72,   47,   47,   47,   47,   47,
       47,   47,   47,  -25,  -25,  -25,  -25,  -25
    },

    {
        3,  -26,  -26,  -26,  -26,  -26,  -26,  -26,  -26,  -26,
      -26,  -26,  -26,  -26,  -26,  -26,  -26,  -26,  -26,  -26,

      -26,  -26,  -26,  -26,  -26,  -26,  -26,  -26,  -26,  -26,
      -26,  -26,  -26,  -26,  -26,  -26,  -26,  -26,  -26,  -26,
      -26,  -26,  -26,  -26,  -26,  -26,   47,  -26,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  -26,  -26,
      -26,  -26,  -26,  -26,  -26,   73,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,  -26,  -26,  -26,  -26,   47,  -26,   73,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47,   47,   47,  -26,  -26,  -26,  -26,  -26
    },

    {
        3,  -27,  -27,  -27,  -27,  -27,  -27,  -27,  -27,  -27,
      -27,  -27,  -27,  -27,  -27,  -27,  -27,  -27,  -27,  -27,
      -27,  -27,  -27,  -27,  -27,  -27,  -27,  -27,  -27,  -27,
      -27,  -27,  -27,  -27,  -27,  -27,  -27,  -27,  -27,  -27,
      -27,  -27,  -27,  -27,  -27,  -27,   47,  -27,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  -27,  -27,
      -27,  -27,  -27,  -27,  -27,   47,   47,   47,   74,   47,
       75,   47,   47,   47,   47,   47,   47,   47,   76,   47,
       47,   47,   77,   47,   47,   47,   47,   47,   47,   47,

       47,  -27,  -27,  -27,  -27,   47,  -27,   47,   47,   47,
       74,   47,   75,   47,   47,   47,   47,   47,   47,   47,
       76,   47,   47,   47,   77,   47,   47,   47,   47,   47,
       47,   47,   47,  -27,  -27,  -27,  -27,  -27
    },

    {
        3,  -28,  -28,  -28,  -28,  -28,  -28,  -28,  -28,  -28,
      -28,  -28,  -28,  -28,  -28,  -28,  -28,  -28,  -28,  -28,
      -28,  -28,  -28,  -28,  -28,  -28,  -28,  -28,  -28,  -28,
      -28,  -28,  -28,  -28,  -28,  -28,  -28,  -28,  -28,  -28,
      -28,  -28,  -28,  -28,  -28,  -28,   47,  -28,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  -28,  -28,

      -28,  -28,  -28,  -28,  -28,   78,   47,   47,   47,   79,
       47,   47,   47,   47,   47,   47,   47,   47,   80,   81,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,  -28,  -28,  -28,  -28,   47,  -28,   78,   47,   47,
       47,   79,   47,   47,   47,   47,   47,   47,   47,   47,
       80,   81,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,  -28,  -28,  -28,  -28,  -28
    },

    {
        3,  -29,  -29,  -29,  -29,  -29,  -29,  -29,  -29,  -29,
      -29,  -29,  -29,  -29,  -29,  -29,  -29,  -29,  -29,  -29,
      -29,  -29,  -29,  -29,  -29,  -29,  -29,  -29,  -29,  -29,

      -29,  -29,  -29,  -29,  -29,  -29,  -29,  -29,  -29,  -29,
      -29,  -29,  -29,  -29,  -29,  -29,   47,  -29,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  -29,  -29,
      -29,  -29,  -29,  -29,  -29,   82,   47,   47,   47,   47,
       47,   47,   47,   83,   47,   47,   47,   47,   47,   84,
       47,   47,   85,   47,   47,   47,   47,   47,   47,   47,
       47,  -29,  -29,  -29,  -29,   47,  -29,   82,   47,   47,
       47,   47,   47,   47,   47,   83,   47,   47,   47,   47,
       47,   84,   47,   47,   85,   47,   47,   47,   47,   47,
       47,   47,   47,  -29,  -29,  -29,  -29,  -29

    },

    {
        3,  -30,  -30,  -30,  -30,  -30,  -30,  -30,  -30,  -30,
      -30,  -30,  -30,  -30,  -30,  -30,  -30,  -30,  -30,  -30,
      -30,  -30,  -30,  -30,  -30,  -30,  -30,  -30,  -30,  -30,
      -30,  -30,  -30,  -30,  -30,  -30,  -30,  -30,  -30,  -30,
      -30,  -30,  -30,  -30,  -30,  -30,   47,  -30,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  -30,  -30,
      -30,  -30,  -30,  -30,  -30,   86,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   87,
       47,   88,   89,   47,   47,   90,   47,   47,   47,   47,
       47,  -30,  -30,  -30,  -30,   47,  -30,   86,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   87,   47,   88,   89,   47,   47,   90,   47,   47,
       47,   47,   47,  -30,  -30,  -30,  -30,  -30
    },

    {
        3,  -31,  -31,  -31,  -31,  -31,  -31,  -31,  -31,  -31,
      -31,  -31,  -31,  -31,  -31,  -31,  -31,  -31,  -31,  -31,
      -31,  -31,  -31,  -31,  -31,  -31,  -31,  -31,  -31,  -31,
      -31,  -31,  -31,  -31,  -31,  -31,  -31,  -31,  -31,  -31,
      -31,  -31,  -31,  -31,  -31,  -31,   47,  -31,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  -31,  -31,
      -31,  -31,  -31,  -31,  -31,   47,   47,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   91,   47,   47,   47,   47,   47,   47,   47,
       47,  -31,  -31,  -31,  -31,   47,  -31,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   91,   47,   47,   47,   47,   47,
       47,   47,   47,  -31,  -31,  -31,  -31,  -31
    },

    {
        3,  -32,  -32,  -32,  -32,  -32,  -32,  -32,  -32,  -32,
      -32,  -32,  -32,  -32,  -32,  -32,  -32,  -32,  -32,  -32,
      -32,  -32,  -32,  -32,  -32,  -32,  -32,  -32,  -32,  -32,
      -32,  -32,  -32,  -32,  -32,  -32,  -32,  -32,  -32,  -32,

      -32,  -32,  -32,  -32,  -32,  -32,   47,  -32,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  -32,  -32,
      -32,  -32,  -32,  -32,  -32,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,  -32,  -32,  -32,  -32,   47,  -32,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,  -32,  -32,  -32,  -32,  -32
    },

    {
        3,  -33,  -33,  -33,  -33,  -33,  -33,  -33,  -33,  -33,

      -33,  -33,  -33,  -33,  -33,  -33,  -33,  -33,  -33,  -33,
      -33,  -33,  -33,  -33,  -33,  -33,  -33,  -33,  -33,  -33,
      -33,  -33,  -33,  -33,  -33,  -33,  -33,  -33,  -33,  -33,
      -33,  -33,  -33,  -33,  -33,  -33,   47,  -33,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  -33,  -33,
      -33,  -33,  -33,  -33,  -33,   47,   47,   47,   47,   92,
       47,   47,   47,   47,   47,   47,   47,   47,   93,   94,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,  -33,  -33,  -33,  -33,   47,  -33,   47,   47,   47,
       47,   92,   47,   47,   47,   47,   47,   47,   47,   47,

       93,   94,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,  -33,  -33,  -33,  -33,  -33
    },

    {
        3,  -34,  -34,  -34,  -34,  -34,  -34,  -34,  -34,  -34,
      -34,  -34,  -34,  -34,  -34,  -34,  -34,  -34,  -34,  -34,
      -34,  -34,  -34,  -34,  -34,  -34,  -34,  -34,  -34,  -34,
      -34,  -34,  -34,  -34,  -34,  -34,  -34,  -34,  -34,  -34,
      -34,  -34,  -34,  -34,  -34,  -34,   47,  -34,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  -34,  -34,
      -34,  -34,  -34,  -34,  -34,   95,   47,   47,   47,   96,
       47,   47,   47,   97,   47,   47,   47,   47,   47,   47,

       47,   98,   47,   47,   99,   47,   47,   47,   47,   47,
       47,  -34,  -34,  -34,  -34,   47,  -34,   95,   47,   47,
       47,   96,   47,   47,   47,   97,   47,   47,   47,   47,
       47,   47,   47,   98,   47,   47,   99,   47,   47,   47,
       47,   47,   47,  -34,  -34,  -34,  -34,  -34
    },

    {
        3,  -35,  -35,  -35,  -35,  -35,  -35,  -35,  -35,  -35,
      -35,  -35,  -35,  -35,  -35,  -35,  -35,  -35,  -35,  -35,
      -35,  -35,  -35,  -35,  -35,  -35,  -35,  -35,  -35,  -35,
      -35,  -35,  -35,  -35,  -35,  -35,  -35,  -35,  -35,  -35,
      -35,  -35,  -35,  -35,  -35,  -35,   47,  -35,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,  -35,  -35,
      -35,  -35,  -35,  -35,  -35,  100,   47,   47,   47,   47,
      101,   47,   47,   47,   47,   47,   47,   47,  102,  103,
       47,   47,  104,   47,   47,   47,   47,   47,   47,   47,
       47,  -35,  -35,  -35,  -35,   47,  -35,  100,   47,   47,
       47,   47,  101,   47,   47,   47,   47,   47,   47,   47,
      102,  103,   47,   47,  104,   47,   47,   47,   47,   47,
       47,   47,   47,  -35,  -35,  -35,  -35,  -35
    },

    {
        3,  -36,  -36,  -36,  -36,  -36,  -36,  -36,  -36,  -36,
      -36,  -36,  -36,  -36,  -36,  -36,  -36,  -36,  -36,  -36,

      -36,  -36,  -36,  -36,  -36,  -36,  -36,  -36,  -36,  -36,
      -36,  -36,  -36,  -36,  -36,  -36,  -36,  -36,  -36,  -36,
      -36,  -36,  -36,  -36,  -36,  -36,   47,  -36,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  -36,  -36,
      -36,  -36,  -36,  -36,  -36,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  105,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,  -36,  -36,  -36,  -36,   47,  -36,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
      105,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47,   47,   47,  -36,  -36,  -36,  -36,  -36
    },

    {
        3,  -37,  -37,  -37,  -37,  -37,  -37,  -37,  -37,  -37,
      -37,  -37,  -37,  -37,  -37,  -37,  -37,  -37,  -37,  -37,
      -37,  -37,  -37,  -37,  -37,  -37,  -37,  -37,  -37,  -37,
      -37,  -37,  -37,  -37,  -37,  -37,  -37,  -37,  -37,  -37,
      -37,  -37,  -37,  -37,  -37,  -37,   47,  -37,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  -37,  -37,
      -37,  -37,  -37,  -37,  -37,  106,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47,  -37,  -37,  -37,  -37,   47,  -37,  106,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,  -37,  -37,  -37,  -37,  -37
    },

    {
        3,  -38,  -38,  -38,  -38,  -38,  -38,  -38,  -38,  -38,
      -38,  -38,  -38,  -38,  -38,  -38,  -38,  -38,  -38,  -38,
      -38,  -38,  -38,  -38,  -38,  -38,  -38,  -38,  -38,  -38,
      -38,  -38,  -38,  -38,  -38,  -38,  -38,  -38,  -38,  -38,
      -38,  -38,  -38,  -38,  -38,  -38,   47,  -38,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  -38,  -38,

      -38,  -38,  -38,  -38,  -38,   47,   47,   47,   47,  107,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,  -38,  -38,  -38,  -38,   47,  -38,   47,   47,   47,
       47,  107,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,  -38,  -38,  -38,  -38,  -38
    },

    {
        3,  -39,  -39,  -39,  -39,  -39,  -39,  -39,  -39,  -39,
      -39,  -39,  -39,  -39,  -39,  -39,  -39,  -39,  -39,  -39,
      -39,  -39,  -39,  -39,  -39,  -39,  -39,  -39,  -39,  -39,

      -39,  -39,  -39,  -39,  -39,  -39,  -39,  -39,  -39,  -39,
      -39,  -39,  -39,  -39,  -39,  -39,   47,  -39,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  -39,  -39,
      -39,  -39,  -39,  -39,  -39,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,  108,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,  -39,  -39,  -39,  -39,   47,  -39,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,  108,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,  -39,  -39,  -39,  -39,  -39

    },

    {
        3,  -40,  -40,  -40,  -40,  -40,  -40,  -40,  -40,  -40,
      -40,  -40,  -40,  -40,  -40,  -40,  -40,  -40,  -40,  -40,
      -40,  -40,  -40,  -40,  -40,  -40,  -40,  -40,  -40,  -40,
      -40,  -40,  -40,  -40,  -40,  -40,  -40,  -40,  -40,  -40,
      -40,  -40,  -40,  -40,  -40,  -40,  -40,  -40,  -40,  -40,
      -40,  -40,  -40,  -40,  -40,  -40,  -40,  -40,  -40,  -40,
      -40,  -40,  -40,  -40,  -40,  -40,  -40,  -40,  -40,  -40,
      -40,  -40,  -40,  -40,  -40,  -40,  -40,  -40,  -40,  -40,
      -40,  -40,  -40,  -40,  -40,  -40,  -40,  -40,  -40,  -40,
      -40,  -40,  -40,  -40,  -40,  -40,  -40,  -40,  -40,  -40,

      -40,  -40,  -40,  -40,  -40,  -40,  -40,  -40,  -40,  -40,
      -40,  -40,  -40,  -40,  -40,  -40,  -40,  -40,  -40,  -40,
      -40,  -40,  -40,  -40,  -40,  -40,  -40,  -40
    },

    {
        3,  -41,  -41,  -41,  -41,  -41,  -41,  -41,  -41,  -41,
      -41,  -41,  -41,  -41,  -41,  -41,  -41,  -41,  -41,  -41,
      -41,  -41,  -41,  -41,  -41,  -41,  -41,  -41,  -41,  -41,
      -41,  -41,  -41,  -41,  -41,  -41,  -41,  -41,  -41,  -41,
      -41,  -41,  -41,  -41,  -41,  -41,  -41,  -41,  -41,  -41,
      -41,  -41,  -41,  -41,  -41,  -41,  -41,  -41,  -41,  -41,
      -41,  -41,  -41,  -41,  -41,  -41,  -41,  -41,  -41,  -41,

      -41,  -41,  -41,  -41,  -41,  -41,  -41,  -41,  -41,  -41,
      -41,  -41,  -41,  -41,  -41,  -41,  -41,  -41,  -41,  -41,
      -41,  -41,  -41,  -41,  -41,  -41,  -41,  -41,  -41,  -41,
      -41,  -41,  -41,  -41,  -41,  -41,  -41,  -41,  -41,  -41,
      -41,  -41,  -41,  -41,  -41,  -41,  -41,  -41,  -41,  -41,
      -41,  -41,  -41,  -41,  -41,  -41,  -41,  -41
    },

    {
        3,  -42,  -42,  -42,  -42,  -42,  -42,  -42,  -42,  -42,
      -42,  -42,  -42,  -42,  -42,  -42,  -42,  -42,  -42,  -42,
      -42,  -42,  -42,  -42,  -42,  -42,  -42,  -42,  -42,  -42,
      -42,  -42,  -42,  -42,  -42,  -42,  -42,  -42,  -42,  -42,

      -42,  -42,  -42,  -42,  -42,  -42,  -42,  -42,  -42,  -42,
      -42,  -42,  -42,  -42,  -42,  -42,  -42,  -42,  -42,  -42,
      -42,  -42,  -42,  -42,  -42,  -42,  -42,  -42,  -42,  -42,
      -42,  -42,  -42,  -42,  -42,  -42,  -42,  -42,  -42,  -42,
      -42,  -42,  -42,  -42,  -42,  -42,  -42,  -42,  -42,  -42,
      -42,  -42,  -42,  -42,  -42,  -42,  -42,  -42,  -42,  -42,
      -42,  -42,  -42,  -42,  -42,  -42,  -42,  -42,  -42,  -42,
      -42,  -42,  -42,  -42,  -42,  -42,  -42,  -42,  -42,  -42,
      -42,  -42,  -42,  -42,  -42,  -42,  -42,  -42
    },

    {
        3,  -43,  -43,  -43,  -43,  -43,  -43,  -43,  -43,  -43,

      -43,  -43,  -43,  -43,  -43,  -43,  -43,  -43,  -43,  -43,
      -43,  -43,  -43,  -43,  -43,  -43,  -43,  -43,  -43,  -43,
      -43,  -43,  -43,  -43,  -43,  -43,  -43,  -43,  -43,  -43,
      -43,  -43,  -43,  -43,  -43,  -43,   47,  -43,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  -43,  -43,
      -43,  -43,  -43,  -43,  -43,   86,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   87,
       47,   88,   89,   47,   47,   90,   47,   47,   47,   47,
       47,  -43,  -43,  -43,  -43,   47,  -43,   86,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47,   87,   47,   88,   89,   47,   47,   90,   47,   47,
       47,   47,   47,  -43,  -43,  -43,  -43,  -43
    },

    {
        3,  -44,  -44,  -44,  -44,  -44,  -44,  -44,  -44,  -44,
      -44,  -44,  -44,  -44,  -44,  -44,  -44,  -44,  -44,  -44,
      -44,  -44,  -44,  -44,  -44,  -44,  -44,  -44,  -44,  -44,
      -44,  -44,  -44,  -44,  -44,  -44,  -44,  -44,  -44,  -44,
      -44,  -44,  -44,  -44,  -44,  -44,   47,  -44,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  -44,  -44,
      -44,  -44,  -44,  -44,  -44,   95,   47,   47,   47,   96,
       47,   47,   47,   97,   47,   47,   47,   47,   47,   47,

       47,   98,   47,   47,   99,   47,   47,   47,   47,   47,
       47,  -44,  -44,  -44,  -44,   47,  -44,   95,   47,   47,
       47,   96,   47,   47,   47,   97,   47,   47,   47,   47,
       47,   47,   47,   98,   47,   47,   99,   47,   47,   47,
       47,   47,   47,  -44,  -44,  -44,  -44,  -44
    },

    {
        3,  -45,  -45,  -45,  -45,  -45,  -45,  -45,  -45,  -45,
      -45,  -45,  -45,  -45,  -45,  -45,  -45,  -45,  -45,  -45,
      -45,  -45,  -45,  -45,  -45,  -45,  -45,  -45,  -45,  -45,
      -45,  -45,  -45,  -45,  -45,  -45,  -45,  -45,  -45,  -45,
      -45,  -45,  -45,  -45,  -45,  -45,   47,  -45,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,  -45,  -45,
      -45,  -45,  -45,  -45,  -45,  100,   47,   47,   47,   47,
      101,   47,   47,   47,   47,   47,   47,   47,  102,  103,
       47,   47,  104,   47,   47,   47,   47,   47,   47,   47,
       47,  -45,  -45,  -45,  -45,   47,  -45,  100,   47,   47,
       47,   47,  101,   47,   47,   47,   47,   47,   47,   47,
      102,  103,   47,   47,  104,   47,   47,   47,   47,   47,
       47,   47,   47,  -45,  -45,  -45,  -45,  -45
    },

    {
        3,  -46,  -46,  -46,  -46,  -46,  -46,  -46,  -46,  -46,
      -46,  -46,  -46,  -46,  -46,  -46,  -46,  -46,  -46,  -46,

      -46,  -46,  -46,  -46,  -46,  -46,  -46,  -46,  -46,  -46,
      -46,  -46,  -46,  -46,  -46,  -46,  -46,  -46,  -46,  -46,
      -46,  -46,  -46,  -46,  -46,  -46,   47,  -46,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  -46,  -46,
      -46,  -46,  -46,  -46,  -46,   47,   47,   47,   47,  107,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,  -46,  -46,  -46,  -46,   47,  -46,   47,   47,   47,
       47,  107,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47,   47,   47,  -46,  -46,  -46,  -46,  -46
    },

    {
        3,  -47,  -47,  -47,  -47,  -47,  -47,  -47,  -47,  -47,
      -47,  -47,  -47,  -47,  -47,  -47,  -47,  -47,  -47,  -47,
      -47,  -47,  -47,  -47,  -47,  -47,  -47,  -47,  -47,  -47,
      -47,  -47,  -47,  -47,  -47,  -47,  -47,  -47,  -47,  -47,
      -47,  -47,  -47,  -47,  -47,  -47,   47,  -47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  -47,  -47,
      -47,  -47,  -47,  -47,  -47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47,  -47,  -47,  -47,  -47,   47,  -47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,  -47,  -47,  -47,  -47,  -47
    },

    {
        3,  -48,  -48,  -48,  -48,  -48,  -48,  -48,  -48,  -48,
      -48,  -48,  -48,  -48,  -48,  -48,  -48,  -48,  -48,  -48,
      -48,  -48,  -48,  -48,  -48,  -48,  -48,  -48,  -48,  -48,
      -48,  -48,  -48,  -48,  -48,  -48,  -48,  -48,  -48,  -48,
      -48,  -48,  -48,  -48,  -48,  -48,   47,  -48,  109,  109,
      109,  109,  109,  109,  109,  109,  109,  109,  -48,  -48,

      -48,  -48,  -48,  -48,  -48,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,  -48,  -48,  -48,  -48,   47,  -48,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,  -48,  -48,  -48,  -48,  -48
    },

    {
        3,  -49,  -49,  -49,  -49,  -49,  -49,  -49,  -49,  -49,
      -49,  -49,  -49,  -49,  -49,  -49,  -49,  -49,  -49,  -49,
      -49,  -49,  -49,  -49,  -49,  -49,  -49,  -49,  -49,  -49,

      -49,  -49,  -49,  -49,  -49,  -49,  -49,  -49,  -49,  -49,
      -49,  -49,  -49,  -49,  -49,  -49,   48,  -49,   49,   49,
       49,   49,   49,   49,   49,   49,   49,   49,  -49,  -49,
      -49,  -49,  -49,  -49,  -49,   47,   47,   47,   47,   50,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,  -49,  -49,  -49,  -49,   47,  -49,   47,   47,   47,
       47,   50,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,  -49,  -49,  -49,  -49,  -49

    },

    {
        3,  -50,  -50,  -50,  -50,  -50,  -50,  -50,  -50,  -50,
      -50,  -50,  -50,  -50,  -50,  -50,  -50,  -50,  -50,  -50,
      -50,  -50,  -50,  -50,  -50,  -50,  -50,  -50,  -50,  -50,
      -50,  -50,  -50,  -50,  -50,  -50,  -50,  -50,  -50,  -50,
      -50,  -50,  -50,  -50,  -50,  110,   47,  -50,  111,  111,
      111,  111,  111,  111,  111,  111,  111,  111,  -50,  -50,
      -50,  -50,  -50,  -50,  -50,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,  -50,  -50,  -50,  -50,   47,  -50,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,  -50,  -50,  -50,  -50,  -50
    },

    {
        3,  -51,  -51,  -51,  -51,  -51,  -51,  -51,  -51,  -51,
      -51,  -51,  -51,  -51,  -51,  -51,  -51,  -51,  -51,  -51,
      -51,  -51,  -51,  -51,  -51,  -51,  -51,  -51,  -51,  -51,
      -51,  -51,  -51,  -51,  -51,  -51,  -51,  -51,  -51,  -51,
      -51,  -51,  -51,  -51,  -51,  -51,   47,  -51,  112,  112,
      112,  112,  112,  112,  112,  112,  112,  112,  -51,  -51,
      -51,  -51,  -51,  -51,  -51,  112,  112,  112,  112,  112,

      112,  112,  112,  112,  112,  112,  112,  112,  112,  112,
      112,  112,  112,  112,  112,  112,  112,  112,  112,  112,
      112,  113,  113,  113,  113,  112,  113,  112,  112,  112,
      112,  112,  112,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,  -51,  -51,  -51,  -51,  -51
    },

    {
        3,  -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,
      -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,
      -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,
      -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,

      -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,
      -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,
      -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,
      -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,
      -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,
      -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,
      -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,
      -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,
      -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52
    },

    {
        3,  -53,  -53,  -53,  -53,  -53,  -53,  -53,  -53,  -53,

      -53,  -53,  -53,  -53,  -53,  -53,  -53,  -53,  -53,  -53,
      -53,  -53,  -53,  -53,  -53,  -53,  -53,  -53,  -53,  -53,
      -53,  -53,  -53,  -53,  -53,  -53,  -53,  -53,  -53,  -53,
      -53,  -53,  -53,  -53,  -53,  -53,  -53,  -53,  -53,  -53,
      -53,  -53,  -53,  -53,  -53,  -53,  -53,  -53,  -53,  -53,
      -53,  -53,  -53,  -53,  -53,  -53,  -53,  -53,  -53,  -53,
      -53,  -53,  -53,  -53,  -53,  -53,  -53,  -53,  -53,  -53,
      -53,  -53,  -53,  -53,  -53,  -53,  -53,  -53,  -53,  -53,
      -53,  -53,  -53,  -53,  -53,  -53,  -53,  -53,  -53,  -53,
      -53,  -53,  -53,  -53,  -53,  -53,  -53,  -53,  -53,  -53,

      -53,  -53,  -53,  -53,  -53,  -53,  -53,  -53,  -53,  -53,
      -53,  -53,  -53,  -53,  -53,  -53,  -53,  -53
    },

    {
        3,  -54,  -54,  -54,  -54,  -54,  -54,  -54,  -54,  -54,
      -54,  -54,  -54,  -54,  -54,  -54,  -54,  -54,  -54,  -54,
      -54,  -54,  -54,  -54,  -54,  -54,  -54,  -54,  -54,  -54,
      -54,  -54,  -54,  -54,  -54,  -54,  -54,  -54,  -54,  -54,
      -54,  -54,  -54,  -54,  -54,  -54,  -54,  -54,  -54,  -54,
      -54,  -54,  -54,  -54,  -54,  -54,  -54,  -54,  -54,  -54,
      -54,  -54,  -54,  -54,  -54,  -54,  -54,  -54,  -54,  -54,
      -54,  -54,  -54,  -54,  -54,  -54,  -54,  -54,  -54,  -54,

      -54,  -54,  -54,  -54,  -54,  -54,  -54,  -54,  -54,  -54,
      -54,  -54,  -54,  -54,  -54,  -54,  -54,  -54,  -54,  -54,
      -54,  -54,  -54,  -54,  -54,  -54,  -54,  -54,  -54,  -54,
      -54,  -54,  -54,  -54,  -54,  -54,  -54,  -54,  -54,  -54,
      -54,  -54,  -54,  -54,  -54,  -54,  -54,  -54
    },

    {
        3,  -55,  -55,  -55,  -55,  -55,  -55,  -55,  -55,  -55,
      -55,  -55,  -55,  -55,  -55,  -55,  -55,  -55,  -55,  -55,
      -55,  -55,  -55,  -55,  -55,  -55,  -55,  -55,  -55,  -55,
      -55,  -55,  -55,  -55,  -55,  -55,  -55,  -55,  -55,  -55,
      -55,  -55,  -55,  -55,  -55,  -55,  -55,  -55,  -55,  -55,

      -55,  -55,  -55,  -55,  -55,  -55,  -55,  -55,  -55,  -55,
      -55,  -55,  -55,  -55,  -55,  -55,  -55,  -55,  -55,  -55,
      -55,  -55,  -55,  -55,  -55,  -55,  -55,  -55,  -55,  -55,
      -55,  -55,  -55,  -55,  -55,  -55,  -55,  -55,  -55,  -55,
      -55,  -55,  -55,  -55,  -55,  -55,  -55,  -55,  -55,  -55,
      -55,  -55,  -55,  -55,  -55,  -55,  -55,  -55,  -55,  -55,
      -55,  -55,  -55,  -55,  -55,  -55,  -55,  -55,  -55,  -55,
      -55,  -55,  -55,  -55,  -55,  -55,  -55,  -55
    },

    {
        3,  -56,  -56,  -56,  -56,  -56,  -56,  -56,  -56,  -56,
      -56,  -56,  -56,  -56,  -56,  -56,  -56,  -56,  -56,  -56,

      -56,  -56,  -56,  -56,  -56,  -56,  -56,  -56,  -56,  -56,
      -56,  -56,  -56,  -56,  -56,  -56,  -56,  -56,  -56,  -56,
      -56,  -56,  -56,  -56,  -56,  -56,   47,  -56,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  -56,  -56,
      -56,  -56,  -56,  -56,  -56,   47,   47,   47,  114,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,  -56,  -56,  -56,  -56,   47,  -56,   47,   47,   47,
      114,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47,   47,   47,  -56,  -56,  -56,  -56,  -56
    },

    {
        3,  -57,  -57,  -57,  -57,  -57,  -57,  -57,  -57,  -57,
      -57,  -57,  -57,  -57,  -57,  -57,  -57,  -57,  -57,  -57,
      -57,  -57,  -57,  -57,  -57,  -57,  -57,  -57,  -57,  -57,
      -57,  -57,  -57,  -57,  -57,  -57,  -57,  -57,  -57,  -57,
      -57,  -57,  -57,  -57,  -57,  -57,   47,  -57,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  -57,  -57,
      -57,  -57,  -57,  -57,  -57,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,  115,   47,   47,   47,   47,

       47,  -57,  -57,  -57,  -57,   47,  -57,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,  115,   47,   47,
       47,   47,   47,  -57,  -57,  -57,  -57,  -57
    },

    {
        3,  -58,  -58,  -58,  -58,  -58,  -58,  -58,  -58,  -58,
      -58,  -58,  -58,  -58,  -58,  -58,  -58,  -58,  -58,  -58,
      -58,  -58,  -58,  -58,  -58,  -58,  -58,  -58,  -58,  -58,
      -58,  -58,  -58,  -58,  -58,  -58,  -58,  -58,  -58,  -58,
      -58,  -58,  -58,  -58,  -58,  -58,   47,  -58,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  -58,  -58,

      -58,  -58,  -58,  -58,  -58,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,  116,   47,   47,   47,   47,   47,   47,   47,
       47,  -58,  -58,  -58,  -58,   47,  -58,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,  116,   47,   47,   47,   47,   47,
       47,   47,   47,  -58,  -58,  -58,  -58,  -58
    },

    {
        3,  -59,  -59,  -59,  -59,  -59,  -59,  -59,  -59,  -59,
      -59,  -59,  -59,  -59,  -59,  -59,  -59,  -59,  -59,  -59,
      -59,  -59,  -59,  -59,  -59,  -59,  -59,  -59,  -59,  -59,

      -59,  -59,  -59,  -59,  -59,  -59,  -59,  -59,  -59,  -59,
      -59,  -59,  -59,  -59,  -59,  -59,   47,  -59,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  -59,  -59,
      -59,  -59,  -59,  -59,  -59,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,  117,   47,   47,   47,   47,   47,
       47,  -59,  -59,  -59,  -59,   47,  -59,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,  117,   47,   47,   47,
       47,   47,   47,  -59,  -59,  -59,  -59,  -59

    },

    {
        3,  -60,  -60,  -60,  -60,  -60,  -60,  -60,  -60,  -60,
      -60,  -60,  -60,  -60,  -60,  -60,  -60,  -60,  -60,  -60,
      -60,  -60,  -60,  -60,  -60,  -60,  -60,  -60,  -60,  -60,
      -60,  -60,  -60,  -60,  -60,  -60,  -60,  -60,  -60,  -60,
      -60,  -60,  -60,  -60,  -60,  -60,   47,  -60,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  -60,  -60,
      -60,  -60,  -60,  -60,  -60,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,  118,   47,   47,   47,   47,   47,   47,
       47,  -60,  -60,  -60,  -60,   47,  -60,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,  118,   47,   47,   47,   47,
       47,   47,   47,  -60,  -60,  -60,  -60,  -60
    },

    {
        3,  -61,  -61,  -61,  -61,  -61,  -61,  -61,  -61,  -61,
      -61,  -61,  -61,  -61,  -61,  -61,  -61,  -61,  -61,  -61,
      -61,  -61,  -61,  -61,  -61,  -61,  -61,  -61,  -61,  -61,
      -61,  -61,  -61,  -61,  -61,  -61,  -61,  -61,  -61,  -61,
      -61,  -61,  -61,  -61,  -61,  -61,   47,  -61,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  -61,  -61,
      -61,  -61,  -61,  -61,  -61,   47,   47,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,  119,   47,  120,   47,   47,   47,   47,
       47,  -61,  -61,  -61,  -61,   47,  -61,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,  119,   47,  120,   47,   47,
       47,   47,   47,  -61,  -61,  -61,  -61,  -61
    },

    {
        3,  -62,  -62,  -62,  -62,  -62,  -62,  -62,  -62,  -62,
      -62,  -62,  -62,  -62,  -62,  -62,  -62,  -62,  -62,  -62,
      -62,  -62,  -62,  -62,  -62,  -62,  -62,  -62,  -62,  -62,
      -62,  -62,  -62,  -62,  -62,  -62,  -62,  -62,  -62,  -62,

      -62,  -62,  -62,  -62,  -62,  -62,   47,  -62,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  -62,  -62,
      -62,  -62,  -62,  -62,  -62,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,  121,   47,   47,   47,   47,   47,   47,
       47,  -62,  -62,  -62,  -62,   47,  -62,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,  121,   47,   47,   47,   47,
       47,   47,   47,  -62,  -62,  -62,  -62,  -62
    },

    {
        3,  -63,  -63,  -63,  -63,  -63,  -63,  -63,  -63,  -63,

      -63,  -63,  -63,  -63,  -63,  -63,  -63,  -63,  -63,  -63,
      -63,  -63,  -63,  -63,  -63,  -63,  -63,  -63,  -63,  -63,
      -63,  -63,  -63,  -63,  -63,  -63,  -63,  -63,  -63,  -63,
      -63,  -63,  -63,  -63,  -63,  -63,   47,  -63,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  -63,  -63,
      -63,  -63,  -63,  -63,  -63,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,  -63,  -63,  -63,  -63,   47,  -63,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,  -63,  -63,  -63,  -63,  -63
    },

    {
        3,  -64,  -64,  -64,  -64,  -64,  -64,  -64,  -64,  -64,
      -64,  -64,  -64,  -64,  -64,  -64,  -64,  -64,  -64,  -64,
      -64,  -64,  -64,  -64,  -64,  -64,  -64,  -64,  -64,  -64,
      -64,  -64,  -64,  -64,  -64,  -64,  -64,  -64,  -64,  -64,
      -64,  -64,  -64,  -64,  -64,  -64,   47,  -64,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  -64,  -64,
      -64,  -64,  -64,  -64,  -64,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47,   47,   47,  122,   47,   47,   47,   47,   47,   47,
       47,  -64,  -64,  -64,  -64,   47,  -64,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,  122,   47,   47,   47,   47,
       47,   47,   47,  -64,  -64,  -64,  -64,  -64
    },

    {
        3,  -65,  -65,  -65,  -65,  -65,  -65,  -65,  -65,  -65,
      -65,  -65,  -65,  -65,  -65,  -65,  -65,  -65,  -65,  -65,
      -65,  -65,  -65,  -65,  -65,  -65,  -65,  -65,  -65,  -65,
      -65,  -65,  -65,  -65,  -65,  -65,  -65,  -65,  -65,  -65,
      -65,  -65,  -65,  -65,  -65,  -65,   47,  -65,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,  -65,  -65,
      -65,  -65,  -65,  -65,  -65,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,  123,   47,   47,   47,   47,   47,
       47,  -65,  -65,  -65,  -65,   47,  -65,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,  123,   47,   47,   47,
       47,   47,   47,  -65,  -65,  -65,  -65,  -65
    },

    {
        3,  -66,  -66,  -66,  -66,  -66,  -66,  -66,  -66,  -66,
      -66,  -66,  -66,  -66,  -66,  -66,  -66,  -66,  -66,  -66,

      -66,  -66,  -66,  -66,  -66,  -66,  -66,  -66,  -66,  -66,
      -66,  -66,  -66,  -66,  -66,  -66,  -66,  -66,  -66,  -66,
      -66,  -66,  -66,  -66,  -66,  -66,   47,  -66,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  -66,  -66,
      -66,  -66,  -66,  -66,  -66,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,  124,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,  -66,  -66,  -66,  -66,   47,  -66,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  124,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47,   47,   47,  -66,  -66,  -66,  -66,  -66
    },

    {
        3,  -67,  -67,  -67,  -67,  -67,  -67,  -67,  -67,  -67,
      -67,  -67,  -67,  -67,  -67,  -67,  -67,  -67,  -67,  -67,
      -67,  -67,  -67,  -67,  -67,  -67,  -67,  -67,  -67,  -67,
      -67,  -67,  -67,  -67,  -67,  -67,  -67,  -67,  -67,  -67,
      -67,  -67,  -67,  -67,  -67,  -67,   47,  -67,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  -67,  -67,
      -67,  -67,  -67,  -67,  -67,  125,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47,  -67,  -67,  -67,  -67,   47,  -67,  125,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,  -67,  -67,  -67,  -67,  -67
    },

    {
        3,  -68,  -68,  -68,  -68,  -68,  -68,  -68,  -68,  -68,
      -68,  -68,  -68,  -68,  -68,  -68,  -68,  -68,  -68,  -68,
      -68,  -68,  -68,  -68,  -68,  -68,  -68,  -68,  -68,  -68,
      -68,  -68,  -68,  -68,  -68,  -68,  -68,  -68,  -68,  -68,
      -68,  -68,  -68,  -68,  -68,  -68,   47,  -68,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  -68,  -68,

      -68,  -68,  -68,  -68,  -68,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
      126,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,  -68,  -68,  -68,  -68,   47,  -68,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,  126,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,  -68,  -68,  -68,  -68,  -68
    },

    {
        3,  -69,  -69,  -69,  -69,  -69,  -69,  -69,  -69,  -69,
      -69,  -69,  -69,  -69,  -69,  -69,  -69,  -69,  -69,  -69,
      -69,  -69,  -69,  -69,  -69,  -69,  -69,  -69,  -69,  -69,

      -69,  -69,  -69,  -69,  -69,  -69,  -69,  -69,  -69,  -69,
      -69,  -69,  -69,  -69,  -69,  -69,   47,  -69,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  -69,  -69,
      -69,  -69,  -69,  -69,  -69,   47,   47,   47,   47,   47,
       47,   47,   47,  127,   47,   47,  128,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,  -69,  -69,  -69,  -69,   47,  -69,   47,   47,   47,
       47,   47,   47,   47,   47,  127,   47,   47,  128,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,  -69,  -69,  -69,  -69,  -69

    },

    {
        3,  -70,  -70,  -70,  -70,  -70,  -70,  -70,  -70,  -70,
      -70,  -70,  -70,  -70,  -70,  -70,  -70,  -70,  -70,  -70,
      -70,  -70,  -70,  -70,  -70,  -70,  -70,  -70,  -70,  -70,
      -70,  -70,  -70,  -70,  -70,  -70,  -70,  -70,  -70,  -70,
      -70,  -70,  -70,  -70,  -70,  -70,   47,  -70,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  -70,  -70,
      -70,  -70,  -70,  -70,  -70,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,  129,   47,   47,   47,   47,   47,   47,   47,
       47,  -70,  -70,  -70,  -70,   47,  -70,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,  129,   47,   47,   47,   47,   47,
       47,   47,   47,  -70,  -70,  -70,  -70,  -70
    },

    {
        3,  -71,  -71,  -71,  -71,  -71,  -71,  -71,  -71,  -71,
      -71,  -71,  -71,  -71,  -71,  -71,  -71,  -71,  -71,  -71,
      -71,  -71,  -71,  -71,  -71,  -71,  -71,  -71,  -71,  -71,
      -71,  -71,  -71,  -71,  -71,  -71,  -71,  -71,  -71,  -71,
      -71,  -71,  -71,  -71,  -71,  -71,   47,  -71,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  -71,  -71,
      -71,  -71,  -71,  -71,  -71,   47,   47,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,  130,   47,   47,   47,   47,   47,   47,   47,
       47,  -71,  -71,  -71,  -71,   47,  -71,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,  130,   47,   47,   47,   47,   47,
       47,   47,   47,  -71,  -71,  -71,  -71,  -71
    },

    {
        3,  -72,  -72,  -72,  -72,  -72,  -72,  -72,  -72,  -72,
      -72,  -72,  -72,  -72,  -72,  -72,  -72,  -72,  -72,  -72,
      -72,  -72,  -72,  -72,  -72,  -72,  -72,  -72,  -72,  -72,
      -72,  -72,  -72,  -72,  -72,  -72,  -72,  -72,  -72,  -72,

      -72,  -72,  -72,  -72,  -72,  -72,   47,  -72,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  -72,  -72,
      -72,  -72,  -72,  -72,  -72,  131,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,  -72,  -72,  -72,  -72,   47,  -72,  131,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,  -72,  -72,  -72,  -72,  -72
    },

    {
        3,  -73,  -73,  -73,  -73,  -73,  -73,  -73,  -73,  -73,

      -73,  -73,  -73,  -73,  -73,  -73,  -73,  -73,  -73,  -73,
      -73,  -73,  -73,  -73,  -73,  -73,  -73,  -73,  -73,  -73,
      -73,  -73,  -73,  -73,  -73,  -73,  -73,  -73,  -73,  -73,
      -73,  -73,  -73,  -73,  -73,  -73,   47,  -73,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  -73,  -73,
      -73,  -73,  -73,  -73,  -73,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,  132,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,  -73,  -73,  -73,  -73,   47,  -73,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,  132,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,  -73,  -73,  -73,  -73,  -73
    },

    {
        3,  -74,  -74,  -74,  -74,  -74,  -74,  -74,  -74,  -74,
      -74,  -74,  -74,  -74,  -74,  -74,  -74,  -74,  -74,  -74,
      -74,  -74,  -74,  -74,  -74,  -74,  -74,  -74,  -74,  -74,
      -74,  -74,  -74,  -74,  -74,  -74,  -74,  -74,  -74,  -74,
      -74,  -74,  -74,  -74,  -74,  -74,   47,  -74,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  -74,  -74,
      -74,  -74,  -74,  -74,  -74,   47,   47,   47,   47,  133,
       47,   47,   47,   47,   47,   47,  134,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,  -74,  -74,  -74,  -74,   47,  -74,   47,   47,   47,
       47,  133,   47,   47,   47,   47,   47,   47,  134,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,  -74,  -74,  -74,  -74,  -74
    },

    {
        3,  -75,  -75,  -75,  -75,  -75,  -75,  -75,  -75,  -75,
      -75,  -75,  -75,  -75,  -75,  -75,  -75,  -75,  -75,  -75,
      -75,  -75,  -75,  -75,  -75,  -75,  -75,  -75,  -75,  -75,
      -75,  -75,  -75,  -75,  -75,  -75,  -75,  -75,  -75,  -75,
      -75,  -75,  -75,  -75,  -75,  -75,   47,  -75,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,  -75,  -75,
      -75,  -75,  -75,  -75,  -75,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,  -75,  -75,  -75,  -75,   47,  -75,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,  -75,  -75,  -75,  -75,  -75
    },

    {
        3,  -76,  -76,  -76,  -76,  -76,  -76,  -76,  -76,  -76,
      -76,  -76,  -76,  -76,  -76,  -76,  -76,  -76,  -76,  -76,

      -76,  -76,  -76,  -76,  -76,  -76,  -76,  -76,  -76,  -76,
      -76,  -76,  -76,  -76,  -76,  -76,  -76,  -76,  -76,  -76,
      -76,  -76,  -76,  -76,  -76,  -76,   47,  -76,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  -76,  -76,
      -76,  -76,  -76,  -76,  -76,  135,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,  -76,  -76,  -76,  -76,   47,  -76,  135,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47,   47,   47,  -76,  -76,  -76,  -76,  -76
    },

    {
        3,  -77,  -77,  -77,  -77,  -77,  -77,  -77,  -77,  -77,
      -77,  -77,  -77,  -77,  -77,  -77,  -77,  -77,  -77,  -77,
      -77,  -77,  -77,  -77,  -77,  -77,  -77,  -77,  -77,  -77,
      -77,  -77,  -77,  -77,  -77,  -77,  -77,  -77,  -77,  -77,
      -77,  -77,  -77,  -77,  -77,  -77,   47,  -77,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  -77,  -77,
      -77,  -77,  -77,  -77,  -77,   47,   47,   47,   47,   47,
      136,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47,  -77,  -77,  -77,  -77,   47,  -77,   47,   47,   47,
       47,   47,  136,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,  -77,  -77,  -77,  -77,  -77
    },

    {
        3,  -78,  -78,  -78,  -78,  -78,  -78,  -78,  -78,  -78,
      -78,  -78,  -78,  -78,  -78,  -78,  -78,  -78,  -78,  -78,
      -78,  -78,  -78,  -78,  -78,  -78,  -78,  -78,  -78,  -78,
      -78,  -78,  -78,  -78,  -78,  -78,  -78,  -78,  -78,  -78,
      -78,  -78,  -78,  -78,  -78,  -78,   47,  -78,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  -78,  -78,

      -78,  -78,  -78,  -78,  -78,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,  137,   47,   47,   47,   47,   47,   47,
       47,  -78,  -78,  -78,  -78,   47,  -78,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,  137,   47,   47,   47,   47,
       47,   47,   47,  -78,  -78,  -78,  -78,  -78
    },

    {
        3,  -79,  -79,  -79,  -79,  -79,  -79,  -79,  -79,  -79,
      -79,  -79,  -79,  -79,  -79,  -79,  -79,  -79,  -79,  -79,
      -79,  -79,  -79,  -79,  -79,  -79,  -79,  -79,  -79,  -79,

      -79,  -79,  -79,  -79,  -79,  -79,  -79,  -79,  -79,  -79,
      -79,  -79,  -79,  -79,  -79,  -79,   47,  -79,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  -79,  -79,
      -79,  -79,  -79,  -79,  -79,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  138,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,  -79,  -79,  -79,  -79,   47,  -79,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
      138,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,  -79,  -79,  -79,  -79,  -79

    },

    {
        3,  -80,  -80,  -80,  -80,  -80,  -80,  -80,  -80,  -80,
      -80,  -80,  -80,  -80,  -80,  -80,  -80,  -80,  -80,  -80,
      -80,  -80,  -80,  -80,  -80,  -80,  -80,  -80,  -80,  -80,
      -80,  -80,  -80,  -80,  -80,  -80,  -80,  -80,  -80,  -80,
      -80,  -80,  -80,  -80,  -80,  -80,   47,  -80,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  -80,  -80,
      -80,  -80,  -80,  -80,  -80,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,  -80,  -80,  -80,  -80,   47,  -80,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,  -80,  -80,  -80,  -80,  -80
    },

    {
        3,  -81,  -81,  -81,  -81,  -81,  -81,  -81,  -81,  -81,
      -81,  -81,  -81,  -81,  -81,  -81,  -81,  -81,  -81,  -81,
      -81,  -81,  -81,  -81,  -81,  -81,  -81,  -81,  -81,  -81,
      -81,  -81,  -81,  -81,  -81,  -81,  -81,  -81,  -81,  -81,
      -81,  -81,  -81,  -81,  -81,  -81,   47,  -81,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  -81,  -81,
      -81,  -81,  -81,  -81,  -81,   47,   47,   47,   47,   47,

       47,  139,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,  -81,  -81,  -81,  -81,   47,  -81,   47,   47,   47,
       47,   47,   47,  139,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,  -81,  -81,  -81,  -81,  -81
    },

    {
        3,  -82,  -82,  -82,  -82,  -82,  -82,  -82,  -82,  -82,
      -82,  -82,  -82,  -82,  -82,  -82,  -82,  -82,  -82,  -82,
      -82,  -82,  -82,  -82,  -82,  -82,  -82,  -82,  -82,  -82,
      -82,  -82,  -82,  -82,  -82,  -82,  -82,  -82,  -82,  -82,

      -82,  -82,  -82,  -82,  -82,  -82,   47,  -82,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  -82,  -82,
      -82,  -82,  -82,  -82,  -82,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  140,   47,
       47,  -82,  -82,  -82,  -82,   47,  -82,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
      140,   47,   47,  -82,  -82,  -82,  -82,  -82
    },

    {
        3,  -83,  -83,  -83,  -83,  -83,  -83,  -83,  -83,  -83,

      -83,  -83,  -83,  -83,  -83,  -83,  -83,  -83,  -83,  -83,
      -83,  -83,  -83,  -83,  -83,  -83,  -83,  -83,  -83,  -83,
      -83,  -83,  -83,  -83,  -83,  -83,  -83,  -83,  -83,  -83,
      -83,  -83,  -83,  -83,  -83,  -83,   47,  -83,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  -83,  -83,
      -83,  -83,  -83,  -83,  -83,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  141,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,  -83,  -83,  -83,  -83,   47,  -83,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

      141,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,  -83,  -83,  -83,  -83,  -83
    },

    {
        3,  -84,  -84,  -84,  -84,  -84,  -84,  -84,  -84,  -84,
      -84,  -84,  -84,  -84,  -84,  -84,  -84,  -84,  -84,  -84,
      -84,  -84,  -84,  -84,  -84,  -84,  -84,  -84,  -84,  -84,
      -84,  -84,  -84,  -84,  -84,  -84,  -84,  -84,  -84,  -84,
      -84,  -84,  -84,  -84,  -84,  -84,   47,  -84,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  -84,  -84,
      -84,  -84,  -84,  -84,  -84,   47,   47,   47,  142,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,  -84,  -84,  -84,  -84,   47,  -84,   47,   47,   47,
      142,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,  -84,  -84,  -84,  -84,  -84
    },

    {
        3,  -85,  -85,  -85,  -85,  -85,  -85,  -85,  -85,  -85,
      -85,  -85,  -85,  -85,  -85,  -85,  -85,  -85,  -85,  -85,
      -85,  -85,  -85,  -85,  -85,  -85,  -85,  -85,  -85,  -85,
      -85,  -85,  -85,  -85,  -85,  -85,  -85,  -85,  -85,  -85,
      -85,  -85,  -85,  -85,  -85,  -85,   47,  -85,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,  -85,  -85,
      -85,  -85,  -85,  -85,  -85,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,  -85,  -85,  -85,  -85,   47,  -85,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,  -85,  -85,  -85,  -85,  -85
    },

    {
        3,  -86,  -86,  -86,  -86,  -86,  -86,  -86,  -86,  -86,
      -86,  -86,  -86,  -86,  -86,  -86,  -86,  -86,  -86,  -86,

      -86,  -86,  -86,  -86,  -86,  -86,  -86,  -86,  -86,  -86,
      -86,  -86,  -86,  -86,  -86,  -86,  -86,  -86,  -86,  -86,
      -86,  -86,  -86,  -86,  -86,  -86,   47,  -86,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  -86,  -86,
      -86,  -86,  -86,  -86,  -86,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  143,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,  -86,  -86,  -86,  -86,   47,  -86,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
      143,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47,   47,   47,  -86,  -86,  -86,  -86,  -86
    },

    {
        3,  -87,  -87,  -87,  -87,  -87,  -87,  -87,  -87,  -87,
      -87,  -87,  -87,  -87,  -87,  -87,  -87,  -87,  -87,  -87,
      -87,  -87,  -87,  -87,  -87,  -87,  -87,  -87,  -87,  -87,
      -87,  -87,  -87,  -87,  -87,  -87,  -87,  -87,  -87,  -87,
      -87,  -87,  -87,  -87,  -87,  -87,   47,  -87,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  -87,  -87,
      -87,  -87,  -87,  -87,  -87,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,  144,   47,  145,   47,   47,   47,   47,   47,

       47,  -87,  -87,  -87,  -87,   47,  -87,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,  144,   47,  145,   47,   47,   47,
       47,   47,   47,  -87,  -87,  -87,  -87,  -87
    },

    {
        3,  -88,  -88,  -88,  -88,  -88,  -88,  -88,  -88,  -88,
      -88,  -88,  -88,  -88,  -88,  -88,  -88,  -88,  -88,  -88,
      -88,  -88,  -88,  -88,  -88,  -88,  -88,  -88,  -88,  -88,
      -88,  -88,  -88,  -88,  -88,  -88,  -88,  -88,  -88,  -88,
      -88,  -88,  -88,  -88,  -88,  -88,   47,  -88,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  -88,  -88,

      -88,  -88,  -88,  -88,  -88,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,  -88,  -88,  -88,  -88,   47,  -88,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,  -88,  -88,  -88,  -88,  -88
    },

    {
        3,  -89,  -89,  -89,  -89,  -89,  -89,  -89,  -89,  -89,
      -89,  -89,  -89,  -89,  -89,  -89,  -89,  -89,  -89,  -89,
      -89,  -89,  -89,  -89,  -89,  -89,  -89,  -89,  -89,  -89,

      -89,  -89,  -89,  -89,  -89,  -89,  -89,  -89,  -89,  -89,
      -89,  -89,  -89,  -89,  -89,  -89,   47,  -89,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  -89,  -89,
      -89,  -89,  -89,  -89,  -89,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,  -89,  -89,  -89,  -89,   47,  -89,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,  -89,  -89,  -89,  -89,  -89

    },

    {
        3,  -90,  -90,  -90,  -90,  -90,  -90,  -90,  -90,  -90,
      -90,  -90,  -90,  -90,  -90,  -90,  -90,  -90,  -90,  -90,
      -90,  -90,  -90,  -90,  -90,  -90,  -90,  -90,  -90,  -90,
      -90,  -90,  -90,  -90,  -90,  -90,  -90,  -90,  -90,  -90,
      -90,  -90,  -90,  -90,  -90,  -90,   47,  -90,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  -90,  -90,
      -90,  -90,  -90,  -90,  -90,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,  146,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,  -90,  -90,  -90,  -90,   47,  -90,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,  146,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,  -90,  -90,  -90,  -90,  -90
    },

    {
        3,  -91,  -91,  -91,  -91,  -91,  -91,  -91,  -91,  -91,
      -91,  -91,  -91,  -91,  -91,  -91,  -91,  -91,  -91,  -91,
      -91,  -91,  -91,  -91,  -91,  -91,  -91,  -91,  -91,  -91,
      -91,  -91,  -91,  -91,  -91,  -91,  -91,  -91,  -91,  -91,
      -91,  -91,  -91,  -91,  -91,  -91,   47,  -91,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  -91,  -91,
      -91,  -91,  -91,  -91,  -91,   47,   47,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,  -91,  -91,  -91,  -91,   47,  -91,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,  -91,  -91,  -91,  -91,  -91
    },

    {
        3,  -92,  -92,  -92,  -92,  -92,  -92,  -92,  -92,  -92,
      -92,  -92,  -92,  -92,  -92,  -92,  -92,  -92,  -92,  -92,
      -92,  -92,  -92,  -92,  -92,  -92,  -92,  -92,  -92,  -92,
      -92,  -92,  -92,  -92,  -92,  -92,  -92,  -92,  -92,  -92,

      -92,  -92,  -92,  -92,  -92,  -92,   47,  -92,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  -92,  -92,
      -92,  -92,  -92,  -92,  -92,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,  147,   47,   47,   47,   47,   47,   47,
       47,  -92,  -92,  -92,  -92,   47,  -92,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,  147,   47,   47,   47,   47,
       47,   47,   47,  -92,  -92,  -92,  -92,  -92
    },

    {
        3,  -93,  -93,  -93,  -93,  -93,  -93,  -93,  -93,  -93,

      -93,  -93,  -93,  -93,  -93,  -93,  -93,  -93,  -93,  -93,
      -93,  -93,  -93,  -93,  -93,  -93,  -93,  -93,  -93,  -93,
      -93,  -93,  -93,  -93,  -93,  -93,  -93,  -93,  -93,  -93,
      -93,  -93,  -93,  -93,  -93,  -93,   47,  -93,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  -93,  -93,
      -93,  -93,  -93,  -93,  -93,   47,   47,   47,  148,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,  -93,  -93,  -93,  -93,   47,  -93,   47,   47,   47,
      148,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,  -93,  -93,  -93,  -93,  -93
    },

    {
        3,  -94,  -94,  -94,  -94,  -94,  -94,  -94,  -94,  -94,
      -94,  -94,  -94,  -94,  -94,  -94,  -94,  -94,  -94,  -94,
      -94,  -94,  -94,  -94,  -94,  -94,  -94,  -94,  -94,  -94,
      -94,  -94,  -94,  -94,  -94,  -94,  -94,  -94,  -94,  -94,
      -94,  -94,  -94,  -94,  -94,  -94,   47,  -94,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  -94,  -94,
      -94,  -94,  -94,  -94,  -94,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47,   47,   47,   47,   47,  149,   47,   47,   47,   47,
       47,  -94,  -94,  -94,  -94,   47,  -94,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,  149,   47,   47,
       47,   47,   47,  -94,  -94,  -94,  -94,  -94
    },

    {
        3,  -95,  -95,  -95,  -95,  -95,  -95,  -95,  -95,  -95,
      -95,  -95,  -95,  -95,  -95,  -95,  -95,  -95,  -95,  -95,
      -95,  -95,  -95,  -95,  -95,  -95,  -95,  -95,  -95,  -95,
      -95,  -95,  -95,  -95,  -95,  -95,  -95,  -95,  -95,  -95,
      -95,  -95,  -95,  -95,  -95,  -95,   47,  -95,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,  -95,  -95,
      -95,  -95,  -95,  -95,  -95,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,  150,   47,   47,   47,   47,   47,   47,   47,   47,
       47,  -95,  -95,  -95,  -95,   47,  -95,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,  150,   47,   47,   47,   47,   47,   47,
       47,   47,   47,  -95,  -95,  -95,  -95,  -95
    },

    {
        3,  -96,  -96,  -96,  -96,  -96,  -96,  -96,  -96,  -96,
      -96,  -96,  -96,  -96,  -96,  -96,  -96,  -96,  -96,  -96,

      -96,  -96,  -96,  -96,  -96,  -96,  -96,  -96,  -96,  -96,
      -96,  -96,  -96,  -96,  -96,  -96,  -96,  -96,  -96,  -96,
      -96,  -96,  -96,  -96,  -96,  -96,   47,  -96,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  -96,  -96,
      -96,  -96,  -96,  -96,  -96,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,  151,   47,   47,   47,   47,   47,
       47,  -96,  -96,  -96,  -96,   47,  -96,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,  151,   47,   47,   47,

       47,   47,   47,  -96,  -96,  -96,  -96,  -96
    },

    {
        3,  -97,  -97,  -97,  -97,  -97,  -97,  -97,  -97,  -97,
      -97,  -97,  -97,  -97,  -97,  -97,  -97,  -97,  -97,  -97,
      -97,  -97,  -97,  -97,  -97,  -97,  -97,  -97,  -97,  -97,
      -97,  -97,  -97,  -97,  -97,  -97,  -97,  -97,  -97,  -97,
      -97,  -97,  -97,  -97,  -97,  -97,   47,  -97,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  -97,  -97,
      -97,  -97,  -97,  -97,  -97,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  152,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47,  -97,  -97,  -97,  -97,   47,  -97,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
      152,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,  -97,  -97,  -97,  -97,  -97
    },

    {
        3,  -98,  -98,  -98,  -98,  -98,  -98,  -98,  -98,  -98,
      -98,  -98,  -98,  -98,  -98,  -98,  -98,  -98,  -98,  -98,
      -98,  -98,  -98,  -98,  -98,  -98,  -98,  -98,  -98,  -98,
      -98,  -98,  -98,  -98,  -98,  -98,  -98,  -98,  -98,  -98,
      -98,  -98,  -98,  -98,  -98,  -98,   47,  -98,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  -98,  -98,

      -98,  -98,  -98,  -98,  -98,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,  153,   47,   47,   47,   47,   47,   47,   47,
       47,  -98,  -98,  -98,  -98,   47,  -98,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,  153,   47,   47,   47,   47,   47,
       47,   47,   47,  -98,  -98,  -98,  -98,  -98
    },

    {
        3,  -99,  -99,  -99,  -99,  -99,  -99,  -99,  -99,  -99,
      -99,  -99,  -99,  -99,  -99,  -99,  -99,  -99,  -99,  -99,
      -99,  -99,  -99,  -99,  -99,  -99,  -99,  -99,  -99,  -99,

      -99,  -99,  -99,  -99,  -99,  -99,  -99,  -99,  -99,  -99,
      -99,  -99,  -99,  -99,  -99,  -99,   47,  -99,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  -99,  -99,
      -99,  -99,  -99,  -99,  -99,  154,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,  -99,  -99,  -99,  -99,   47,  -99,  154,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,  -99,  -99,  -99,  -99,  -99

    },

    {
        3, -100, -100, -100, -100, -100, -100, -100, -100, -100,
     -100, -100, -100, -100, -100, -100, -100, -100, -100, -100,
     -100, -100, -100, -100, -100, -100, -100, -100, -100, -100,
     -100, -100, -100, -100, -100, -100, -100, -100, -100, -100,
     -100, -100, -100, -100, -100, -100,   47, -100,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -100, -100,
     -100, -100, -100, -100, -100,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,  155,   47,   47,   47,
       47, -100, -100, -100, -100,   47, -100,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  155,   47,
       47,   47,   47, -100, -100, -100, -100, -100
    },

    {
        3, -101, -101, -101, -101, -101, -101, -101, -101, -101,
     -101, -101, -101, -101, -101, -101, -101, -101, -101, -101,
     -101, -101, -101, -101, -101, -101, -101, -101, -101, -101,
     -101, -101, -101, -101, -101, -101, -101, -101, -101, -101,
     -101, -101, -101, -101, -101, -101,   47, -101,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -101, -101,
     -101, -101, -101, -101, -101,   47,   47,   47,   47,   47,

       47,   47,   47,  156,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -101, -101, -101, -101,   47, -101,   47,   47,   47,
       47,   47,   47,   47,   47,  156,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -101, -101, -101, -101, -101
    },

    {
        3, -102, -102, -102, -102, -102, -102, -102, -102, -102,
     -102, -102, -102, -102, -102, -102, -102, -102, -102, -102,
     -102, -102, -102, -102, -102, -102, -102, -102, -102, -102,
     -102, -102, -102, -102, -102, -102, -102, -102, -102, -102,

     -102, -102, -102, -102, -102, -102,   47, -102,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -102, -102,
     -102, -102, -102, -102, -102,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,  157,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -102, -102, -102, -102,   47, -102,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,  157,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -102, -102, -102, -102, -102
    },

    {
        3, -103, -103, -103, -103, -103, -103, -103, -103, -103,

     -103, -103, -103, -103, -103, -103, -103, -103, -103, -103,
     -103, -103, -103, -103, -103, -103, -103, -103, -103, -103,
     -103, -103, -103, -103, -103, -103, -103, -103, -103, -103,
     -103, -103, -103, -103, -103, -103,   47, -103,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -103, -103,
     -103, -103, -103, -103, -103,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -103, -103, -103, -103,   47, -103,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -103, -103, -103, -103, -103
    },

    {
        3, -104, -104, -104, -104, -104, -104, -104, -104, -104,
     -104, -104, -104, -104, -104, -104, -104, -104, -104, -104,
     -104, -104, -104, -104, -104, -104, -104, -104, -104, -104,
     -104, -104, -104, -104, -104, -104, -104, -104, -104, -104,
     -104, -104, -104, -104, -104, -104,   47, -104,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -104, -104,
     -104, -104, -104, -104, -104,   47,   47,   47,   47,   47,
       47,   47,   47,  158,   47,   47,   47,   47,   47,   47,

       47,   47,   47,   47,   47,  159,   47,   47,   47,   47,
       47, -104, -104, -104, -104,   47, -104,   47,   47,   47,
       47,   47,   47,   47,   47,  158,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,  159,   47,   47,
       47,   47,   47, -104, -104, -104, -104, -104
    },

    {
        3, -105, -105, -105, -105, -105, -105, -105, -105, -105,
     -105, -105, -105, -105, -105, -105, -105, -105, -105, -105,
     -105, -105, -105, -105, -105, -105, -105, -105, -105, -105,
     -105, -105, -105, -105, -105, -105, -105, -105, -105, -105,
     -105, -105, -105, -105, -105, -105,   47, -105,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47, -105, -105,
     -105, -105, -105, -105, -105,   47,   47,   47,   47,   47,
       47,   47,   47,  160,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -105, -105, -105, -105,   47, -105,   47,   47,   47,
       47,   47,   47,   47,   47,  160,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -105, -105, -105, -105, -105
    },

    {
        3, -106, -106, -106, -106, -106, -106, -106, -106, -106,
     -106, -106, -106, -106, -106, -106, -106, -106, -106, -106,

     -106, -106, -106, -106, -106, -106, -106, -106, -106, -106,
     -106, -106, -106, -106, -106, -106, -106, -106, -106, -106,
     -106, -106, -106, -106, -106, -106,   47, -106,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -106, -106,
     -106, -106, -106, -106, -106,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,  161,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -106, -106, -106, -106,   47, -106,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  161,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47,   47,   47, -106, -106, -106, -106, -106
    },

    {
        3, -107, -107, -107, -107, -107, -107, -107, -107, -107,
     -107, -107, -107, -107, -107, -107, -107, -107, -107, -107,
     -107, -107, -107, -107, -107, -107, -107, -107, -107, -107,
     -107, -107, -107, -107, -107, -107, -107, -107, -107, -107,
     -107, -107, -107, -107, -107, -107,   47, -107,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -107, -107,
     -107, -107, -107, -107, -107,   47,   47,   47,   47,   47,
       47,   47,   47,  162,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47, -107, -107, -107, -107,   47, -107,   47,   47,   47,
       47,   47,   47,   47,   47,  162,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -107, -107, -107, -107, -107
    },

    {
        3, -108, -108, -108, -108, -108, -108, -108, -108, -108,
     -108, -108, -108, -108, -108, -108, -108, -108, -108, -108,
     -108, -108, -108, -108, -108, -108, -108, -108, -108, -108,
     -108, -108, -108, -108, -108, -108, -108, -108, -108, -108,
     -108, -108, -108, -108, -108, -108,   47, -108,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -108, -108,

     -108, -108, -108, -108, -108,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,  163,   47,   47,   47,   47,   47,   47,   47,
       47, -108, -108, -108, -108,   47, -108,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,  163,   47,   47,   47,   47,   47,
       47,   47,   47, -108, -108, -108, -108, -108
    },

    {
        3, -109, -109, -109, -109, -109, -109, -109, -109, -109,
     -109, -109, -109, -109, -109, -109, -109, -109, -109, -109,
     -109, -109, -109, -109, -109, -109, -109, -109, -109, -109,

     -109, -109, -109, -109, -109, -109, -109, -109, -109, -109,
     -109, -109, -109, -109, -109, -109,   47, -109,  109,  109,
      109,  109,  109,  109,  109,  109,  109,  109, -109, -109,
     -109, -109, -109, -109, -109,   47,   47,   47,   47,  164,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -109, -109, -109, -109,   47, -109,   47,   47,   47,
       47,  164,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -109, -109, -109, -109, -109

    },

    {
        3, -110, -110, -110, -110, -110, -110, -110, -110, -110,
     -110, -110, -110, -110, -110, -110, -110, -110, -110, -110,
     -110, -110, -110, -110, -110, -110, -110, -110, -110, -110,
     -110, -110, -110, -110, -110, -110, -110, -110, -110, -110,
     -110, -110, -110, -110, -110, -110, -110, -110,  165,  165,
      165,  165,  165,  165,  165,  165,  165,  165, -110, -110,
     -110, -110, -110, -110, -110, -110, -110, -110, -110, -110,
     -110, -110, -110, -110, -110, -110, -110, -110, -110, -110,
     -110, -110, -110, -110, -110, -110, -110, -110, -110, -110,
     -110, -110, -110, -110, -110, -110, -110, -110, -110, -110,

     -110, -110, -110, -110, -110, -110, -110, -110, -110, -110,
     -110, -110, -110, -110, -110, -110, -110, -110, -110, -110,
     -110, -110, -110, -110, -110, -110, -110, -110
    },

    {
        3, -111, -111, -111, -111, -111, -111, -111, -111, -111,
     -111, -111, -111, -111, -111, -111, -111, -111, -111, -111,
     -111, -111, -111, -111, -111, -111, -111, -111, -111, -111,
     -111, -111, -111, -111, -111, -111, -111, -111, -111, -111,
     -111, -111, -111, -111, -111, -111,   47, -111,  111,  111,
      111,  111,  111,  111,  111,  111,  111,  111, -111, -111,
     -111, -111, -111, -111, -111,   47,   47,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -111, -111, -111, -111,   47, -111,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -111, -111, -111, -111, -111
    },

    {
        3, -112, -112, -112, -112, -112, -112, -112, -112, -112,
     -112, -112, -112, -112, -112, -112, -112, -112, -112, -112,
     -112, -112, -112, -112, -112, -112, -112, -112, -112, -112,
     -112, -112, -112, -112, -112, -112, -112, -112, -112, -112,

     -112, -112, -112, -112, -112, -112,   47, -112,  112,  112,
      112,  112,  112,  112,  112,  112,  112,  112, -112, -112,
     -112, -112, -112, -112, -112,  112,  112,  112,  112,  112,
      112,  112,  112,  112,  112,  112,  112,  112,  112,  112,
      112,  112,  112,  112,  112,  112,  112,  112,  112,  112,
      112,  113,  113,  113,  113,  112,  113,  112,  112,  112,
      112,  112,  112,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -112, -112, -112, -112, -112
    },

    {
        3, -113, -113, -113, -113, -113, -113, -113, -113, -113,

     -113, -113, -113, -113, -113, -113, -113, -113, -113, -113,
     -113, -113, -113, -113, -113, -113, -113, -113, -113, -113,
     -113, -113, -113, -113, -113, -113, -113, -113, -113, -113,
     -113, -113, -113, -113, -113, -113, -113, -113,  113,  113,
      113,  113,  113,  113,  113,  113,  113,  113, -113, -113,
     -113, -113, -113, -113, -113,  113,  113,  113,  113,  113,
      113,  113,  113,  113,  113,  113,  113,  113,  113,  113,
      113,  113,  113,  113,  113,  113,  113,  113,  113,  113,
      113,  113,  113,  113,  113,  113,  113,  113,  113,  113,
      113,  113,  113, -113, -113, -113, -113, -113, -113, -113,

     -113, -113, -113, -113, -113, -113, -113, -113, -113, -113,
     -113, -113, -113, -113, -113, -113, -113, -113
    },

    {
        3, -114, -114, -114, -114, -114, -114, -114, -114, -114,
     -114, -114, -114, -114, -114, -114, -114, -114, -114, -114,
     -114, -114, -114, -114, -114, -114, -114, -114, -114, -114,
     -114, -114, -114, -114, -114, -114, -114, -114, -114, -114,
     -114, -114, -114, -114, -114, -114,   47, -114,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -114, -114,
     -114, -114, -114, -114, -114,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -114, -114, -114, -114,   47, -114,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -114, -114, -114, -114, -114
    },

    {
        3, -115, -115, -115, -115, -115, -115, -115, -115, -115,
     -115, -115, -115, -115, -115, -115, -115, -115, -115, -115,
     -115, -115, -115, -115, -115, -115, -115, -115, -115, -115,
     -115, -115, -115, -115, -115, -115, -115, -115, -115, -115,
     -115, -115, -115, -115, -115, -115,   47, -115,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47, -115, -115,
     -115, -115, -115, -115, -115,   47,   47,   47,   47,  166,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -115, -115, -115, -115,   47, -115,   47,   47,   47,
       47,  166,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -115, -115, -115, -115, -115
    },

    {
        3, -116, -116, -116, -116, -116, -116, -116, -116, -116,
     -116, -116, -116, -116, -116, -116, -116, -116, -116, -116,

     -116, -116, -116, -116, -116, -116, -116, -116, -116, -116,
     -116, -116, -116, -116, -116, -116, -116, -116, -116, -116,
     -116, -116, -116, -116, -116, -116,   47, -116,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -116, -116,
     -116, -116, -116, -116, -116,   47,   47,   47,   47,   47,
       47,  167,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -116, -116, -116, -116,   47, -116,   47,   47,   47,
       47,   47,   47,  167,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47,   47,   47, -116, -116, -116, -116, -116
    },

    {
        3, -117, -117, -117, -117, -117, -117, -117, -117, -117,
     -117, -117, -117, -117, -117, -117, -117, -117, -117, -117,
     -117, -117, -117, -117, -117, -117, -117, -117, -117, -117,
     -117, -117, -117, -117, -117, -117, -117, -117, -117, -117,
     -117, -117, -117, -117, -117, -117,   47, -117,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -117, -117,
     -117, -117, -117, -117, -117,  168,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47, -117, -117, -117, -117,   47, -117,  168,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -117, -117, -117, -117, -117
    },

    {
        3, -118, -118, -118, -118, -118, -118, -118, -118, -118,
     -118, -118, -118, -118, -118, -118, -118, -118, -118, -118,
     -118, -118, -118, -118, -118, -118, -118, -118, -118, -118,
     -118, -118, -118, -118, -118, -118, -118, -118, -118, -118,
     -118, -118, -118, -118, -118, -118,   47, -118,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -118, -118,

     -118, -118, -118, -118, -118,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,  169,
       47, -118, -118, -118, -118,   47, -118,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,  169,   47, -118, -118, -118, -118, -118
    },

    {
        3, -119, -119, -119, -119, -119, -119, -119, -119, -119,
     -119, -119, -119, -119, -119, -119, -119, -119, -119, -119,
     -119, -119, -119, -119, -119, -119, -119, -119, -119, -119,

     -119, -119, -119, -119, -119, -119, -119, -119, -119, -119,
     -119, -119, -119, -119, -119, -119,   47, -119,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -119, -119,
     -119, -119, -119, -119, -119,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -119, -119, -119, -119,   47, -119,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -119, -119, -119, -119, -119

    },

    {
        3, -120, -120, -120, -120, -120, -120, -120, -120, -120,
     -120, -120, -120, -120, -120, -120, -120, -120, -120, -120,
     -120, -120, -120, -120, -120, -120, -120, -120, -120, -120,
     -120, -120, -120, -120, -120, -120, -120, -120, -120, -120,
     -120, -120, -120, -120, -120, -120,   47, -120,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -120, -120,
     -120, -120, -120, -120, -120,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  170,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -120, -120, -120, -120,   47, -120,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
      170,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -120, -120, -120, -120, -120
    },

    {
        3, -121, -121, -121, -121, -121, -121, -121, -121, -121,
     -121, -121, -121, -121, -121, -121, -121, -121, -121, -121,
     -121, -121, -121, -121, -121, -121, -121, -121, -121, -121,
     -121, -121, -121, -121, -121, -121, -121, -121, -121, -121,
     -121, -121, -121, -121, -121, -121,   47, -121,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -121, -121,
     -121, -121, -121, -121, -121,   47,   47,  171,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -121, -121, -121, -121,   47, -121,   47,   47,  171,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -121, -121, -121, -121, -121
    },

    {
        3, -122, -122, -122, -122, -122, -122, -122, -122, -122,
     -122, -122, -122, -122, -122, -122, -122, -122, -122, -122,
     -122, -122, -122, -122, -122, -122, -122, -122, -122, -122,
     -122, -122, -122, -122, -122, -122, -122, -122, -122, -122,

     -122, -122, -122, -122, -122, -122,   47, -122,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -122, -122,
     -122, -122, -122, -122, -122,   47,   47,   47,   47,  172,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -122, -122, -122, -122,   47, -122,   47,   47,   47,
       47,  172,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -122, -122, -122, -122, -122
    },

    {
        3, -123, -123, -123, -123, -123, -123, -123, -123, -123,

     -123, -123, -123, -123, -123, -123, -123, -123, -123, -123,
     -123, -123, -123, -123, -123, -123, -123, -123, -123, -123,
     -123, -123, -123, -123, -123, -123, -123, -123, -123, -123,
     -123, -123, -123, -123, -123, -123,   47, -123,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -123, -123,
     -123, -123, -123, -123, -123,  173,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -123, -123, -123, -123,   47, -123,  173,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -123, -123, -123, -123, -123
    },

    {
        3, -124, -124, -124, -124, -124, -124, -124, -124, -124,
     -124, -124, -124, -124, -124, -124, -124, -124, -124, -124,
     -124, -124, -124, -124, -124, -124, -124, -124, -124, -124,
     -124, -124, -124, -124, -124, -124, -124, -124, -124, -124,
     -124, -124, -124, -124, -124, -124,   47, -124,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -124, -124,
     -124, -124, -124, -124, -124,  174,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -124, -124, -124, -124,   47, -124,  174,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -124, -124, -124, -124, -124
    },

    {
        3, -125, -125, -125, -125, -125, -125, -125, -125, -125,
     -125, -125, -125, -125, -125, -125, -125, -125, -125, -125,
     -125, -125, -125, -125, -125, -125, -125, -125, -125, -125,
     -125, -125, -125, -125, -125, -125, -125, -125, -125, -125,
     -125, -125, -125, -125, -125, -125,   47, -125,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47, -125, -125,
     -125, -125, -125, -125, -125,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,  175,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -125, -125, -125, -125,   47, -125,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  175,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -125, -125, -125, -125, -125
    },

    {
        3, -126, -126, -126, -126, -126, -126, -126, -126, -126,
     -126, -126, -126, -126, -126, -126, -126, -126, -126, -126,

     -126, -126, -126, -126, -126, -126, -126, -126, -126, -126,
     -126, -126, -126, -126, -126, -126, -126, -126, -126, -126,
     -126, -126, -126, -126, -126, -126,   47, -126,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -126, -126,
     -126, -126, -126, -126, -126,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,  176,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -126, -126, -126, -126,   47, -126,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,  176,   47,   47,   47,   47,   47,   47,   47,   47,

       47,   47,   47, -126, -126, -126, -126, -126
    },

    {
        3, -127, -127, -127, -127, -127, -127, -127, -127, -127,
     -127, -127, -127, -127, -127, -127, -127, -127, -127, -127,
     -127, -127, -127, -127, -127, -127, -127, -127, -127, -127,
     -127, -127, -127, -127, -127, -127, -127, -127, -127, -127,
     -127, -127, -127, -127, -127, -127,   47, -127,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -127, -127,
     -127, -127, -127, -127, -127,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,  177,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47, -127, -127, -127, -127,   47, -127,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  177,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -127, -127, -127, -127, -127
    },

    {
        3, -128, -128, -128, -128, -128, -128, -128, -128, -128,
     -128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
     -128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
     -128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
     -128, -128, -128, -128, -128, -128,   47, -128,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -128, -128,

     -128, -128, -128, -128, -128,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,  178,   47,   47,   47,   47,   47,   47,
       47, -128, -128, -128, -128,   47, -128,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,  178,   47,   47,   47,   47,
       47,   47,   47, -128, -128, -128, -128, -128
    },

    {
        3, -129, -129, -129, -129, -129, -129, -129, -129, -129,
     -129, -129, -129, -129, -129, -129, -129, -129, -129, -129,
     -129, -129, -129, -129, -129, -129, -129, -129, -129, -129,

     -129, -129, -129, -129, -129, -129, -129, -129, -129, -129,
     -129, -129, -129, -129, -129, -129,   47, -129,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -129, -129,
     -129, -129, -129, -129, -129,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,  179,   47,   47,   47,   47,   47,   47,
       47, -129, -129, -129, -129,   47, -129,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,  179,   47,   47,   47,   47,
       47,   47,   47, -129, -129, -129, -129, -129

    },

    {
        3, -130, -130, -130, -130, -130, -130, -130, -130, -130,
     -130, -130, -130, -130, -130, -130, -130, -130, -130, -130,
     -130, -130, -130, -130, -130, -130, -130, -130, -130, -130,
     -130, -130, -130, -130, -130, -130, -130, -130, -130, -130,
     -130, -130, -130, -130, -130, -130,   47, -130,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -130, -130,
     -130, -130, -130, -130, -130,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -130, -130, -130, -130,   47, -130,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -130, -130, -130, -130, -130
    },

    {
        3, -131, -131, -131, -131, -131, -131, -131, -131, -131,
     -131, -131, -131, -131, -131, -131, -131, -131, -131, -131,
     -131, -131, -131, -131, -131, -131, -131, -131, -131, -131,
     -131, -131, -131, -131, -131, -131, -131, -131, -131, -131,
     -131, -131, -131, -131, -131, -131,   47, -131,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -131, -131,
     -131, -131, -131, -131, -131,   47,   47,  180,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -131, -131, -131, -131,   47, -131,   47,   47,  180,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -131, -131, -131, -131, -131
    },

    {
        3, -132, -132, -132, -132, -132, -132, -132, -132, -132,
     -132, -132, -132, -132, -132, -132, -132, -132, -132, -132,
     -132, -132, -132, -132, -132, -132, -132, -132, -132, -132,
     -132, -132, -132, -132, -132, -132, -132, -132, -132, -132,

     -132, -132, -132, -132, -132, -132,   47, -132,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -132, -132,
     -132, -132, -132, -132, -132,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,  181,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -132, -132, -132, -132,   47, -132,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,  181,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -132, -132, -132, -132, -132
    },

    {
        3, -133, -133, -133, -133, -133, -133, -133, -133, -133,

     -133, -133, -133, -133, -133, -133, -133, -133, -133, -133,
     -133, -133, -133, -133, -133, -133, -133, -133, -133, -133,
     -133, -133, -133, -133, -133, -133, -133, -133, -133, -133,
     -133, -133, -133, -133, -133, -133,   47, -133,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -133, -133,
     -133, -133, -133, -133, -133,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  182,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -133, -133, -133, -133,   47, -133,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

      182,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -133, -133, -133, -133, -133
    },

    {
        3, -134, -134, -134, -134, -134, -134, -134, -134, -134,
     -134, -134, -134, -134, -134, -134, -134, -134, -134, -134,
     -134, -134, -134, -134, -134, -134, -134, -134, -134, -134,
     -134, -134, -134, -134, -134, -134, -134, -134, -134, -134,
     -134, -134, -134, -134, -134, -134,   47, -134,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -134, -134,
     -134, -134, -134, -134, -134,   47,   47,   47,   47,  183,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -134, -134, -134, -134,   47, -134,   47,   47,   47,
       47,  183,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -134, -134, -134, -134, -134
    },

    {
        3, -135, -135, -135, -135, -135, -135, -135, -135, -135,
     -135, -135, -135, -135, -135, -135, -135, -135, -135, -135,
     -135, -135, -135, -135, -135, -135, -135, -135, -135, -135,
     -135, -135, -135, -135, -135, -135, -135, -135, -135, -135,
     -135, -135, -135, -135, -135, -135,   47, -135,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47, -135, -135,
     -135, -135, -135, -135, -135,   47,   47,  184,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -135, -135, -135, -135,   47, -135,   47,   47,  184,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -135, -135, -135, -135, -135
    },

    {
        3, -136, -136, -136, -136, -136, -136, -136, -136, -136,
     -136, -136, -136, -136, -136, -136, -136, -136, -136, -136,

     -136, -136, -136, -136, -136, -136, -136, -136, -136, -136,
     -136, -136, -136, -136, -136, -136, -136, -136, -136, -136,
     -136, -136, -136, -136, -136, -136,   47, -136,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -136, -136,
     -136, -136, -136, -136, -136,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -136, -136, -136, -136,   47, -136,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47,   47,   47, -136, -136, -136, -136, -136
    },

    {
        3, -137, -137, -137, -137, -137, -137, -137, -137, -137,
     -137, -137, -137, -137, -137, -137, -137, -137, -137, -137,
     -137, -137, -137, -137, -137, -137, -137, -137, -137, -137,
     -137, -137, -137, -137, -137, -137, -137, -137, -137, -137,
     -137, -137, -137, -137, -137, -137,   47, -137,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -137, -137,
     -137, -137, -137, -137, -137,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,  185,   47,   47,   47,   47,   47,

       47, -137, -137, -137, -137,   47, -137,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,  185,   47,   47,   47,
       47,   47,   47, -137, -137, -137, -137, -137
    },

    {
        3, -138, -138, -138, -138, -138, -138, -138, -138, -138,
     -138, -138, -138, -138, -138, -138, -138, -138, -138, -138,
     -138, -138, -138, -138, -138, -138, -138, -138, -138, -138,
     -138, -138, -138, -138, -138, -138, -138, -138, -138, -138,
     -138, -138, -138, -138, -138, -138,   47, -138,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -138, -138,

     -138, -138, -138, -138, -138,   47,   47,   47,   47,   47,
       47,  186,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -138, -138, -138, -138,   47, -138,   47,   47,   47,
       47,   47,   47,  186,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -138, -138, -138, -138, -138
    },

    {
        3, -139, -139, -139, -139, -139, -139, -139, -139, -139,
     -139, -139, -139, -139, -139, -139, -139, -139, -139, -139,
     -139, -139, -139, -139, -139, -139, -139, -139, -139, -139,

     -139, -139, -139, -139, -139, -139, -139, -139, -139, -139,
     -139, -139, -139, -139, -139, -139,   47, -139,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -139, -139,
     -139, -139, -139, -139, -139,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  187,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -139, -139, -139, -139,   47, -139,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
      187,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -139, -139, -139, -139, -139

    },

    {
        3, -140, -140, -140, -140, -140, -140, -140, -140, -140,
     -140, -140, -140, -140, -140, -140, -140, -140, -140, -140,
     -140, -140, -140, -140, -140, -140, -140, -140, -140, -140,
     -140, -140, -140, -140, -140, -140, -140, -140, -140, -140,
     -140, -140, -140, -140, -140, -140,   47, -140,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -140, -140,
     -140, -140, -140, -140, -140,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,  188,   47,   47,   47,   47,   47,   47,   47,
       47, -140, -140, -140, -140,   47, -140,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,  188,   47,   47,   47,   47,   47,
       47,   47,   47, -140, -140, -140, -140, -140
    },

    {
        3, -141, -141, -141, -141, -141, -141, -141, -141, -141,
     -141, -141, -141, -141, -141, -141, -141, -141, -141, -141,
     -141, -141, -141, -141, -141, -141, -141, -141, -141, -141,
     -141, -141, -141, -141, -141, -141, -141, -141, -141, -141,
     -141, -141, -141, -141, -141, -141,   47, -141,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -141, -141,
     -141, -141, -141, -141, -141,   47,   47,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -141, -141, -141, -141,   47, -141,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -141, -141, -141, -141, -141
    },

    {
        3, -142, -142, -142, -142, -142, -142, -142, -142, -142,
     -142, -142, -142, -142, -142, -142, -142, -142, -142, -142,
     -142, -142, -142, -142, -142, -142, -142, -142, -142, -142,
     -142, -142, -142, -142, -142, -142, -142, -142, -142, -142,

     -142, -142, -142, -142, -142, -142,   47, -142,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -142, -142,
     -142, -142, -142, -142, -142,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -142, -142, -142, -142,   47, -142,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -142, -142, -142, -142, -142
    },

    {
        3, -143, -143, -143, -143, -143, -143, -143, -143, -143,

     -143, -143, -143, -143, -143, -143, -143, -143, -143, -143,
     -143, -143, -143, -143, -143, -143, -143, -143, -143, -143,
     -143, -143, -143, -143, -143, -143, -143, -143, -143, -143,
     -143, -143, -143, -143, -143, -143,   47, -143,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -143, -143,
     -143, -143, -143, -143, -143,   47,   47,   47,  189,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -143, -143, -143, -143,   47, -143,   47,   47,   47,
      189,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -143, -143, -143, -143, -143
    },

    {
        3, -144, -144, -144, -144, -144, -144, -144, -144, -144,
     -144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
     -144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
     -144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
     -144, -144, -144, -144, -144, -144,   47, -144,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -144, -144,
     -144, -144, -144, -144, -144,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,  190,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -144, -144, -144, -144,   47, -144,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,  190,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -144, -144, -144, -144, -144
    },

    {
        3, -145, -145, -145, -145, -145, -145, -145, -145, -145,
     -145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
     -145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
     -145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
     -145, -145, -145, -145, -145, -145,   47, -145,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47, -145, -145,
     -145, -145, -145, -145, -145,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -145, -145, -145, -145,   47, -145,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -145, -145, -145, -145, -145
    },

    {
        3, -146, -146, -146, -146, -146, -146, -146, -146, -146,
     -146, -146, -146, -146, -146, -146, -146, -146, -146, -146,

     -146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
     -146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
     -146, -146, -146, -146, -146, -146,   47, -146,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -146, -146,
     -146, -146, -146, -146, -146,   47,   47,   47,   47,   47,
       47,  191,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,  192,  193,   47,   47,   47,   47,   47,   47,
       47, -146, -146, -146, -146,   47, -146,   47,   47,   47,
       47,   47,   47,  191,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,  192,  193,   47,   47,   47,   47,

       47,   47,   47, -146, -146, -146, -146, -146
    },

    {
        3, -147, -147, -147, -147, -147, -147, -147, -147, -147,
     -147, -147, -147, -147, -147, -147, -147, -147, -147, -147,
     -147, -147, -147, -147, -147, -147, -147, -147, -147, -147,
     -147, -147, -147, -147, -147, -147, -147, -147, -147, -147,
     -147, -147, -147, -147, -147, -147,   47, -147,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -147, -147,
     -147, -147, -147, -147, -147,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,  194,   47,  195,   47,   47,   47,   47,

       47, -147, -147, -147, -147,   47, -147,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,  194,   47,  195,   47,   47,
       47,   47,   47, -147, -147, -147, -147, -147
    },

    {
        3, -148, -148, -148, -148, -148, -148, -148, -148, -148,
     -148, -148, -148, -148, -148, -148, -148, -148, -148, -148,
     -148, -148, -148, -148, -148, -148, -148, -148, -148, -148,
     -148, -148, -148, -148, -148, -148, -148, -148, -148, -148,
     -148, -148, -148, -148, -148, -148,   47, -148,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -148, -148,

     -148, -148, -148, -148, -148,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -148, -148, -148, -148,   47, -148,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -148, -148, -148, -148, -148
    },

    {
        3, -149, -149, -149, -149, -149, -149, -149, -149, -149,
     -149, -149, -149, -149, -149, -149, -149, -149, -149, -149,
     -149, -149, -149, -149, -149, -149, -149, -149, -149, -149,

     -149, -149, -149, -149, -149, -149, -149, -149, -149, -149,
     -149, -149, -149, -149, -149, -149,   47, -149,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -149, -149,
     -149, -149, -149, -149, -149,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  196,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -149, -149, -149, -149,   47, -149,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
      196,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -149, -149, -149, -149, -149

    },

    {
        3, -150, -150, -150, -150, -150, -150, -150, -150, -150,
     -150, -150, -150, -150, -150, -150, -150, -150, -150, -150,
     -150, -150, -150, -150, -150, -150, -150, -150, -150, -150,
     -150, -150, -150, -150, -150, -150, -150, -150, -150, -150,
     -150, -150, -150, -150, -150, -150,   47, -150,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -150, -150,
     -150, -150, -150, -150, -150,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,  197,   47,   47,   47,   47,
       47, -150, -150, -150, -150,   47, -150,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,  197,   47,   47,
       47,   47,   47, -150, -150, -150, -150, -150
    },

    {
        3, -151, -151, -151, -151, -151, -151, -151, -151, -151,
     -151, -151, -151, -151, -151, -151, -151, -151, -151, -151,
     -151, -151, -151, -151, -151, -151, -151, -151, -151, -151,
     -151, -151, -151, -151, -151, -151, -151, -151, -151, -151,
     -151, -151, -151, -151, -151, -151,   47, -151,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -151, -151,
     -151, -151, -151, -151, -151,   47,   47,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,  198,   47,   47,   47,   47,   47,   47,
       47, -151, -151, -151, -151,   47, -151,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,  198,   47,   47,   47,   47,
       47,   47,   47, -151, -151, -151, -151, -151
    },

    {
        3, -152, -152, -152, -152, -152, -152, -152, -152, -152,
     -152, -152, -152, -152, -152, -152, -152, -152, -152, -152,
     -152, -152, -152, -152, -152, -152, -152, -152, -152, -152,
     -152, -152, -152, -152, -152, -152, -152, -152, -152, -152,

     -152, -152, -152, -152, -152, -152,   47, -152,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -152, -152,
     -152, -152, -152, -152, -152,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -152, -152, -152, -152,   47, -152,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -152, -152, -152, -152, -152
    },

    {
        3, -153, -153, -153, -153, -153, -153, -153, -153, -153,

     -153, -153, -153, -153, -153, -153, -153, -153, -153, -153,
     -153, -153, -153, -153, -153, -153, -153, -153, -153, -153,
     -153, -153, -153, -153, -153, -153, -153, -153, -153, -153,
     -153, -153, -153, -153, -153, -153,   47, -153,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -153, -153,
     -153, -153, -153, -153, -153,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,  199,   47,   47,   47,   47,   47,
       47, -153, -153, -153, -153,   47, -153,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47,   47,   47,   47,   47,   47,  199,   47,   47,   47,
       47,   47,   47, -153, -153, -153, -153, -153
    },

    {
        3, -154, -154, -154, -154, -154, -154, -154, -154, -154,
     -154, -154, -154, -154, -154, -154, -154, -154, -154, -154,
     -154, -154, -154, -154, -154, -154, -154, -154, -154, -154,
     -154, -154, -154, -154, -154, -154, -154, -154, -154, -154,
     -154, -154, -154, -154, -154, -154,   47, -154,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -154, -154,
     -154, -154, -154, -154, -154,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47,   47,   47,   47,  200,   47,   47,   47,   47,   47,
       47, -154, -154, -154, -154,   47, -154,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,  200,   47,   47,   47,
       47,   47,   47, -154, -154, -154, -154, -154
    },

    {
        3, -155, -155, -155, -155, -155, -155, -155, -155, -155,
     -155, -155, -155, -155, -155, -155, -155, -155, -155, -155,
     -155, -155, -155, -155, -155, -155, -155, -155, -155, -155,
     -155, -155, -155, -155, -155, -155, -155, -155, -155, -155,
     -155, -155, -155, -155, -155, -155,   47, -155,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47, -155, -155,
     -155, -155, -155, -155, -155,   47,   47,   47,   47,   47,
       47,  201,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -155, -155, -155, -155,   47, -155,   47,   47,   47,
       47,   47,   47,  201,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -155, -155, -155, -155, -155
    },

    {
        3, -156, -156, -156, -156, -156, -156, -156, -156, -156,
     -156, -156, -156, -156, -156, -156, -156, -156, -156, -156,

     -156, -156, -156, -156, -156, -156, -156, -156, -156, -156,
     -156, -156, -156, -156, -156, -156, -156, -156, -156, -156,
     -156, -156, -156, -156, -156, -156,   47, -156,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -156, -156,
     -156, -156, -156, -156, -156,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  202,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -156, -156, -156, -156,   47, -156,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
      202,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47,   47,   47, -156, -156, -156, -156, -156
    },

    {
        3, -157, -157, -157, -157, -157, -157, -157, -157, -157,
     -157, -157, -157, -157, -157, -157, -157, -157, -157, -157,
     -157, -157, -157, -157, -157, -157, -157, -157, -157, -157,
     -157, -157, -157, -157, -157, -157, -157, -157, -157, -157,
     -157, -157, -157, -157, -157, -157,   47, -157,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -157, -157,
     -157, -157, -157, -157, -157,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,  203,   47,   47,

       47, -157, -157, -157, -157,   47, -157,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,  203,
       47,   47,   47, -157, -157, -157, -157, -157
    },

    {
        3, -158, -158, -158, -158, -158, -158, -158, -158, -158,
     -158, -158, -158, -158, -158, -158, -158, -158, -158, -158,
     -158, -158, -158, -158, -158, -158, -158, -158, -158, -158,
     -158, -158, -158, -158, -158, -158, -158, -158, -158, -158,
     -158, -158, -158, -158, -158, -158,   47, -158,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -158, -158,

     -158, -158, -158, -158, -158,  204,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -158, -158, -158, -158,   47, -158,  204,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -158, -158, -158, -158, -158
    },

    {
        3, -159, -159, -159, -159, -159, -159, -159, -159, -159,
     -159, -159, -159, -159, -159, -159, -159, -159, -159, -159,
     -159, -159, -159, -159, -159, -159, -159, -159, -159, -159,

     -159, -159, -159, -159, -159, -159, -159, -159, -159, -159,
     -159, -159, -159, -159, -159, -159,   47, -159,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -159, -159,
     -159, -159, -159, -159, -159,   47,   47,   47,   47,  205,
       47,   47,   47,   47,   47,   47,   47,   47,  206,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -159, -159, -159, -159,   47, -159,   47,   47,   47,
       47,  205,   47,   47,   47,   47,   47,   47,   47,   47,
      206,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -159, -159, -159, -159, -159

    },

    {
        3, -160, -160, -160, -160, -160, -160, -160, -160, -160,
     -160, -160, -160, -160, -160, -160, -160, -160, -160, -160,
     -160, -160, -160, -160, -160, -160, -160, -160, -160, -160,
     -160, -160, -160, -160, -160, -160, -160, -160, -160, -160,
     -160, -160, -160, -160, -160, -160,   47, -160,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -160, -160,
     -160, -160, -160, -160, -160,   47,   47,   47,   47,   47,
      207,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -160, -160, -160, -160,   47, -160,   47,   47,   47,

       47,   47,  207,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -160, -160, -160, -160, -160
    },

    {
        3, -161, -161, -161, -161, -161, -161, -161, -161, -161,
     -161, -161, -161, -161, -161, -161, -161, -161, -161, -161,
     -161, -161, -161, -161, -161, -161, -161, -161, -161, -161,
     -161, -161, -161, -161, -161, -161, -161, -161, -161, -161,
     -161, -161, -161, -161, -161, -161,   47, -161,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -161, -161,
     -161, -161, -161, -161, -161,   47,   47,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -161, -161, -161, -161,   47, -161,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -161, -161, -161, -161, -161
    },

    {
        3, -162, -162, -162, -162, -162, -162, -162, -162, -162,
     -162, -162, -162, -162, -162, -162, -162, -162, -162, -162,
     -162, -162, -162, -162, -162, -162, -162, -162, -162, -162,
     -162, -162, -162, -162, -162, -162, -162, -162, -162, -162,

     -162, -162, -162, -162, -162, -162,   47, -162,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -162, -162,
     -162, -162, -162, -162, -162,   47,  208,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -162, -162, -162, -162,   47, -162,   47,  208,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -162, -162, -162, -162, -162
    },

    {
        3, -163, -163, -163, -163, -163, -163, -163, -163, -163,

     -163, -163, -163, -163, -163, -163, -163, -163, -163, -163,
     -163, -163, -163, -163, -163, -163, -163, -163, -163, -163,
     -163, -163, -163, -163, -163, -163, -163, -163, -163, -163,
     -163, -163, -163, -163, -163, -163,   47, -163,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -163, -163,
     -163, -163, -163, -163, -163,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -163, -163, -163, -163,   47, -163,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -163, -163, -163, -163, -163
    },

    {
        3, -164, -164, -164, -164, -164, -164, -164, -164, -164,
     -164, -164, -164, -164, -164, -164, -164, -164, -164, -164,
     -164, -164, -164, -164, -164, -164, -164, -164, -164, -164,
     -164, -164, -164, -164, -164, -164, -164, -164, -164, -164,
     -164, -164, -164, -164, -164,  209,   47, -164,  210,  210,
      210,  210,  210,  210,  210,  210,  210,  210, -164, -164,
     -164, -164, -164, -164, -164,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -164, -164, -164, -164,   47, -164,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -164, -164, -164, -164, -164
    },

    {
        3, -165, -165, -165, -165, -165, -165, -165, -165, -165,
     -165, -165, -165, -165, -165, -165, -165, -165, -165, -165,
     -165, -165, -165, -165, -165, -165, -165, -165, -165, -165,
     -165, -165, -165, -165, -165, -165, -165, -165, -165, -165,
     -165, -165, -165, -165, -165, -165, -165, -165,  165,  165,

      165,  165,  165,  165,  165,  165,  165,  165, -165, -165,
     -165, -165, -165, -165, -165, -165, -165, -165, -165, -165,
     -165, -165, -165, -165, -165, -165, -165, -165, -165, -165,
     -165, -165, -165, -165, -165, -165, -165, -165, -165, -165,
     -165, -165, -165, -165, -165, -165, -165, -165, -165, -165,
     -165, -165, -165, -165, -165, -165, -165, -165, -165, -165,
     -165, -165, -165, -165, -165, -165, -165, -165, -165, -165,
     -165, -165, -165, -165, -165, -165, -165, -165
    },

    {
        3, -166, -166, -166, -166, -166, -166, -166, -166, -166,
     -166, -166, -166, -166, -166, -166, -166, -166, -166, -166,

     -166, -166, -166, -166, -166, -166, -166, -166, -166, -166,
     -166, -166, -166, -166, -166, -166, -166, -166, -166, -166,
     -166, -166, -166, -166, -166, -166,   47, -166,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -166, -166,
     -166, -166, -166, -166, -166,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -166, -166, -166, -166,   47, -166,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47,   47,   47, -166, -166, -166, -166, -166
    },

    {
        3, -167, -167, -167, -167, -167, -167, -167, -167, -167,
     -167, -167, -167, -167, -167, -167, -167, -167, -167, -167,
     -167, -167, -167, -167, -167, -167, -167, -167, -167, -167,
     -167, -167, -167, -167, -167, -167, -167, -167, -167, -167,
     -167, -167, -167, -167, -167, -167,   47, -167,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -167, -167,
     -167, -167, -167, -167, -167,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,  211,   47,   47,   47,   47,   47,   47,   47,

       47, -167, -167, -167, -167,   47, -167,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,  211,   47,   47,   47,   47,   47,
       47,   47,   47, -167, -167, -167, -167, -167
    },

    {
        3, -168, -168, -168, -168, -168, -168, -168, -168, -168,
     -168, -168, -168, -168, -168, -168, -168, -168, -168, -168,
     -168, -168, -168, -168, -168, -168, -168, -168, -168, -168,
     -168, -168, -168, -168, -168, -168, -168, -168, -168, -168,
     -168, -168, -168, -168, -168, -168,   47, -168,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -168, -168,

     -168, -168, -168, -168, -168,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -168, -168, -168, -168,   47, -168,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -168, -168, -168, -168, -168
    },

    {
        3, -169, -169, -169, -169, -169, -169, -169, -169, -169,
     -169, -169, -169, -169, -169, -169, -169, -169, -169, -169,
     -169, -169, -169, -169, -169, -169, -169, -169, -169, -169,

     -169, -169, -169, -169, -169, -169, -169, -169, -169, -169,
     -169, -169, -169, -169, -169, -169,   47, -169,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -169, -169,
     -169, -169, -169, -169, -169,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -169, -169, -169, -169,  212, -169,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -169, -169, -169, -169, -169

    },

    {
        3, -170, -170, -170, -170, -170, -170, -170, -170, -170,
     -170, -170, -170, -170, -170, -170, -170, -170, -170, -170,
     -170, -170, -170, -170, -170, -170, -170, -170, -170, -170,
     -170, -170, -170, -170, -170, -170, -170, -170, -170, -170,
     -170, -170, -170, -170, -170, -170,   47, -170,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -170, -170,
     -170, -170, -170, -170, -170,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,  213,   47,   47,   47,   47,   47,
       47, -170, -170, -170, -170,   47, -170,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,  213,   47,   47,   47,
       47,   47,   47, -170, -170, -170, -170, -170
    },

    {
        3, -171, -171, -171, -171, -171, -171, -171, -171, -171,
     -171, -171, -171, -171, -171, -171, -171, -171, -171, -171,
     -171, -171, -171, -171, -171, -171, -171, -171, -171, -171,
     -171, -171, -171, -171, -171, -171, -171, -171, -171, -171,
     -171, -171, -171, -171, -171, -171,   47, -171,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -171, -171,
     -171, -171, -171, -171, -171,   47,   47,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -171, -171, -171, -171,   47, -171,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -171, -171, -171, -171, -171
    },

    {
        3, -172, -172, -172, -172, -172, -172, -172, -172, -172,
     -172, -172, -172, -172, -172, -172, -172, -172, -172, -172,
     -172, -172, -172, -172, -172, -172, -172, -172, -172, -172,
     -172, -172, -172, -172, -172, -172, -172, -172, -172, -172,

     -172, -172, -172, -172, -172, -172,   47, -172,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -172, -172,
     -172, -172, -172, -172, -172,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -172, -172, -172, -172,   47, -172,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -172, -172, -172, -172, -172
    },

    {
        3, -173, -173, -173, -173, -173, -173, -173, -173, -173,

     -173, -173, -173, -173, -173, -173, -173, -173, -173, -173,
     -173, -173, -173, -173, -173, -173, -173, -173, -173, -173,
     -173, -173, -173, -173, -173, -173, -173, -173, -173, -173,
     -173, -173, -173, -173, -173, -173,   47, -173,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -173, -173,
     -173, -173, -173, -173, -173,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,  214,   47,   47,   47,   47,   47,
       47, -173, -173, -173, -173,   47, -173,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47,   47,   47,   47,   47,   47,  214,   47,   47,   47,
       47,   47,   47, -173, -173, -173, -173, -173
    },

    {
        3, -174, -174, -174, -174, -174, -174, -174, -174, -174,
     -174, -174, -174, -174, -174, -174, -174, -174, -174, -174,
     -174, -174, -174, -174, -174, -174, -174, -174, -174, -174,
     -174, -174, -174, -174, -174, -174, -174, -174, -174, -174,
     -174, -174, -174, -174, -174, -174,   47, -174,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -174, -174,
     -174, -174, -174, -174, -174,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -174, -174, -174, -174,   47, -174,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -174, -174, -174, -174, -174
    },

    {
        3, -175, -175, -175, -175, -175, -175, -175, -175, -175,
     -175, -175, -175, -175, -175, -175, -175, -175, -175, -175,
     -175, -175, -175, -175, -175, -175, -175, -175, -175, -175,
     -175, -175, -175, -175, -175, -175, -175, -175, -175, -175,
     -175, -175, -175, -175, -175, -175,   47, -175,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47, -175, -175,
     -175, -175, -175, -175, -175,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -175, -175, -175, -175,   47, -175,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -175, -175, -175, -175, -175
    },

    {
        3, -176, -176, -176, -176, -176, -176, -176, -176, -176,
     -176, -176, -176, -176, -176, -176, -176, -176, -176, -176,

     -176, -176, -176, -176, -176, -176, -176, -176, -176, -176,
     -176, -176, -176, -176, -176, -176, -176, -176, -176, -176,
     -176, -176, -176, -176, -176, -176,   47, -176,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -176, -176,
     -176, -176, -176, -176, -176,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -176, -176, -176, -176,   47, -176,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47,   47,   47, -176, -176, -176, -176, -176
    },

    {
        3, -177, -177, -177, -177, -177, -177, -177, -177, -177,
     -177, -177, -177, -177, -177, -177, -177, -177, -177, -177,
     -177, -177, -177, -177, -177, -177, -177, -177, -177, -177,
     -177, -177, -177, -177, -177, -177, -177, -177, -177, -177,
     -177, -177, -177, -177, -177, -177,   47, -177,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -177, -177,
     -177, -177, -177, -177, -177,   47,   47,   47,   47,  215,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47, -177, -177, -177, -177,   47, -177,   47,   47,   47,
       47,  215,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -177, -177, -177, -177, -177
    },

    {
        3, -178, -178, -178, -178, -178, -178, -178, -178, -178,
     -178, -178, -178, -178, -178, -178, -178, -178, -178, -178,
     -178, -178, -178, -178, -178, -178, -178, -178, -178, -178,
     -178, -178, -178, -178, -178, -178, -178, -178, -178, -178,
     -178, -178, -178, -178, -178, -178,   47, -178,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -178, -178,

     -178, -178, -178, -178, -178,   47,   47,   47,   47,  216,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -178, -178, -178, -178,   47, -178,   47,   47,   47,
       47,  216,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -178, -178, -178, -178, -178
    },

    {
        3, -179, -179, -179, -179, -179, -179, -179, -179, -179,
     -179, -179, -179, -179, -179, -179, -179, -179, -179, -179,
     -179, -179, -179, -179, -179, -179, -179, -179, -179, -179,

     -179, -179, -179, -179, -179, -179, -179, -179, -179, -179,
     -179, -179, -179, -179, -179, -179,   47, -179,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -179, -179,
     -179, -179, -179, -179, -179,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,  217,   47,   47,   47,   47,   47,
       47, -179, -179, -179, -179,   47, -179,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,  217,   47,   47,   47,
       47,   47,   47, -179, -179, -179, -179, -179

    },

    {
        3, -180, -180, -180, -180, -180, -180, -180, -180, -180,
     -180, -180, -180, -180, -180, -180, -180, -180, -180, -180,
     -180, -180, -180, -180, -180, -180, -180, -180, -180, -180,
     -180, -180, -180, -180, -180, -180, -180, -180, -180, -180,
     -180, -180, -180, -180, -180, -180,   47, -180,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -180, -180,
     -180, -180, -180, -180, -180,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -180, -180, -180, -180,   47, -180,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -180, -180, -180, -180, -180
    },

    {
        3, -181, -181, -181, -181, -181, -181, -181, -181, -181,
     -181, -181, -181, -181, -181, -181, -181, -181, -181, -181,
     -181, -181, -181, -181, -181, -181, -181, -181, -181, -181,
     -181, -181, -181, -181, -181, -181, -181, -181, -181, -181,
     -181, -181, -181, -181, -181, -181,   47, -181,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -181, -181,
     -181, -181, -181, -181, -181,   47,   47,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -181, -181, -181, -181,   47, -181,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -181, -181, -181, -181, -181
    },

    {
        3, -182, -182, -182, -182, -182, -182, -182, -182, -182,
     -182, -182, -182, -182, -182, -182, -182, -182, -182, -182,
     -182, -182, -182, -182, -182, -182, -182, -182, -182, -182,
     -182, -182, -182, -182, -182, -182, -182, -182, -182, -182,

     -182, -182, -182, -182, -182, -182,   47, -182,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -182, -182,
     -182, -182, -182, -182, -182,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,  218,   47,   47,   47,   47,   47,
       47, -182, -182, -182, -182,   47, -182,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,  218,   47,   47,   47,
       47,   47,   47, -182, -182, -182, -182, -182
    },

    {
        3, -183, -183, -183, -183, -183, -183, -183, -183, -183,

     -183, -183, -183, -183, -183, -183, -183, -183, -183, -183,
     -183, -183, -183, -183, -183, -183, -183, -183, -183, -183,
     -183, -183, -183, -183, -183, -183, -183, -183, -183, -183,
     -183, -183, -183, -183, -183, -183,   47, -183,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -183, -183,
     -183, -183, -183, -183, -183,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -183, -183, -183, -183,  219, -183,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -183, -183, -183, -183, -183
    },

    {
        3, -184, -184, -184, -184, -184, -184, -184, -184, -184,
     -184, -184, -184, -184, -184, -184, -184, -184, -184, -184,
     -184, -184, -184, -184, -184, -184, -184, -184, -184, -184,
     -184, -184, -184, -184, -184, -184, -184, -184, -184, -184,
     -184, -184, -184, -184, -184, -184,   47, -184,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -184, -184,
     -184, -184, -184, -184, -184,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47,   47,   47,   47,  220,   47,   47,   47,   47,   47,
       47, -184, -184, -184, -184,   47, -184,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,  220,   47,   47,   47,
       47,   47,   47, -184, -184, -184, -184, -184
    },

    {
        3, -185, -185, -185, -185, -185, -185, -185, -185, -185,
     -185, -185, -185, -185, -185, -185, -185, -185, -185, -185,
     -185, -185, -185, -185, -185, -185, -185, -185, -185, -185,
     -185, -185, -185, -185, -185, -185, -185, -185, -185, -185,
     -185, -185, -185, -185, -185, -185,   47, -185,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47, -185, -185,
     -185, -185, -185, -185, -185,   47,   47,   47,   47,   47,
       47,   47,   47,  221,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -185, -185, -185, -185,   47, -185,   47,   47,   47,
       47,   47,   47,   47,   47,  221,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -185, -185, -185, -185, -185
    },

    {
        3, -186, -186, -186, -186, -186, -186, -186, -186, -186,
     -186, -186, -186, -186, -186, -186, -186, -186, -186, -186,

     -186, -186, -186, -186, -186, -186, -186, -186, -186, -186,
     -186, -186, -186, -186, -186, -186, -186, -186, -186, -186,
     -186, -186, -186, -186, -186, -186,   47, -186,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -186, -186,
     -186, -186, -186, -186, -186,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -186, -186, -186, -186,   47, -186,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47,   47,   47, -186, -186, -186, -186, -186
    },

    {
        3, -187, -187, -187, -187, -187, -187, -187, -187, -187,
     -187, -187, -187, -187, -187, -187, -187, -187, -187, -187,
     -187, -187, -187, -187, -187, -187, -187, -187, -187, -187,
     -187, -187, -187, -187, -187, -187, -187, -187, -187, -187,
     -187, -187, -187, -187, -187, -187,   47, -187,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -187, -187,
     -187, -187, -187, -187, -187,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47, -187, -187, -187, -187,   47, -187,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -187, -187, -187, -187, -187
    },

    {
        3, -188, -188, -188, -188, -188, -188, -188, -188, -188,
     -188, -188, -188, -188, -188, -188, -188, -188, -188, -188,
     -188, -188, -188, -188, -188, -188, -188, -188, -188, -188,
     -188, -188, -188, -188, -188, -188, -188, -188, -188, -188,
     -188, -188, -188, -188, -188, -188,   47, -188,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -188, -188,

     -188, -188, -188, -188, -188,   47,   47,   47,   47,  222,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -188, -188, -188, -188,   47, -188,   47,   47,   47,
       47,  222,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -188, -188, -188, -188, -188
    },

    {
        3, -189, -189, -189, -189, -189, -189, -189, -189, -189,
     -189, -189, -189, -189, -189, -189, -189, -189, -189, -189,
     -189, -189, -189, -189, -189, -189, -189, -189, -189, -189,

     -189, -189, -189, -189, -189, -189, -189, -189, -189, -189,
     -189, -189, -189, -189, -189, -189,   47, -189,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -189, -189,
     -189, -189, -189, -189, -189,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -189, -189, -189, -189,   47, -189,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -189, -189, -189, -189, -189

    },

    {
        3, -190, -190, -190, -190, -190, -190, -190, -190, -190,
     -190, -190, -190, -190, -190, -190, -190, -190, -190, -190,
     -190, -190, -190, -190, -190, -190, -190, -190, -190, -190,
     -190, -190, -190, -190, -190, -190, -190, -190, -190, -190,
     -190, -190, -190, -190, -190, -190,   47, -190,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -190, -190,
     -190, -190, -190, -190, -190,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -190, -190, -190, -190,   47, -190,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -190, -190, -190, -190, -190
    },

    {
        3, -191, -191, -191, -191, -191, -191, -191, -191, -191,
     -191, -191, -191, -191, -191, -191, -191, -191, -191, -191,
     -191, -191, -191, -191, -191, -191, -191, -191, -191, -191,
     -191, -191, -191, -191, -191, -191, -191, -191, -191, -191,
     -191, -191, -191, -191, -191, -191,   47, -191,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -191, -191,
     -191, -191, -191, -191, -191,   47,   47,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,  223,   47,   47,   47,   47,   47,   47,   47,
       47, -191, -191, -191, -191,   47, -191,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,  223,   47,   47,   47,   47,   47,
       47,   47,   47, -191, -191, -191, -191, -191
    },

    {
        3, -192, -192, -192, -192, -192, -192, -192, -192, -192,
     -192, -192, -192, -192, -192, -192, -192, -192, -192, -192,
     -192, -192, -192, -192, -192, -192, -192, -192, -192, -192,
     -192, -192, -192, -192, -192, -192, -192, -192, -192, -192,

     -192, -192, -192, -192, -192, -192,   47, -192,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -192, -192,
     -192, -192, -192, -192, -192,   47,   47,   47,   47,  224,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -192, -192, -192, -192,   47, -192,   47,   47,   47,
       47,  224,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -192, -192, -192, -192, -192
    },

    {
        3, -193, -193, -193, -193, -193, -193, -193, -193, -193,

     -193, -193, -193, -193, -193, -193, -193, -193, -193, -193,
     -193, -193, -193, -193, -193, -193, -193, -193, -193, -193,
     -193, -193, -193, -193, -193, -193, -193, -193, -193, -193,
     -193, -193, -193, -193, -193, -193,   47, -193,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -193, -193,
     -193, -193, -193, -193, -193,   47,   47,   47,   47,  225,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -193, -193, -193, -193,   47, -193,   47,   47,   47,
       47,  225,   47,   47,   47,   47,   47,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -193, -193, -193, -193, -193
    },

    {
        3, -194, -194, -194, -194, -194, -194, -194, -194, -194,
     -194, -194, -194, -194, -194, -194, -194, -194, -194, -194,
     -194, -194, -194, -194, -194, -194, -194, -194, -194, -194,
     -194, -194, -194, -194, -194, -194, -194, -194, -194, -194,
     -194, -194, -194, -194, -194, -194,   47, -194,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -194, -194,
     -194, -194, -194, -194, -194,   47,   47,   47,   47,  226,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -194, -194, -194, -194,   47, -194,   47,   47,   47,
       47,  226,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -194, -194, -194, -194, -194
    },

    {
        3, -195, -195, -195, -195, -195, -195, -195, -195, -195,
     -195, -195, -195, -195, -195, -195, -195, -195, -195, -195,
     -195, -195, -195, -195, -195, -195, -195, -195, -195, -195,
     -195, -195, -195, -195, -195, -195, -195, -195, -195, -195,
     -195, -195, -195, -195, -195, -195,   47, -195,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47, -195, -195,
     -195, -195, -195, -195, -195,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,  227,   47,   47,   47,   47,   47,
       47, -195, -195, -195, -195,   47, -195,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,  227,   47,   47,   47,
       47,   47,   47, -195, -195, -195, -195, -195
    },

    {
        3, -196, -196, -196, -196, -196, -196, -196, -196, -196,
     -196, -196, -196, -196, -196, -196, -196, -196, -196, -196,

     -196, -196, -196, -196, -196, -196, -196, -196, -196, -196,
     -196, -196, -196, -196, -196, -196, -196, -196, -196, -196,
     -196, -196, -196, -196, -196, -196,   47, -196,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -196, -196,
     -196, -196, -196, -196, -196,   47,   47,   47,  228,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -196, -196, -196, -196,   47, -196,   47,   47,   47,
      228,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47,   47,   47, -196, -196, -196, -196, -196
    },

    {
        3, -197, -197, -197, -197, -197, -197, -197, -197, -197,
     -197, -197, -197, -197, -197, -197, -197, -197, -197, -197,
     -197, -197, -197, -197, -197, -197, -197, -197, -197, -197,
     -197, -197, -197, -197, -197, -197, -197, -197, -197, -197,
     -197, -197, -197, -197, -197, -197,   47, -197,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -197, -197,
     -197, -197, -197, -197, -197,   47,   47,   47,   47,  229,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47, -197, -197, -197, -197,   47, -197,   47,   47,   47,
       47,  229,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -197, -197, -197, -197, -197
    },

    {
        3, -198, -198, -198, -198, -198, -198, -198, -198, -198,
     -198, -198, -198, -198, -198, -198, -198, -198, -198, -198,
     -198, -198, -198, -198, -198, -198, -198, -198, -198, -198,
     -198, -198, -198, -198, -198, -198, -198, -198, -198, -198,
     -198, -198, -198, -198, -198, -198,   47, -198,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -198, -198,

     -198, -198, -198, -198, -198,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,  230,   47,   47,   47,   47,
       47, -198, -198, -198, -198,   47, -198,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,  230,   47,   47,
       47,   47,   47, -198, -198, -198, -198, -198
    },

    {
        3, -199, -199, -199, -199, -199, -199, -199, -199, -199,
     -199, -199, -199, -199, -199, -199, -199, -199, -199, -199,
     -199, -199, -199, -199, -199, -199, -199, -199, -199, -199,

     -199, -199, -199, -199, -199, -199, -199, -199, -199, -199,
     -199, -199, -199, -199, -199, -199,   47, -199,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -199, -199,
     -199, -199, -199, -199, -199,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -199, -199, -199, -199,   47, -199,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -199, -199, -199, -199, -199

    },

    {
        3, -200, -200, -200, -200, -200, -200, -200, -200, -200,
     -200, -200, -200, -200, -200, -200, -200, -200, -200, -200,
     -200, -200, -200, -200, -200, -200, -200, -200, -200, -200,
     -200, -200, -200, -200, -200, -200, -200, -200, -200, -200,
     -200, -200, -200, -200, -200, -200,   47, -200,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -200, -200,
     -200, -200, -200, -200, -200,   47,   47,   47,   47,  231,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -200, -200, -200, -200,   47, -200,   47,   47,   47,

       47,  231,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -200, -200, -200, -200, -200
    },

    {
        3, -201, -201, -201, -201, -201, -201, -201, -201, -201,
     -201, -201, -201, -201, -201, -201, -201, -201, -201, -201,
     -201, -201, -201, -201, -201, -201, -201, -201, -201, -201,
     -201, -201, -201, -201, -201, -201, -201, -201, -201, -201,
     -201, -201, -201, -201, -201, -201,   47, -201,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -201, -201,
     -201, -201, -201, -201, -201,   47,   47,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -201, -201, -201, -201,   47, -201,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -201, -201, -201, -201, -201
    },

    {
        3, -202, -202, -202, -202, -202, -202, -202, -202, -202,
     -202, -202, -202, -202, -202, -202, -202, -202, -202, -202,
     -202, -202, -202, -202, -202, -202, -202, -202, -202, -202,
     -202, -202, -202, -202, -202, -202, -202, -202, -202, -202,

     -202, -202, -202, -202, -202, -202,   47, -202,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -202, -202,
     -202, -202, -202, -202, -202,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -202, -202, -202, -202,   47, -202,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -202, -202, -202, -202, -202
    },

    {
        3, -203, -203, -203, -203, -203, -203, -203, -203, -203,

     -203, -203, -203, -203, -203, -203, -203, -203, -203, -203,
     -203, -203, -203, -203, -203, -203, -203, -203, -203, -203,
     -203, -203, -203, -203, -203, -203, -203, -203, -203, -203,
     -203, -203, -203, -203, -203, -203,   47, -203,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -203, -203,
     -203, -203, -203, -203, -203,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -203, -203, -203, -203,   47, -203,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -203, -203, -203, -203, -203
    },

    {
        3, -204, -204, -204, -204, -204, -204, -204, -204, -204,
     -204, -204, -204, -204, -204, -204, -204, -204, -204, -204,
     -204, -204, -204, -204, -204, -204, -204, -204, -204, -204,
     -204, -204, -204, -204, -204, -204, -204, -204, -204, -204,
     -204, -204, -204, -204, -204, -204,   47, -204,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -204, -204,
     -204, -204, -204, -204, -204,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -204, -204, -204, -204,   47, -204,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -204, -204, -204, -204, -204
    },

    {
        3, -205, -205, -205, -205, -205, -205, -205, -205, -205,
     -205, -205, -205, -205, -205, -205, -205, -205, -205, -205,
     -205, -205, -205, -205, -205, -205, -205, -205, -205, -205,
     -205, -205, -205, -205, -205, -205, -205, -205, -205, -205,
     -205, -205, -205, -205, -205, -205,   47, -205,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47, -205, -205,
     -205, -205, -205, -205, -205,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -205, -205, -205, -205,   47, -205,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -205, -205, -205, -205, -205
    },

    {
        3, -206, -206, -206, -206, -206, -206, -206, -206, -206,
     -206, -206, -206, -206, -206, -206, -206, -206, -206, -206,

     -206, -206, -206, -206, -206, -206, -206, -206, -206, -206,
     -206, -206, -206, -206, -206, -206, -206, -206, -206, -206,
     -206, -206, -206, -206, -206, -206,   47, -206,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -206, -206,
     -206, -206, -206, -206, -206,   47,   47,  232,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -206, -206, -206, -206,   47, -206,   47,   47,  232,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47,   47,   47, -206, -206, -206, -206, -206
    },

    {
        3, -207, -207, -207, -207, -207, -207, -207, -207, -207,
     -207, -207, -207, -207, -207, -207, -207, -207, -207, -207,
     -207, -207, -207, -207, -207, -207, -207, -207, -207, -207,
     -207, -207, -207, -207, -207, -207, -207, -207, -207, -207,
     -207, -207, -207, -207, -207, -207,   47, -207,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -207, -207,
     -207, -207, -207, -207, -207,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47, -207, -207, -207, -207,   47, -207,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -207, -207, -207, -207, -207
    },

    {
        3, -208, -208, -208, -208, -208, -208, -208, -208, -208,
     -208, -208, -208, -208, -208, -208, -208, -208, -208, -208,
     -208, -208, -208, -208, -208, -208, -208, -208, -208, -208,
     -208, -208, -208, -208, -208, -208, -208, -208, -208, -208,
     -208, -208, -208, -208, -208, -208,   47, -208,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -208, -208,

     -208, -208, -208, -208, -208,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -208, -208, -208, -208,   47, -208,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -208, -208, -208, -208, -208
    },

    {
        3, -209, -209, -209, -209, -209, -209, -209, -209, -209,
     -209, -209, -209, -209, -209, -209, -209, -209, -209, -209,
     -209, -209, -209, -209, -209, -209, -209, -209, -209, -209,

     -209, -209, -209, -209, -209, -209, -209, -209, -209, -209,
     -209, -209, -209, -209, -209, -209, -209, -209,  233,  233,
      233,  233,  233,  233,  233,  233,  233,  233, -209, -209,
     -209, -209, -209, -209, -209, -209, -209, -209, -209, -209,
     -209, -209, -209, -209, -209, -209, -209, -209, -209, -209,
     -209, -209, -209, -209, -209, -209, -209, -209, -209, -209,
     -209, -209, -209, -209, -209, -209, -209, -209, -209, -209,
     -209, -209, -209, -209, -209, -209, -209, -209, -209, -209,
     -209, -209, -209, -209, -209, -209, -209, -209, -209, -209,
     -209, -209, -209, -209, -209, -209, -209, -209

    },

    {
        3, -210, -210, -210, -210, -210, -210, -210, -210, -210,
     -210, -210, -210, -210, -210, -210, -210, -210, -210, -210,
     -210, -210, -210, -210, -210, -210, -210, -210, -210, -210,
     -210, -210, -210, -210, -210, -210, -210, -210, -210, -210,
     -210, -210, -210, -210, -210, -210,   47, -210,  210,  210,
      210,  210,  210,  210,  210,  210,  210,  210, -210, -210,
     -210, -210, -210, -210, -210,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -210, -210, -210, -210,   47, -210,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -210, -210, -210, -210, -210
    },

    {
        3, -211, -211, -211, -211, -211, -211, -211, -211, -211,
     -211, -211, -211, -211, -211, -211, -211, -211, -211, -211,
     -211, -211, -211, -211, -211, -211, -211, -211, -211, -211,
     -211, -211, -211, -211, -211, -211, -211, -211, -211, -211,
     -211, -211, -211, -211, -211, -211,   47, -211,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -211, -211,
     -211, -211, -211, -211, -211,   47,   47,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -211, -211, -211, -211,   47, -211,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -211, -211, -211, -211, -211
    },

    {
        3, -212, -212, -212, -212, -212, -212, -212, -212, -212,
     -212, -212, -212, -212, -212, -212, -212, -212, -212, -212,
     -212, -212, -212, -212, -212, -212, -212, -212, -212, -212,
     -212, -212, -212, -212, -212, -212, -212, -212, -212, -212,

     -212, -212, -212, -212, -212, -212,   47, -212,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -212, -212,
     -212, -212, -212, -212, -212,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,  234,   47,   47,   47,   47,   47,   47,   47,
       47, -212, -212, -212, -212,   47, -212,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,  234,   47,   47,   47,   47,   47,
       47,   47,   47, -212, -212, -212, -212, -212
    },

    {
        3, -213, -213, -213, -213, -213, -213, -213, -213, -213,

     -213, -213, -213, -213, -213, -213, -213, -213, -213, -213,
     -213, -213, -213, -213, -213, -213, -213, -213, -213, -213,
     -213, -213, -213, -213, -213, -213, -213, -213, -213, -213,
     -213, -213, -213, -213, -213, -213,   47, -213,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -213, -213,
     -213, -213, -213, -213, -213,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -213, -213, -213, -213,   47, -213,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -213, -213, -213, -213, -213
    },

    {
        3, -214, -214, -214, -214, -214, -214, -214, -214, -214,
     -214, -214, -214, -214, -214, -214, -214, -214, -214, -214,
     -214, -214, -214, -214, -214, -214, -214, -214, -214, -214,
     -214, -214, -214, -214, -214, -214, -214, -214, -214, -214,
     -214, -214, -214, -214, -214, -214,   47, -214,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -214, -214,
     -214, -214, -214, -214, -214,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47,   47,  235,   47,   47,   47,   47,   47,   47,   47,
       47, -214, -214, -214, -214,   47, -214,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,  235,   47,   47,   47,   47,   47,
       47,   47,   47, -214, -214, -214, -214, -214
    },

    {
        3, -215, -215, -215, -215, -215, -215, -215, -215, -215,
     -215, -215, -215, -215, -215, -215, -215, -215, -215, -215,
     -215, -215, -215, -215, -215, -215, -215, -215, -215, -215,
     -215, -215, -215, -215, -215, -215, -215, -215, -215, -215,
     -215, -215, -215, -215, -215, -215,   47, -215,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47, -215, -215,
     -215, -215, -215, -215, -215,   47,   47,   47,  236,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -215, -215, -215, -215,   47, -215,   47,   47,   47,
      236,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -215, -215, -215, -215, -215
    },

    {
        3, -216, -216, -216, -216, -216, -216, -216, -216, -216,
     -216, -216, -216, -216, -216, -216, -216, -216, -216, -216,

     -216, -216, -216, -216, -216, -216, -216, -216, -216, -216,
     -216, -216, -216, -216, -216, -216, -216, -216, -216, -216,
     -216, -216, -216, -216, -216, -216,   47, -216,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -216, -216,
     -216, -216, -216, -216, -216,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -216, -216, -216, -216,   47, -216,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47,   47,   47, -216, -216, -216, -216, -216
    },

    {
        3, -217, -217, -217, -217, -217, -217, -217, -217, -217,
     -217, -217, -217, -217, -217, -217, -217, -217, -217, -217,
     -217, -217, -217, -217, -217, -217, -217, -217, -217, -217,
     -217, -217, -217, -217, -217, -217, -217, -217, -217, -217,
     -217, -217, -217, -217, -217, -217,   47, -217,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -217, -217,
     -217, -217, -217, -217, -217,   47,   47,   47,   47,   47,
       47,   47,   47,  237,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47, -217, -217, -217, -217,   47, -217,   47,   47,   47,
       47,   47,   47,   47,   47,  237,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -217, -217, -217, -217, -217
    },

    {
        3, -218, -218, -218, -218, -218, -218, -218, -218, -218,
     -218, -218, -218, -218, -218, -218, -218, -218, -218, -218,
     -218, -218, -218, -218, -218, -218, -218, -218, -218, -218,
     -218, -218, -218, -218, -218, -218, -218, -218, -218, -218,
     -218, -218, -218, -218, -218, -218,   47, -218,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -218, -218,

     -218, -218, -218, -218, -218,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -218, -218, -218, -218,   47, -218,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -218, -218, -218, -218, -218
    },

    {
        3, -219, -219, -219, -219, -219, -219, -219, -219, -219,
     -219, -219, -219, -219, -219, -219, -219, -219, -219, -219,
     -219, -219, -219, -219, -219, -219, -219, -219, -219, -219,

     -219, -219, -219, -219, -219, -219, -219, -219, -219, -219,
     -219, -219, -219, -219, -219, -219,   47, -219,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -219, -219,
     -219, -219, -219, -219, -219,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,  238,   47,   47,   47,   47,   47,   47,   47,
       47, -219, -219, -219, -219,   47, -219,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,  238,   47,   47,   47,   47,   47,
       47,   47,   47, -219, -219, -219, -219, -219

    },

    {
        3, -220, -220, -220, -220, -220, -220, -220, -220, -220,
     -220, -220, -220, -220, -220, -220, -220, -220, -220, -220,
     -220, -220, -220, -220, -220, -220, -220, -220, -220, -220,
     -220, -220, -220, -220, -220, -220, -220, -220, -220, -220,
     -220, -220, -220, -220, -220, -220,   47, -220,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -220, -220,
     -220, -220, -220, -220, -220,   47,   47,   47,   47,   47,
       47,   47,   47,  239,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -220, -220, -220, -220,   47, -220,   47,   47,   47,

       47,   47,   47,   47,   47,  239,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -220, -220, -220, -220, -220
    },

    {
        3, -221, -221, -221, -221, -221, -221, -221, -221, -221,
     -221, -221, -221, -221, -221, -221, -221, -221, -221, -221,
     -221, -221, -221, -221, -221, -221, -221, -221, -221, -221,
     -221, -221, -221, -221, -221, -221, -221, -221, -221, -221,
     -221, -221, -221, -221, -221, -221,   47, -221,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -221, -221,
     -221, -221, -221, -221, -221,   47,   47,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,  240,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -221, -221, -221, -221,   47, -221,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
      240,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -221, -221, -221, -221, -221
    },

    {
        3, -222, -222, -222, -222, -222, -222, -222, -222, -222,
     -222, -222, -222, -222, -222, -222, -222, -222, -222, -222,
     -222, -222, -222, -222, -222, -222, -222, -222, -222, -222,
     -222, -222, -222, -222, -222, -222, -222, -222, -222, -222,

     -222, -222, -222, -222, -222, -222,   47, -222,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -222, -222,
     -222, -222, -222, -222, -222,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
      241,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -222, -222, -222, -222,   47, -222,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,  241,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -222, -222, -222, -222, -222
    },

    {
        3, -223, -223, -223, -223, -223, -223, -223, -223, -223,

     -223, -223, -223, -223, -223, -223, -223, -223, -223, -223,
     -223, -223, -223, -223, -223, -223, -223, -223, -223, -223,
     -223, -223, -223, -223, -223, -223, -223, -223, -223, -223,
     -223, -223, -223, -223, -223, -223,   47, -223,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -223, -223,
     -223, -223, -223, -223, -223,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -223, -223, -223, -223,   47, -223,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -223, -223, -223, -223, -223
    },

    {
        3, -224, -224, -224, -224, -224, -224, -224, -224, -224,
     -224, -224, -224, -224, -224, -224, -224, -224, -224, -224,
     -224, -224, -224, -224, -224, -224, -224, -224, -224, -224,
     -224, -224, -224, -224, -224, -224, -224, -224, -224, -224,
     -224, -224, -224, -224, -224, -224,   47, -224,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -224, -224,
     -224, -224, -224, -224, -224,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

      242,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -224, -224, -224, -224,   47, -224,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,  242,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -224, -224, -224, -224, -224
    },

    {
        3, -225, -225, -225, -225, -225, -225, -225, -225, -225,
     -225, -225, -225, -225, -225, -225, -225, -225, -225, -225,
     -225, -225, -225, -225, -225, -225, -225, -225, -225, -225,
     -225, -225, -225, -225, -225, -225, -225, -225, -225, -225,
     -225, -225, -225, -225, -225, -225,   47, -225,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47, -225, -225,
     -225, -225, -225, -225, -225,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,  243,   47,   47,   47,   47,   47,
       47, -225, -225, -225, -225,   47, -225,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,  243,   47,   47,   47,
       47,   47,   47, -225, -225, -225, -225, -225
    },

    {
        3, -226, -226, -226, -226, -226, -226, -226, -226, -226,
     -226, -226, -226, -226, -226, -226, -226, -226, -226, -226,

     -226, -226, -226, -226, -226, -226, -226, -226, -226, -226,
     -226, -226, -226, -226, -226, -226, -226, -226, -226, -226,
     -226, -226, -226, -226, -226, -226,   47, -226,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -226, -226,
     -226, -226, -226, -226, -226,   47,   47,   47,   47,   47,
       47,   47,   47,  244,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -226, -226, -226, -226,   47, -226,   47,   47,   47,
       47,   47,   47,   47,   47,  244,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47,   47,   47, -226, -226, -226, -226, -226
    },

    {
        3, -227, -227, -227, -227, -227, -227, -227, -227, -227,
     -227, -227, -227, -227, -227, -227, -227, -227, -227, -227,
     -227, -227, -227, -227, -227, -227, -227, -227, -227, -227,
     -227, -227, -227, -227, -227, -227, -227, -227, -227, -227,
     -227, -227, -227, -227, -227, -227,   47, -227,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -227, -227,
     -227, -227, -227, -227, -227,   47,   47,   47,   47,   47,
       47,   47,   47,  245,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47, -227, -227, -227, -227,   47, -227,   47,   47,   47,
       47,   47,   47,   47,   47,  245,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -227, -227, -227, -227, -227
    },

    {
        3, -228, -228, -228, -228, -228, -228, -228, -228, -228,
     -228, -228, -228, -228, -228, -228, -228, -228, -228, -228,
     -228, -228, -228, -228, -228, -228, -228, -228, -228, -228,
     -228, -228, -228, -228, -228, -228, -228, -228, -228, -228,
     -228, -228, -228, -228, -228, -228,   47, -228,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -228, -228,

     -228, -228, -228, -228, -228,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -228, -228, -228, -228,   47, -228,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -228, -228, -228, -228, -228
    },

    {
        3, -229, -229, -229, -229, -229, -229, -229, -229, -229,
     -229, -229, -229, -229, -229, -229, -229, -229, -229, -229,
     -229, -229, -229, -229, -229, -229, -229, -229, -229, -229,

     -229, -229, -229, -229, -229, -229, -229, -229, -229, -229,
     -229, -229, -229, -229, -229, -229,   47, -229,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -229, -229,
     -229, -229, -229, -229, -229,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -229, -229, -229, -229,   47, -229,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -229, -229, -229, -229, -229

    },

    {
        3, -230, -230, -230, -230, -230, -230, -230, -230, -230,
     -230, -230, -230, -230, -230, -230, -230, -230, -230, -230,
     -230, -230, -230, -230, -230, -230, -230, -230, -230, -230,
     -230, -230, -230, -230, -230, -230, -230, -230, -230, -230,
     -230, -230, -230, -230, -230, -230,   47, -230,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -230, -230,
     -230, -230, -230, -230, -230,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,  246,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -230, -230, -230, -230,   47, -230,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,  246,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -230, -230, -230, -230, -230
    },

    {
        3, -231, -231, -231, -231, -231, -231, -231, -231, -231,
     -231, -231, -231, -231, -231, -231, -231, -231, -231, -231,
     -231, -231, -231, -231, -231, -231, -231, -231, -231, -231,
     -231, -231, -231, -231, -231, -231, -231, -231, -231, -231,
     -231, -231, -231, -231, -231, -231,   47, -231,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -231, -231,
     -231, -231, -231, -231, -231,   47,   47,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -231, -231, -231, -231,   47, -231,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -231, -231, -231, -231, -231
    },

    {
        3, -232, -232, -232, -232, -232, -232, -232, -232, -232,
     -232, -232, -232, -232, -232, -232, -232, -232, -232, -232,
     -232, -232, -232, -232, -232, -232, -232, -232, -232, -232,
     -232, -232, -232, -232, -232, -232, -232, -232, -232, -232,

     -232, -232, -232, -232, -232, -232,   47, -232,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -232, -232,
     -232, -232, -232, -232, -232,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -232, -232, -232, -232,   47, -232,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -232, -232, -232, -232, -232
    },

    {
        3, -233, -233, -233, -233, -233, -233, -233, -233, -233,

     -233, -233, -233, -233, -233, -233, -233, -233, -233, -233,
     -233, -233, -233, -233, -233, -233, -233, -233, -233, -233,
     -233, -233, -233, -233, -233, -233, -233, -233, -233, -233,
     -233, -233, -233, -233, -233, -233, -233, -233,  233,  233,
      233,  233,  233,  233,  233,  233,  233,  233, -233, -233,
     -233, -233, -233, -233, -233, -233, -233, -233, -233, -233,
     -233, -233, -233, -233, -233, -233, -233, -233, -233, -233,
     -233, -233, -233, -233, -233, -233, -233, -233, -233, -233,
     -233, -233, -233, -233, -233, -233, -233, -233, -233, -233,
     -233, -233, -233, -233, -233, -233, -233, -233, -233, -233,

     -233, -233, -233, -233, -233, -233, -233, -233, -233, -233,
     -233, -233, -233, -233, -233, -233, -233, -233
    },

    {
        3, -234, -234, -234, -234, -234, -234, -234, -234, -234,
     -234, -234, -234, -234, -234, -234, -234, -234, -234, -234,
     -234, -234, -234, -234, -234, -234, -234, -234, -234, -234,
     -234, -234, -234, -234, -234, -234, -234, -234, -234, -234,
     -234, -234, -234, -234, -234, -234,   47, -234,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -234, -234,
     -234, -234, -234, -234, -234,   47,   47,   47,   47,  247,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -234, -234, -234, -234,   47, -234,   47,   47,   47,
       47,  247,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -234, -234, -234, -234, -234
    },

    {
        3, -235, -235, -235, -235, -235, -235, -235, -235, -235,
     -235, -235, -235, -235, -235, -235, -235, -235, -235, -235,
     -235, -235, -235, -235, -235, -235, -235, -235, -235, -235,
     -235, -235, -235, -235, -235, -235, -235, -235, -235, -235,
     -235, -235, -235, -235, -235, -235,   47, -235,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47, -235, -235,
     -235, -235, -235, -235, -235,  248,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -235, -235, -235, -235,   47, -235,  248,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -235, -235, -235, -235, -235
    },

    {
        3, -236, -236, -236, -236, -236, -236, -236, -236, -236,
     -236, -236, -236, -236, -236, -236, -236, -236, -236, -236,

     -236, -236, -236, -236, -236, -236, -236, -236, -236, -236,
     -236, -236, -236, -236, -236, -236, -236, -236, -236, -236,
     -236, -236, -236, -236, -236, -236,   47, -236,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -236, -236,
     -236, -236, -236, -236, -236,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -236, -236, -236, -236,  249, -236,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47,   47,   47, -236, -236, -236, -236, -236
    },

    {
        3, -237, -237, -237, -237, -237, -237, -237, -237, -237,
     -237, -237, -237, -237, -237, -237, -237, -237, -237, -237,
     -237, -237, -237, -237, -237, -237, -237, -237, -237, -237,
     -237, -237, -237, -237, -237, -237, -237, -237, -237, -237,
     -237, -237, -237, -237, -237, -237,   47, -237,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -237, -237,
     -237, -237, -237, -237, -237,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  250,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47, -237, -237, -237, -237,   47, -237,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
      250,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -237, -237, -237, -237, -237
    },

    {
        3, -238, -238, -238, -238, -238, -238, -238, -238, -238,
     -238, -238, -238, -238, -238, -238, -238, -238, -238, -238,
     -238, -238, -238, -238, -238, -238, -238, -238, -238, -238,
     -238, -238, -238, -238, -238, -238, -238, -238, -238, -238,
     -238, -238, -238, -238, -238, -238,   47, -238,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -238, -238,

     -238, -238, -238, -238, -238,   47,   47,   47,   47,  251,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -238, -238, -238, -238,   47, -238,   47,   47,   47,
       47,  251,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -238, -238, -238, -238, -238
    },

    {
        3, -239, -239, -239, -239, -239, -239, -239, -239, -239,
     -239, -239, -239, -239, -239, -239, -239, -239, -239, -239,
     -239, -239, -239, -239, -239, -239, -239, -239, -239, -239,

     -239, -239, -239, -239, -239, -239, -239, -239, -239, -239,
     -239, -239, -239, -239, -239, -239,   47, -239,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -239, -239,
     -239, -239, -239, -239, -239,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,  252,   47,   47,   47,
       47, -239, -239, -239, -239,   47, -239,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  252,   47,
       47,   47,   47, -239, -239, -239, -239, -239

    },

    {
        3, -240, -240, -240, -240, -240, -240, -240, -240, -240,
     -240, -240, -240, -240, -240, -240, -240, -240, -240, -240,
     -240, -240, -240, -240, -240, -240, -240, -240, -240, -240,
     -240, -240, -240, -240, -240, -240, -240, -240, -240, -240,
     -240, -240, -240, -240, -240, -240,   47, -240,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -240, -240,
     -240, -240, -240, -240, -240,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,  253,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -240, -240, -240, -240,   47, -240,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,  253,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -240, -240, -240, -240, -240
    },

    {
        3, -241, -241, -241, -241, -241, -241, -241, -241, -241,
     -241, -241, -241, -241, -241, -241, -241, -241, -241, -241,
     -241, -241, -241, -241, -241, -241, -241, -241, -241, -241,
     -241, -241, -241, -241, -241, -241, -241, -241, -241, -241,
     -241, -241, -241, -241, -241, -241,   47, -241,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -241, -241,
     -241, -241, -241, -241, -241,   47,   47,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -241, -241, -241, -241,   47, -241,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -241, -241, -241, -241, -241
    },

    {
        3, -242, -242, -242, -242, -242, -242, -242, -242, -242,
     -242, -242, -242, -242, -242, -242, -242, -242, -242, -242,
     -242, -242, -242, -242, -242, -242, -242, -242, -242, -242,
     -242, -242, -242, -242, -242, -242, -242, -242, -242, -242,

     -242, -242, -242, -242, -242, -242,   47, -242,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -242, -242,
     -242, -242, -242, -242, -242,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -242, -242, -242, -242,   47, -242,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -242, -242, -242, -242, -242
    },

    {
        3, -243, -243, -243, -243, -243, -243, -243, -243, -243,

     -243, -243, -243, -243, -243, -243, -243, -243, -243, -243,
     -243, -243, -243, -243, -243, -243, -243, -243, -243, -243,
     -243, -243, -243, -243, -243, -243, -243, -243, -243, -243,
     -243, -243, -243, -243, -243, -243,   47, -243,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -243, -243,
     -243, -243, -243, -243, -243,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -243, -243, -243, -243,   47, -243,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -243, -243, -243, -243, -243
    },

    {
        3, -244, -244, -244, -244, -244, -244, -244, -244, -244,
     -244, -244, -244, -244, -244, -244, -244, -244, -244, -244,
     -244, -244, -244, -244, -244, -244, -244, -244, -244, -244,
     -244, -244, -244, -244, -244, -244, -244, -244, -244, -244,
     -244, -244, -244, -244, -244, -244,   47, -244,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -244, -244,
     -244, -244, -244, -244, -244,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
      254, -244, -244, -244, -244,   47, -244,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,  254, -244, -244, -244, -244, -244
    },

    {
        3, -245, -245, -245, -245, -245, -245, -245, -245, -245,
     -245, -245, -245, -245, -245, -245, -245, -245, -245, -245,
     -245, -245, -245, -245, -245, -245, -245, -245, -245, -245,
     -245, -245, -245, -245, -245, -245, -245, -245, -245, -245,
     -245, -245, -245, -245, -245, -245,   47, -245,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47, -245, -245,
     -245, -245, -245, -245, -245,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,  255,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -245, -245, -245, -245,   47, -245,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  255,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -245, -245, -245, -245, -245
    },

    {
        3, -246, -246, -246, -246, -246, -246, -246, -246, -246,
     -246, -246, -246, -246, -246, -246, -246, -246, -246, -246,

     -246, -246, -246, -246, -246, -246, -246, -246, -246, -246,
     -246, -246, -246, -246, -246, -246, -246, -246, -246, -246,
     -246, -246, -246, -246, -246, -246,   47, -246,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -246, -246,
     -246, -246, -246, -246, -246,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -246, -246, -246, -246,   47, -246,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47,   47,   47, -246, -246, -246, -246, -246
    },

    {
        3, -247, -247, -247, -247, -247, -247, -247, -247, -247,
     -247, -247, -247, -247, -247, -247, -247, -247, -247, -247,
     -247, -247, -247, -247, -247, -247, -247, -247, -247, -247,
     -247, -247, -247, -247, -247, -247, -247, -247, -247, -247,
     -247, -247, -247, -247, -247, -247,   47, -247,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -247, -247,
     -247, -247, -247, -247, -247,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,  256,   47,   47,   47,   47,   47,   47,

       47, -247, -247, -247, -247,   47, -247,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,  256,   47,   47,   47,   47,
       47,   47,   47, -247, -247, -247, -247, -247
    },

    {
        3, -248, -248, -248, -248, -248, -248, -248, -248, -248,
     -248, -248, -248, -248, -248, -248, -248, -248, -248, -248,
     -248, -248, -248, -248, -248, -248, -248, -248, -248, -248,
     -248, -248, -248, -248, -248, -248, -248, -248, -248, -248,
     -248, -248, -248, -248, -248, -248,   47, -248,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -248, -248,

     -248, -248, -248, -248, -248,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,  257,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -248, -248, -248, -248,   47, -248,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
      257,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -248, -248, -248, -248, -248
    },

    {
        3, -249, -249, -249, -249, -249, -249, -249, -249, -249,
     -249, -249, -249, -249, -249, -249, -249, -249, -249, -249,
     -249, -249, -249, -249, -249, -249, -249, -249, -249, -249,

     -249, -249, -249, -249, -249, -249, -249, -249, -249, -249,
     -249, -249, -249, -249, -249, -249,   47, -249,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -249, -249,
     -249, -249, -249, -249, -249,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,  258,   47,   47,   47,   47,   47,   47,   47,
       47, -249, -249, -249, -249,   47, -249,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,  258,   47,   47,   47,   47,   47,
       47,   47,   47, -249, -249, -249, -249, -249

    },

    {
        3, -250, -250, -250, -250, -250, -250, -250, -250, -250,
     -250, -250, -250, -250, -250, -250, -250, -250, -250, -250,
     -250, -250, -250, -250, -250, -250, -250, -250, -250, -250,
     -250, -250, -250, -250, -250, -250, -250, -250, -250, -250,
     -250, -250, -250, -250, -250, -250,   47, -250,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -250, -250,
     -250, -250, -250, -250, -250,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,  259,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -250, -250, -250, -250,   47, -250,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,  259,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -250, -250, -250, -250, -250
    },

    {
        3, -251, -251, -251, -251, -251, -251, -251, -251, -251,
     -251, -251, -251, -251, -251, -251, -251, -251, -251, -251,
     -251, -251, -251, -251, -251, -251, -251, -251, -251, -251,
     -251, -251, -251, -251, -251, -251, -251, -251, -251, -251,
     -251, -251, -251, -251, -251, -251,   47, -251,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -251, -251,
     -251, -251, -251, -251, -251,   47,   47,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,  260,   47,   47,   47,   47,   47,   47,
       47, -251, -251, -251, -251,   47, -251,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,  260,   47,   47,   47,   47,
       47,   47,   47, -251, -251, -251, -251, -251
    },

    {
        3, -252, -252, -252, -252, -252, -252, -252, -252, -252,
     -252, -252, -252, -252, -252, -252, -252, -252, -252, -252,
     -252, -252, -252, -252, -252, -252, -252, -252, -252, -252,
     -252, -252, -252, -252, -252, -252, -252, -252, -252, -252,

     -252, -252, -252, -252, -252, -252,   47, -252,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -252, -252,
     -252, -252, -252, -252, -252,   47,   47,   47,   47,  261,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -252, -252, -252, -252,   47, -252,   47,   47,   47,
       47,  261,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -252, -252, -252, -252, -252
    },

    {
        3, -253, -253, -253, -253, -253, -253, -253, -253, -253,

     -253, -253, -253, -253, -253, -253, -253, -253, -253, -253,
     -253, -253, -253, -253, -253, -253, -253, -253, -253, -253,
     -253, -253, -253, -253, -253, -253, -253, -253, -253, -253,
     -253, -253, -253, -253, -253, -253,   47, -253,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -253, -253,
     -253, -253, -253, -253, -253,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -253, -253, -253, -253,   47, -253,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -253, -253, -253, -253, -253
    },

    {
        3, -254, -254, -254, -254, -254, -254, -254, -254, -254,
     -254, -254, -254, -254, -254, -254, -254, -254, -254, -254,
     -254, -254, -254, -254, -254, -254, -254, -254, -254, -254,
     -254, -254, -254, -254, -254, -254, -254, -254, -254, -254,
     -254, -254, -254, -254, -254, -254,   47, -254,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -254, -254,
     -254, -254, -254, -254, -254,   47,   47,   47,   47,  262,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -254, -254, -254, -254,   47, -254,   47,   47,   47,
       47,  262,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -254, -254, -254, -254, -254
    },

    {
        3, -255, -255, -255, -255, -255, -255, -255, -255, -255,
     -255, -255, -255, -255, -255, -255, -255, -255, -255, -255,
     -255, -255, -255, -255, -255, -255, -255, -255, -255, -255,
     -255, -255, -255, -255, -255, -255, -255, -255, -255, -255,
     -255, -255, -255, -255, -255, -255,   47, -255,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47, -255, -255,
     -255, -255, -255, -255, -255,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -255, -255, -255, -255,   47, -255,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -255, -255, -255, -255, -255
    },

    {
        3, -256, -256, -256, -256, -256, -256, -256, -256, -256,
     -256, -256, -256, -256, -256, -256, -256, -256, -256, -256,

     -256, -256, -256, -256, -256, -256, -256, -256, -256, -256,
     -256, -256, -256, -256, -256, -256, -256, -256, -256, -256,
     -256, -256, -256, -256, -256, -256,   47, -256,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -256, -256,
     -256, -256, -256, -256, -256,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -256, -256, -256, -256,   47, -256,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47,   47,   47, -256, -256, -256, -256, -256
    },

    {
        3, -257, -257, -257, -257, -257, -257, -257, -257, -257,
     -257, -257, -257, -257, -257, -257, -257, -257, -257, -257,
     -257, -257, -257, -257, -257, -257, -257, -257, -257, -257,
     -257, -257, -257, -257, -257, -257, -257, -257, -257, -257,
     -257, -257, -257, -257, -257, -257,   47, -257,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -257, -257,
     -257, -257, -257, -257, -257,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,  263,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47, -257, -257, -257, -257,   47, -257,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,  263,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -257, -257, -257, -257, -257
    },

    {
        3, -258, -258, -258, -258, -258, -258, -258, -258, -258,
     -258, -258, -258, -258, -258, -258, -258, -258, -258, -258,
     -258, -258, -258, -258, -258, -258, -258, -258, -258, -258,
     -258, -258, -258, -258, -258, -258, -258, -258, -258, -258,
     -258, -258, -258, -258, -258, -258,   47, -258,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -258, -258,

     -258, -258, -258, -258, -258,   47,   47,   47,   47,  264,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -258, -258, -258, -258,   47, -258,   47,   47,   47,
       47,  264,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -258, -258, -258, -258, -258
    },

    {
        3, -259, -259, -259, -259, -259, -259, -259, -259, -259,
     -259, -259, -259, -259, -259, -259, -259, -259, -259, -259,
     -259, -259, -259, -259, -259, -259, -259, -259, -259, -259,

     -259, -259, -259, -259, -259, -259, -259, -259, -259, -259,
     -259, -259, -259, -259, -259, -259,   47, -259,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -259, -259,
     -259, -259, -259, -259, -259,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -259, -259, -259, -259,   47, -259,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -259, -259, -259, -259, -259

    },

    {
        3, -260, -260, -260, -260, -260, -260, -260, -260, -260,
     -260, -260, -260, -260, -260, -260, -260, -260, -260, -260,
     -260, -260, -260, -260, -260, -260, -260, -260, -260, -260,
     -260, -260, -260, -260, -260, -260, -260, -260, -260, -260,
     -260, -260, -260, -260, -260, -260,   47, -260,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -260, -260,
     -260, -260, -260, -260, -260,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -260, -260, -260, -260,   47, -260,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -260, -260, -260, -260, -260
    },

    {
        3, -261, -261, -261, -261, -261, -261, -261, -261, -261,
     -261, -261, -261, -261, -261, -261, -261, -261, -261, -261,
     -261, -261, -261, -261, -261, -261, -261, -261, -261, -261,
     -261, -261, -261, -261, -261, -261, -261, -261, -261, -261,
     -261, -261, -261, -261, -261, -261,   47, -261,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -261, -261,
     -261, -261, -261, -261, -261,   47,   47,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -261, -261, -261, -261,  265, -261,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -261, -261, -261, -261, -261
    },

    {
        3, -262, -262, -262, -262, -262, -262, -262, -262, -262,
     -262, -262, -262, -262, -262, -262, -262, -262, -262, -262,
     -262, -262, -262, -262, -262, -262, -262, -262, -262, -262,
     -262, -262, -262, -262, -262, -262, -262, -262, -262, -262,

     -262, -262, -262, -262, -262, -262,   47, -262,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -262, -262,
     -262, -262, -262, -262, -262,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,  266,   47,   47,   47,   47,   47,   47,
       47, -262, -262, -262, -262,   47, -262,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,  266,   47,   47,   47,   47,
       47,   47,   47, -262, -262, -262, -262, -262
    },

    {
        3, -263, -263, -263, -263, -263, -263, -263, -263, -263,

     -263, -263, -263, -263, -263, -263, -263, -263, -263, -263,
     -263, -263, -263, -263, -263, -263, -263, -263, -263, -263,
     -263, -263, -263, -263, -263, -263, -263, -263, -263, -263,
     -263, -263, -263, -263, -263, -263,   47, -263,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -263, -263,
     -263, -263, -263, -263, -263,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -263, -263, -263, -263,   47, -263,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -263, -263, -263, -263, -263
    },

    {
        3, -264, -264, -264, -264, -264, -264, -264, -264, -264,
     -264, -264, -264, -264, -264, -264, -264, -264, -264, -264,
     -264, -264, -264, -264, -264, -264, -264, -264, -264, -264,
     -264, -264, -264, -264, -264, -264, -264, -264, -264, -264,
     -264, -264, -264, -264, -264, -264,   47, -264,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -264, -264,
     -264, -264, -264, -264, -264,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47,   47,   47,  267,   47,   47,   47,   47,   47,   47,
       47, -264, -264, -264, -264,   47, -264,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,  267,   47,   47,   47,   47,
       47,   47,   47, -264, -264, -264, -264, -264
    },

    {
        3, -265, -265, -265, -265, -265, -265, -265, -265, -265,
     -265, -265, -265, -265, -265, -265, -265, -265, -265, -265,
     -265, -265, -265, -265, -265, -265, -265, -265, -265, -265,
     -265, -265, -265, -265, -265, -265, -265, -265, -265, -265,
     -265, -265, -265, -265, -265, -265,   47, -265,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47, -265, -265,
     -265, -265, -265, -265, -265,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,  268,   47,   47,   47,   47,   47,   47,   47,
       47, -265, -265, -265, -265,   47, -265,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,  268,   47,   47,   47,   47,   47,
       47,   47,   47, -265, -265, -265, -265, -265
    },

    {
        3, -266, -266, -266, -266, -266, -266, -266, -266, -266,
     -266, -266, -266, -266, -266, -266, -266, -266, -266, -266,

     -266, -266, -266, -266, -266, -266, -266, -266, -266, -266,
     -266, -266, -266, -266, -266, -266, -266, -266, -266, -266,
     -266, -266, -266, -266, -266, -266,   47, -266,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -266, -266,
     -266, -266, -266, -266, -266,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -266, -266, -266, -266,   47, -266,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47,   47,   47, -266, -266, -266, -266, -266
    },

    {
        3, -267, -267, -267, -267, -267, -267, -267, -267, -267,
     -267, -267, -267, -267, -267, -267, -267, -267, -267, -267,
     -267, -267, -267, -267, -267, -267, -267, -267, -267, -267,
     -267, -267, -267, -267, -267, -267, -267, -267, -267, -267,
     -267, -267, -267, -267, -267, -267,   47, -267,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -267, -267,
     -267, -267, -267, -267, -267,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47, -267, -267, -267, -267,   47, -267,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -267, -267, -267, -267, -267
    },

    {
        3, -268, -268, -268, -268, -268, -268, -268, -268, -268,
     -268, -268, -268, -268, -268, -268, -268, -268, -268, -268,
     -268, -268, -268, -268, -268, -268, -268, -268, -268, -268,
     -268, -268, -268, -268, -268, -268, -268, -268, -268, -268,
     -268, -268, -268, -268, -268, -268,   47, -268,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -268, -268,

     -268, -268, -268, -268, -268,   47,   47,   47,   47,  269,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -268, -268, -268, -268,   47, -268,   47,   47,   47,
       47,  269,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -268, -268, -268, -268, -268
    },

    {
        3, -269, -269, -269, -269, -269, -269, -269, -269, -269,
     -269, -269, -269, -269, -269, -269, -269, -269, -269, -269,
     -269, -269, -269, -269, -269, -269, -269, -269, -269, -269,

     -269, -269, -269, -269, -269, -269, -269, -269, -269, -269,
     -269, -269, -269, -269, -269, -269,   47, -269,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -269, -269,
     -269, -269, -269, -269, -269,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,  270,   47,   47,   47,   47,   47,   47,
       47, -269, -269, -269, -269,   47, -269,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,  270,   47,   47,   47,   47,
       47,   47,   47, -269, -269, -269, -269, -269

    },

    {
        3, -270, -270, -270, -270, -270, -270, -270, -270, -270,
     -270, -270, -270, -270, -270, -270, -270, -270, -270, -270,
     -270, -270, -270, -270, -270, -270, -270, -270, -270, -270,
     -270, -270, -270, -270, -270, -270, -270, -270, -270, -270,
     -270, -270, -270, -270, -270, -270,   47, -270,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47, -270, -270,
     -270, -270, -270, -270, -270,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47, -270, -270, -270, -270,   47, -270,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47, -270, -270, -270, -270, -270
    },

    } ;

static yy_state_type yy_get_previous_state ( void );
static yy_state_type yy_try_NUL_trans ( yy_state_type current_state  );
static int yy_get_next_buffer ( void );
static void yynoreturn yy_fatal_error ( const char* msg  );

/* Done after the current pattern has been matched and before the
 * corresponding action - sets up yytext.
 */
#define YY_DO_BEFORE_ACTION \
	(yytext_ptr) = yy_bp; \
	yyleng = (int) (yy_cp - yy_bp); \
	(yy_hold_char) = *yy_cp; \
	*yy_cp = '\0'; \
	(yy_c_buf_p) = yy_cp;
#define YY_NUM_RULES 91
#define YY_END_OF_BUFFER 92
/* This struct is not used in this scanner,
   but its presence is necessary. */
struct yy_trans_info
	{
	flex_int32_t yy_verify;
	flex_int32_t yy_nxt;
	};
static const flex_int16_t yy_accept[271] =
    {   0,
        0,    0,   92,   90,   87,   87,   10,   11,   14,   12,
       18,   13,   89,   16,    3,    3,    8,   17,    9,   89,
       89,   89,   89,   64,   89,   89,   64,   89,   89,   89,
       89,   64,   89,   89,   88,   89,   89,   64,   89,   19,
       20,   15,   64,   64,   64,   89,   89,   89,    3,   89,
       89,    4,    7,    6,    5,   89,   89,   89,   89,   89,
       89,   89,   27,   89,   89,   89,   89,   89,   89,   89,
       89,   89,   89,   89,   23,   89,   89,   89,   89,   42,
       89,   89,   89,   89,   68,   89,   89,   78,   67,   89,
       29,   89,   89,   89,   89,   89,   89,   89,   89,   89,

       89,   89,   26,   89,   89,   89,   89,   89,    2,    0,
        3,    1,    1,   28,   89,   89,   89,   89,   34,   89,
       89,   89,   89,   89,   89,   39,   89,   89,   89,   25,
       89,   89,   89,   89,   89,   69,   89,   89,   41,   44,
       43,   36,   89,   89,   32,   89,   89,   48,   89,   89,
       89,   33,   89,   89,   89,   89,   89,   89,   89,   89,
       45,   89,   31,   89,    3,   82,   89,   57,   89,   89,
       58,   24,   89,   55,   46,   49,   89,   89,   89,   38,
       54,   89,   89,   89,   89,   47,   53,   89,   30,   50,
       89,   89,   89,   89,   89,   89,   89,   89,   40,   89,

       65,   60,   59,   56,   21,   89,   51,   52,    0,    2,
       86,   89,   66,   89,   89,   22,   89,   63,   89,   89,
       89,   89,   85,   89,   89,   89,   89,   35,   81,   89,
       70,   37,    2,   89,   89,   89,   89,   89,   89,   89,
       61,   62,   84,   89,   89,   71,   89,   89,   89,   89,
       89,   89,   79,   89,   72,   75,   89,   89,   80,   74,
       89,   89,   83,   89,   89,   73,   77,   89,   89,   76
    } ;

static yy_state_type yy_last_accepting_state;
static char *yy_last_accepting_cpos;

static const yy_state_type yy_NUL_trans[271] =
    {   0,
        4,    4,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0
    } ;

extern int yy_flex_debug;
int yy_flex_debug = 0;

/* The intent behind this definition is that it'll catch
 * any uses of REJECT which flex missed.
 */
#define REJECT reject_used_but_not_detected
#define yymore() yymore_used_but_not_detected
#define YY_MORE_ADJ 0
#define YY_RESTORE_YY_MORE_OFFSET
char *yytext;
#line 1 "lexerparser.ll"
#line 2 "lexerparser.ll"
# include <cerrno>
# include <climits>
# include <cstdlib>
# include <string>
# include <locale>
# include <list>
#include <iostream>
# include "Genesys++-driver.h"
# include "GenesysParser.h"
# include "obj_t.h"
# include "../kernel/util/Util.h"
# include "../kernel/util/List.h"
# include "../kernel/simulator/Attribute.h"
# include "../kernel/simulator/Counter.h"
# include "../kernel/simulator/ModelDataDefinition.h"
# include "../kernel/simulator/StatisticsCollector.h"
/**begin_Includes_plugins**/
/**begin_Includes:Variable**/
#include "../plugins/data/Variable.h"
/**end_Includes:Variable**/
/**begin_Includes:Queue**/
#include "../plugins/data/Queue.h"
/**end_Includes:Queue**/
/**begin_Includes:Formula**/
#include "../plugins/data/Formula.h"
/**end_Includes:Formula**/
/**begin_Includes:Resource**/
#include "../plugins/data/Resource.h"
/**end_Includes:Resource**/
/**begin_Includes:Set**/
#include "../plugins/data/Set.h"
/**end_Includes:Set**/
/**end_Includes_plugins**/


// Work around an incompatibility in flex (at least versions
// 2.5.31 through 2.5.33): it generates code that does
// not conform to C89.  See Debian bug 333231
// <http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=333231>.
# undef yywrap
# define yywrap() 1

// The location of the current token.
static yy::location loc;
#line 5186 "../Genesys++-scanner.cpp"
#define YY_NO_INPUT 1
#line 50 "lexerparser.ll"
  // Code run each time a pattern is matched.
  # define YY_USER_ACTION  loc.columns (yyleng);
	//std::cout << yyleng << std::endl;
#line 5192 "../Genesys++-scanner.cpp"
#line 5193 "../Genesys++-scanner.cpp"

#define INITIAL 0

#ifndef YY_NO_UNISTD_H
/* Special case for "unistd.h", since it is non-ANSI. We include it way
 * down here because we want the user's section 1 to have been scanned first.
 * The user has a chance to override it with an option.
 */
#include <unistd.h>
#endif

#ifndef YY_EXTRA_TYPE
#define YY_EXTRA_TYPE void *
#endif

static int yy_init_globals ( void );

/* Accessor methods to globals.
   These are made visible to non-reentrant scanners for convenience. */

int yylex_destroy ( void );

int yyget_debug ( void );

void yyset_debug ( int debug_flag  );

YY_EXTRA_TYPE yyget_extra ( void );

void yyset_extra ( YY_EXTRA_TYPE user_defined  );

FILE *yyget_in ( void );

void yyset_in  ( FILE * _in_str  );

FILE *yyget_out ( void );

void yyset_out  ( FILE * _out_str  );

			int yyget_leng ( void );

char *yyget_text ( void );

int yyget_lineno ( void );

void yyset_lineno ( int _line_number  );

/* Macros after this point can all be overridden by user definitions in
 * section 1.
 */

#ifndef YY_SKIP_YYWRAP
#ifdef __cplusplus
extern "C" int yywrap ( void );
#else
extern int yywrap ( void );
#endif
#endif

#ifndef YY_NO_UNPUT
    
#endif

#ifndef yytext_ptr
static void yy_flex_strncpy ( char *, const char *, int );
#endif

#ifdef YY_NEED_STRLEN
static int yy_flex_strlen ( const char * );
#endif

#ifndef YY_NO_INPUT
#ifdef __cplusplus
static int yyinput ( void );
#else
static int input ( void );
#endif

#endif

/* Amount of stuff to slurp up with each read. */
#ifndef YY_READ_BUF_SIZE
#ifdef __ia64__
/* On IA-64, the buffer size is 16k, not 8k */
#define YY_READ_BUF_SIZE 16384
#else
#define YY_READ_BUF_SIZE 8192
#endif /* __ia64__ */
#endif

/* Copy whatever the last rule matched to the standard output. */
#ifndef ECHO
/* This used to be an fputs(), but since the string might contain NUL's,
 * we now use fwrite().
 */
#define ECHO do { if (fwrite( yytext, (size_t) yyleng, 1, yyout )) {} } while (0)
#endif

/* Gets input and stuffs it into "buf".  number of characters read, or YY_NULL,
 * is returned in "result".
 */
#ifndef YY_INPUT
#define YY_INPUT(buf,result,max_size) \
	errno=0; \
	while ( (result = (int) read( fileno(yyin), buf, (yy_size_t) max_size )) < 0 ) \
	{ \
		if( errno != EINTR) \
		{ \
			YY_FATAL_ERROR( "input in flex scanner failed" ); \
			break; \
		} \
		errno=0; \
		clearerr(yyin); \
	}\
\

#endif

/* No semi-colon after return; correct usage is to write "yyterminate();" -
 * we don't want an extra ';' after the "return" because that will cause
 * some compilers to complain about unreachable statements.
 */
#ifndef yyterminate
#define yyterminate() return YY_NULL
#endif

/* Number of entries by which start-condition stack grows. */
#ifndef YY_START_STACK_INCR
#define YY_START_STACK_INCR 25
#endif

/* Report a fatal error. */
#ifndef YY_FATAL_ERROR
#define YY_FATAL_ERROR(msg) yy_fatal_error( msg )
#endif

/* end tables serialization structures and prototypes */

/* Default declaration of generated scanner - a define so the user can
 * easily add parameters.
 */
#ifndef YY_DECL
#define YY_DECL_IS_OURS 1

extern int yylex (void);

#define YY_DECL int yylex (void)
#endif /* !YY_DECL */

/* Code executed at the beginning of each rule, after yytext and yyleng
 * have been set up.
 */
#ifndef YY_USER_ACTION
#define YY_USER_ACTION
#endif

/* Code executed at the end of each rule. */
#ifndef YY_BREAK
#define YY_BREAK /*LINTED*/break;
#endif

#define YY_RULE_SETUP \
	YY_USER_ACTION

/** The main scanner function which does all the work.
 */
YY_DECL
{
	yy_state_type yy_current_state;
	char *yy_cp, *yy_bp;
	int yy_act;
    
	if ( !(yy_init) )
		{
		(yy_init) = 1;

#ifdef YY_USER_INIT
		YY_USER_INIT;
#endif

		if ( ! (yy_start) )
			(yy_start) = 1;	/* first start state */

		if ( ! yyin )
			yyin = stdin;

		if ( ! yyout )
			yyout = stdout;

		if ( ! YY_CURRENT_BUFFER ) {
			yyensure_buffer_stack ();
			YY_CURRENT_BUFFER_LVALUE =
				yy_create_buffer( yyin, YY_BUF_SIZE );
		}

		yy_load_buffer_state(  );
		}

	{
#line 60 "lexerparser.ll"



#line 64 "lexerparser.ll"
  // Code run each time yylex is called.
  loc.step ();



#line 5402 "../Genesys++-scanner.cpp"

	while ( /*CONSTCOND*/1 )		/* loops until end-of-file is reached */
		{
		yy_cp = (yy_c_buf_p);

		/* Support of yytext. */
		*yy_cp = (yy_hold_char);

		/* yy_bp points to the position in yy_ch_buf of the start of
		 * the current run.
		 */
		yy_bp = yy_cp;

		yy_current_state = (yy_start);
yy_match:
		while ( (yy_current_state = yy_nxt[yy_current_state][ YY_SC_TO_UI(*yy_cp) ]) > 0 )
			{
			if ( yy_accept[yy_current_state] )
				{
				(yy_last_accepting_state) = yy_current_state;
				(yy_last_accepting_cpos) = yy_cp;
				}

			++yy_cp;
			}

		yy_current_state = -yy_current_state;

yy_find_action:
		yy_act = yy_accept[yy_current_state];

		YY_DO_BEFORE_ACTION;

do_action:	/* This label is used only to access EOF actions. */

		switch ( yy_act )
	{ /* beginning of action switch */
			case 0: /* must back up */
			/* undo the effects of YY_DO_BEFORE_ACTION */
			*yy_cp = (yy_hold_char);
			yy_cp = (yy_last_accepting_cpos) + 1;
			yy_current_state = (yy_last_accepting_state);
			goto yy_find_action;

case 1:
YY_RULE_SETUP
#line 69 "lexerparser.ll"
{
	//Hexadecimal number
	//Will not fail because of regex
	//std::string text("Found Hexadecimal: ");
	//text += yytext;
	//driver.getModel()->getTraceManager()->trace(TraceManager::Level::L9_mostDetailed, text);
	return yy::genesyspp_parser::make_NUMH(obj_t(atof(yytext), std::string("Hexadecimal")),loc);
      }
	YY_BREAK
case 2:
YY_RULE_SETUP
#line 78 "lexerparser.ll"
{
       //Float number
       //Will not fail because of regex
       //std::string text("Found Float: ");
       //text += yytext;
       //driver.getModel()->getTraceManager()->trace(TraceManager::Level::L9_mostDetailed, text);
       return yy::genesyspp_parser::make_NUMD(obj_t(atof(yytext),std::string("Float")), loc);
     }
	YY_BREAK
case 3:
YY_RULE_SETUP
#line 87 "lexerparser.ll"
{
       //Decimal number
       //Will not fail because of regex
       //std::string text("Found Decimal: ");
       //text += yytext;
       //driver.getModel()->getTraceManager()->trace(TraceManager::Level::L9_mostDetailed, text);
       return yy::genesyspp_parser::make_NUMD(obj_t(atof(yytext),std::string("Decimal")), loc);
      }
	YY_BREAK
// special symbols
case 4:
YY_RULE_SETUP
#line 97 "lexerparser.ll"
{ return (yy::genesyspp_parser::make_oLE(obj_t(0, std::string(yytext)), loc));}
	YY_BREAK
case 5:
YY_RULE_SETUP
#line 98 "lexerparser.ll"
{ return (yy::genesyspp_parser::make_oGE(obj_t(0, std::string(yytext)), loc));}
	YY_BREAK
case 6:
YY_RULE_SETUP
#line 99 "lexerparser.ll"
{ return (yy::genesyspp_parser::make_oEQ(obj_t(0, std::string(yytext)), loc));}
	YY_BREAK
case 7:
YY_RULE_SETUP
#line 100 "lexerparser.ll"
{ return (yy::genesyspp_parser::make_oNE(obj_t(0, std::string(yytext)), loc));}
	YY_BREAK
case 8:
YY_RULE_SETUP
#line 101 "lexerparser.ll"
{return yy::genesyspp_parser::make_LESS(loc);}
	YY_BREAK
case 9:
YY_RULE_SETUP
#line 102 "lexerparser.ll"
{return yy::genesyspp_parser::make_GREATER(loc);}
	YY_BREAK
case 10:
YY_RULE_SETUP
#line 103 "lexerparser.ll"
{return yy::genesyspp_parser::make_LPAREN(loc);}
	YY_BREAK
case 11:
YY_RULE_SETUP
#line 104 "lexerparser.ll"
{return yy::genesyspp_parser::make_RPAREN(loc);}
	YY_BREAK
case 12:
YY_RULE_SETUP
#line 105 "lexerparser.ll"
{return yy::genesyspp_parser::make_PLUS(loc);}
	YY_BREAK
case 13:
YY_RULE_SETUP
#line 106 "lexerparser.ll"
{return yy::genesyspp_parser::make_MINUS(loc);}
	YY_BREAK
case 14:
YY_RULE_SETUP
#line 107 "lexerparser.ll"
{return yy::genesyspp_parser::make_STAR(loc);}
	YY_BREAK
case 15:
YY_RULE_SETUP
#line 108 "lexerparser.ll"
{return yy::genesyspp_parser::make_POWER(loc);}
	YY_BREAK
case 16:
YY_RULE_SETUP
#line 109 "lexerparser.ll"
{return yy::genesyspp_parser::make_SLASH(loc);}
	YY_BREAK
case 17:
YY_RULE_SETUP
#line 110 "lexerparser.ll"
{return yy::genesyspp_parser::make_ASSIGN(loc);}
	YY_BREAK
case 18:
YY_RULE_SETUP
#line 111 "lexerparser.ll"
{return yy::genesyspp_parser::make_COMMA(loc);}
	YY_BREAK
case 19:
YY_RULE_SETUP
#line 112 "lexerparser.ll"
{return yy::genesyspp_parser::make_LBRACKET(loc);}
	YY_BREAK
case 20:
YY_RULE_SETUP
#line 113 "lexerparser.ll"
{return yy::genesyspp_parser::make_RBRACKET(loc);}
	YY_BREAK
// boolean values
case 21:
YY_RULE_SETUP
#line 116 "lexerparser.ll"
{return yy::genesyspp_parser::make_NUMD(obj_t(1, std::string(yytext)), loc); /* @todo: should it be -1? */} 
	YY_BREAK
case 22:
YY_RULE_SETUP
#line 117 "lexerparser.ll"
{return yy::genesyspp_parser::make_NUMD(obj_t(0, std::string(yytext)), loc);}
	YY_BREAK
// algorithmic functions
case 23:
YY_RULE_SETUP
#line 120 "lexerparser.ll"
{return yy::genesyspp_parser::make_cIF(obj_t(0, std::string(yytext)), loc);}
	YY_BREAK
case 24:
YY_RULE_SETUP
#line 121 "lexerparser.ll"
{return yy::genesyspp_parser::make_cELSE(obj_t(0, std::string(yytext)), loc);}
	YY_BREAK
case 25:
YY_RULE_SETUP
#line 122 "lexerparser.ll"
{return yy::genesyspp_parser::make_cFOR(obj_t(0, std::string(yytext)), loc);}
	YY_BREAK
case 26:
YY_RULE_SETUP
#line 123 "lexerparser.ll"
{return yy::genesyspp_parser::make_cTO(obj_t(0, std::string(yytext)), loc);}
	YY_BREAK
case 27:
YY_RULE_SETUP
#line 124 "lexerparser.ll"
{return yy::genesyspp_parser::make_cDO(obj_t(0, std::string(yytext)), loc);}
	YY_BREAK
// logic funcions
case 28:
YY_RULE_SETUP
#line 127 "lexerparser.ll"
{return yy::genesyspp_parser::make_oAND(obj_t(0, std::string(yytext)), loc);}
	YY_BREAK
case 29:
YY_RULE_SETUP
#line 128 "lexerparser.ll"
{return yy::genesyspp_parser::make_oOR(obj_t(0, std::string(yytext)), loc);}
	YY_BREAK
case 30:
YY_RULE_SETUP
#line 129 "lexerparser.ll"
{return yy::genesyspp_parser::make_oNAND(obj_t(0, std::string(yytext)), loc);}
	YY_BREAK
case 31:
YY_RULE_SETUP
#line 130 "lexerparser.ll"
{return yy::genesyspp_parser::make_oXOR(obj_t(0, std::string(yytext)), loc);}
	YY_BREAK
case 32:
YY_RULE_SETUP
#line 131 "lexerparser.ll"
{return yy::genesyspp_parser::make_oNOT(obj_t(0, std::string(yytext)), loc);}
	YY_BREAK
// trigonometric functions
case 33:
YY_RULE_SETUP
#line 134 "lexerparser.ll"
{return yy::genesyspp_parser::make_fSIN(obj_t(0, std::string(yytext)), loc);}
	YY_BREAK
case 34:
YY_RULE_SETUP
#line 135 "lexerparser.ll"
{return yy::genesyspp_parser::make_fCOS(obj_t(0, std::string(yytext)), loc);}
	YY_BREAK
// math funcions
case 35:
YY_RULE_SETUP
#line 138 "lexerparser.ll"
{return yy::genesyspp_parser::make_fROUND(obj_t(0, std::string(yytext)), loc);}
	YY_BREAK
case 36:
YY_RULE_SETUP
#line 139 "lexerparser.ll"
{return yy::genesyspp_parser::make_fMOD(obj_t(0, std::string(yytext)), loc);}
	YY_BREAK
case 37:
YY_RULE_SETUP
#line 140 "lexerparser.ll"
{return yy::genesyspp_parser::make_fTRUNC(obj_t(0, std::string(yytext)), loc);}
	YY_BREAK
case 38:
YY_RULE_SETUP
#line 141 "lexerparser.ll"
{return yy::genesyspp_parser::make_fFRAC(obj_t(0, std::string(yytext)), loc);}
	YY_BREAK
case 39:
YY_RULE_SETUP
#line 142 "lexerparser.ll"
{return yy::genesyspp_parser::make_fEXP(obj_t(0, std::string(yytext)), loc);}
	YY_BREAK
case 40:
YY_RULE_SETUP
#line 143 "lexerparser.ll"
{return yy::genesyspp_parser::make_fSQRT(obj_t(0, std::string(yytext)), loc);}
	YY_BREAK
case 41:
YY_RULE_SETUP
#line 144 "lexerparser.ll"
{return yy::genesyspp_parser::make_fLOG(obj_t(0, std::string(yytext)), loc);}
	YY_BREAK
case 42:
YY_RULE_SETUP
#line 145 "lexerparser.ll"
{return yy::genesyspp_parser::make_fLN(obj_t(0, std::string(yytext)), loc);}
	YY_BREAK
case 43:
YY_RULE_SETUP
#line 146 "lexerparser.ll"
{return yy::genesyspp_parser::make_mathMAX(obj_t(0, std::string(yytext)), loc);}
	YY_BREAK
case 44:
YY_RULE_SETUP
#line 147 "lexerparser.ll"
{return yy::genesyspp_parser::make_mathMIN(obj_t(0, std::string(yytext)), loc);}
	YY_BREAK
// string functions
case 45:
YY_RULE_SETUP
#line 150 "lexerparser.ll"
{return yy::genesyspp_parser::make_fVAL(obj_t(0, std::string(yytext)), loc);}
	YY_BREAK
case 46:
YY_RULE_SETUP
#line 151 "lexerparser.ll"
{return yy::genesyspp_parser::make_fEVAL(obj_t(0, std::string(yytext)), loc);}
	YY_BREAK
case 47:
YY_RULE_SETUP
#line 152 "lexerparser.ll"
{return yy::genesyspp_parser::make_fLENG(obj_t(0, std::string(yytext)), loc);}
	YY_BREAK
// probability distributions
case 48:
YY_RULE_SETUP
#line 155 "lexerparser.ll"
{return yy::genesyspp_parser::make_fRND1(obj_t(0, std::string(yytext)), loc);}
	YY_BREAK
case 49:
YY_RULE_SETUP
#line 156 "lexerparser.ll"
{return yy::genesyspp_parser::make_fEXPO(obj_t(0, std::string(yytext)), loc);}
	YY_BREAK
case 50:
YY_RULE_SETUP
#line 157 "lexerparser.ll"
{return yy::genesyspp_parser::make_fNORM(obj_t(0, std::string(yytext)), loc); /*!< norm(average,stddev): Generates a normal distribution random value */}
	YY_BREAK
case 51:
YY_RULE_SETUP
#line 158 "lexerparser.ll"
{return yy::genesyspp_parser::make_fUNIF(obj_t(0, std::string(yytext)), loc);}
	YY_BREAK
case 52:
YY_RULE_SETUP
#line 159 "lexerparser.ll"
{return yy::genesyspp_parser::make_fWEIB(obj_t(0, std::string(yytext)), loc);}
	YY_BREAK
case 53:
YY_RULE_SETUP
#line 160 "lexerparser.ll"
{return yy::genesyspp_parser::make_fLOGN(obj_t(0, std::string(yytext)), loc);}
	YY_BREAK
case 54:
YY_RULE_SETUP
#line 161 "lexerparser.ll"
{return yy::genesyspp_parser::make_fGAMM(obj_t(0, std::string(yytext)), loc);}
	YY_BREAK
case 55:
YY_RULE_SETUP
#line 162 "lexerparser.ll"
{return yy::genesyspp_parser::make_fERLA(obj_t(0, std::string(yytext)), loc);}
	YY_BREAK
case 56:
YY_RULE_SETUP
#line 163 "lexerparser.ll"
{return yy::genesyspp_parser::make_fTRIA(obj_t(0, std::string(yytext)), loc);}
	YY_BREAK
case 57:
YY_RULE_SETUP
#line 164 "lexerparser.ll"
{return yy::genesyspp_parser::make_fBETA(obj_t(0, std::string(yytext)), loc);}
	YY_BREAK
case 58:
YY_RULE_SETUP
#line 165 "lexerparser.ll"
{return yy::genesyspp_parser::make_fDISC(obj_t(0, std::string(yytext)), loc);}
	YY_BREAK
// simulation infos
case 59:
YY_RULE_SETUP
#line 168 "lexerparser.ll"
{return yy::genesyspp_parser::make_fTNOW(obj_t(0, std::string(yytext)), loc);}
	YY_BREAK
case 60:
YY_RULE_SETUP
#line 169 "lexerparser.ll"
{return yy::genesyspp_parser::make_fTFIN(obj_t(0, std::string(yytext)), loc);}
	YY_BREAK
case 61:
YY_RULE_SETUP
#line 170 "lexerparser.ll"
{return yy::genesyspp_parser::make_fMAXREP(obj_t(0, std::string(yytext)), loc);}
	YY_BREAK
case 62:
YY_RULE_SETUP
#line 171 "lexerparser.ll"
{return yy::genesyspp_parser::make_fNUMREP(obj_t(0, std::string(yytext)), loc);}
	YY_BREAK
case 63:
YY_RULE_SETUP
#line 172 "lexerparser.ll"
{return yy::genesyspp_parser::make_fIDENT(obj_t(0, std::string(yytext)), loc);}
	YY_BREAK
case 64:
YY_RULE_SETUP
#line 173 "lexerparser.ll"
{return yy::genesyspp_parser::make_simulEntitiesWIP(obj_t(0, std::string(yytext)), loc);}
	YY_BREAK
// Kernel elements, Counters and Statistic Collectors
case 65:
YY_RULE_SETUP
#line 176 "lexerparser.ll"
{return yy::genesyspp_parser::make_fTAVG(obj_t(0, std::string(yytext)), loc);}
	YY_BREAK
case 66:
YY_RULE_SETUP
#line 177 "lexerparser.ll"
{return yy::genesyspp_parser::make_fCOUNT(obj_t(0, std::string(yytext)), loc);}
	YY_BREAK
/****begin_Lexical_plugins****/
/**begin_Lexical:Resource**/
case 67:
YY_RULE_SETUP
#line 183 "lexerparser.ll"
{return yy::genesyspp_parser::make_fNR(obj_t(0, std::string(yytext)), loc);}
	YY_BREAK
case 68:
YY_RULE_SETUP
#line 184 "lexerparser.ll"
{return yy::genesyspp_parser::make_fMR(obj_t(0, std::string(yytext)), loc);}
	YY_BREAK
case 69:
YY_RULE_SETUP
#line 185 "lexerparser.ll"
{return yy::genesyspp_parser::make_fIRF(obj_t(0, std::string(yytext)), loc);}
	YY_BREAK
case 70:
YY_RULE_SETUP
#line 186 "lexerparser.ll"
{return yy::genesyspp_parser::make_fSTATE(obj_t(0, std::string(yytext)), loc);}
	YY_BREAK
case 71:
YY_RULE_SETUP
#line 187 "lexerparser.ll"
{return yy::genesyspp_parser::make_fSETSUM(obj_t(0, std::string(yytext)), loc);}
	YY_BREAK
case 72:
YY_RULE_SETUP
#line 188 "lexerparser.ll"
{return yy::genesyspp_parser::make_fRESUTIL(obj_t(0, std::string(yytext)), loc);}
	YY_BREAK
case 73:
YY_RULE_SETUP
#line 189 "lexerparser.ll"
{return yy::genesyspp_parser::make_fRESSEIZES(obj_t(0, std::string(yytext)), loc);}
	YY_BREAK
case 74:
YY_RULE_SETUP
#line 190 "lexerparser.ll"
{return yy::genesyspp_parser::make_NUMD(obj_t(-1, std::string(yytext)), loc);}
	YY_BREAK
case 75:
YY_RULE_SETUP
#line 191 "lexerparser.ll"
{return yy::genesyspp_parser::make_NUMD(obj_t(-2, std::string(yytext)), loc);}
	YY_BREAK
case 76:
YY_RULE_SETUP
#line 192 "lexerparser.ll"
{return yy::genesyspp_parser::make_NUMD(obj_t(-3, std::string(yytext)), loc);}
	YY_BREAK
case 77:
YY_RULE_SETUP
#line 193 "lexerparser.ll"
{return yy::genesyspp_parser::make_NUMD(obj_t(-4, std::string(yytext)), loc);}
	YY_BREAK
/**end_Lexical:Resource**/
/**begin_Lexical:Queue**/
case 78:
YY_RULE_SETUP
#line 197 "lexerparser.ll"
{return yy::genesyspp_parser::make_fNQ(obj_t(0, std::string(yytext)), loc);}
	YY_BREAK
case 79:
YY_RULE_SETUP
#line 198 "lexerparser.ll"
{return yy::genesyspp_parser::make_fLASTINQ(obj_t(0, std::string(yytext)), loc);}
	YY_BREAK
case 80:
YY_RULE_SETUP
#line 199 "lexerparser.ll"
{return yy::genesyspp_parser::make_fFIRSTINQ(obj_t(0, std::string(yytext)), loc);}
	YY_BREAK
case 81:
YY_RULE_SETUP
#line 200 "lexerparser.ll"
{return yy::genesyspp_parser::make_fSAQUE(obj_t(0, std::string(yytext)), loc);}
	YY_BREAK
case 82:
YY_RULE_SETUP
#line 201 "lexerparser.ll"
{return yy::genesyspp_parser::make_fAQUE(obj_t(0, std::string(yytext)), loc);}
	YY_BREAK
case 83:
YY_RULE_SETUP
#line 202 "lexerparser.ll"
{return yy::genesyspp_parser::make_fENTATRANK(obj_t(0, std::string(yytext)), loc);}
	YY_BREAK
/**end_Lexical:Queue**/
/**begin_Lexical:Set**/
case 84:
YY_RULE_SETUP
#line 206 "lexerparser.ll"
{return yy::genesyspp_parser::make_fNUMSET(obj_t(0, std::string(yytext)), loc);}
	YY_BREAK
/**end_Lexical:Set**/
/**begin_Lexical:EntityGroup**/
case 85:
YY_RULE_SETUP
#line 210 "lexerparser.ll"
{return yy::genesyspp_parser::make_fNUMGR(obj_t(0, std::string(yytext)), loc);}
	YY_BREAK
case 86:
YY_RULE_SETUP
#line 211 "lexerparser.ll"
{return yy::genesyspp_parser::make_fATRGR(obj_t(0, std::string(yytext)), loc);}
	YY_BREAK
/**end_Lexical:EntityGroup**/
/****end_Lexical_plugins****/
case 87:
/* rule 87 can match eol */
YY_RULE_SETUP
#line 217 "lexerparser.ll"
;
	YY_BREAK
case 88:
YY_RULE_SETUP
#line 218 "lexerparser.ll"

	YY_BREAK
case 89:
YY_RULE_SETUP
#line 220 "lexerparser.ll"
{
        ModelDataDefinition* datadef; 

		//std::cout << "Verificando o que é o Literal \""+std::string(yytext)+"\"\n";
		//std::cout << driver.getModel()->getInfos()->getName() << std::endl;
        // check if it is an ATTRIBUTE (and return the attribute ID (and not the value!)
		datadef = driver.getModel()->getDataManager()->getDataDefinition(Util::TypeOf<Attribute>(), std::string(yytext));
        if (datadef != nullptr) {
			//std::cout << "Found ATTRIBUTE " << std::string(yytext) << std::endl;
			driver.addRefered({Util::TypeOf<Attribute>(),std::string(yytext)});
            return yy::genesyspp_parser::make_ATRIB(obj_t(0, Util::TypeOf<Attribute>(), datadef->getId()),loc);
        }


        //check CSTAT
        datadef = driver.getModel()->getDataManager()->getDataDefinition(Util::TypeOf<StatisticsCollector>(), std::string(yytext));
        if (datadef != nullptr) { 
			//std::cout << "Found CSTAT" << std::string(yytext) << std::endl;
			driver.addRefered({Util::TypeOf<StatisticsCollector>(),std::string(yytext)});
            return yy::genesyspp_parser::make_CSTAT(obj_t(0, Util::TypeOf<StatisticsCollector>(), datadef->getId()),loc);
        }

        //check COUNTER
        datadef = driver.getModel()->getDataManager()->getDataDefinition(Util::TypeOf<Counter>(), std::string(yytext));
        if (datadef != nullptr) { 
			//std::cout << "Found COUNTER" << std::string(yytext) << std::endl;
			driver.addRefered({Util::TypeOf<Counter>(),std::string(yytext)});
			return yy::genesyspp_parser::make_COUNTER(obj_t(0, Util::TypeOf<Counter>(), datadef->getId()),loc);
        }

/****begin_LexicalLiterals_plugins****/

/**begin_LexicalLiterals:Variable**/
        // check VARIABLE
        datadef = driver.getModel()->getDataManager()->getDataDefinition(Util::TypeOf<Variable>(), std::string(yytext));
        if (datadef != nullptr) { // it is a variable
            Variable* var = static_cast<Variable*>(datadef);
            //double variableID = var->getId();// ->getValue(); // var->getId()
			//std::cout << "Found VARIABLE " << var->getName() <<" ID " << var->getId() << std::endl;
			driver.addRefered({Util::TypeOf<Variable>(),std::string(yytext)});
			return yy::genesyspp_parser::make_VARI(obj_t(0, Util::TypeOf<Variable>(), var->getId()),loc);
        }
/**end_LexicalLiterals:Variable**/

/**begin_LexicalLiterals:Formula**/
        // check FORMULA
        datadef = driver.getModel()->getDataManager()->getDataDefinition(Util::TypeOf<Formula>(), std::string(yytext));
        if (datadef != nullptr) { // it is a FORMULA
            Formula* form = static_cast<Formula*>(datadef);
            // return only formula ID. NEVER should call getValue in LL
			//std::cout << "Found FORMULA " << form->getName() <<" ID " << form->getId() << std::endl;
			driver.addRefered({Util::TypeOf<Formula>(),std::string(yytext)});
			return yy::genesyspp_parser::make_FORM(obj_t(0, Util::TypeOf<Formula>(), form->getId()),loc);
        }
/**end_LexicalLiterals:Formula**/

/**begin_LexicalLiterals:Queue**/
        // check QUEUE
		//List<ModelDataDefinition*>* queues =  driver.getModel()->getDataManager()->getDataDefinitionList(Util::TypeOf<Queue>());
		//std::cout << "Há " << queues->size() << " filas" << std::endl;
		//for (ModelDataDefinition* dd: *queues->list()) {
		//	std::cout << " queue: " << dd->getName() << std::endl;
		//}
        datadef = driver.getModel()->getDataManager()->getDataDefinition(Util::TypeOf<Queue>(), std::string(yytext));
        if (datadef != nullptr) { 
			//std::cout << "Found QUEUE " << datadef->getName() <<" ID " << datadef->getId() << std::endl;
			driver.addRefered({Util::TypeOf<Queue>(),std::string(yytext)});
			return yy::genesyspp_parser::make_QUEUE(obj_t(0, Util::TypeOf<Queue>(), datadef->getId()),loc);
        }
/**end_LexicalLiterals:Queue**/

/**begin_LexicalLiterals:Resource**/
        // check RESOURCE
        datadef = driver.getModel()->getDataManager()->getDataDefinition(Util::TypeOf<Resource>(), std::string(yytext));
        if (datadef != nullptr) { 
			//std::cout << "Found RESOURCE " << datadef->getName() <<" ID " << datadef->getId() << std::endl;
			driver.addRefered({Util::TypeOf<Resource>(),std::string(yytext)});
			return yy::genesyspp_parser::make_RESOURCE(obj_t(0, Util::TypeOf<Resource>(), datadef->getId()),loc);
        }
/**end_LexicalLiterals:Resource**/

/**begin_LexicalLiterals:Set**/
        //check SET
        datadef = driver.getModel()->getDataManager()->getDataDefinition(Util::TypeOf<Set>(), std::string(yytext));
        if (datadef != nullptr) { 
			//std::cout << "Found SET " << datadef->getName() <<" ID " << datadef->getId() << std::endl;
			driver.addRefered({Util::TypeOf<Set>(),std::string(yytext)});
			return yy::genesyspp_parser::make_SET(obj_t(0, Util::TypeOf<Set>(), datadef->getId()),loc);
        }
/**end_LexicalLiterals:Set**/

/****end_LexicalLiterals_plugins****/

	// If no one before has identified this literal, then it is an ILLEGAL (not found, unknown) literal 
        //Case not found retturns a illegal token
		//datadef = driver.getModel()->getDataManager()->getDataDefinition(Util::TypeOf<Set>(), std::string(yytext));
		//std::cout << "NOT FOUND " << std::string(yytext) << std::endl;
        return yy::genesyspp_parser::make_ILLEGAL(obj_t(0, std::string("Illegal")), loc);
      }
	YY_BREAK
case 90:
YY_RULE_SETUP
#line 320 "lexerparser.ll"
{return yy::genesyspp_parser::make_ILLEGAL(obj_t(1, std::string("Illegal")), loc);}
	YY_BREAK
case YY_STATE_EOF(INITIAL):
#line 322 "lexerparser.ll"
{return yy::genesyspp_parser::make_END(loc);}
	YY_BREAK
case 91:
YY_RULE_SETUP
#line 325 "lexerparser.ll"
ECHO;
	YY_BREAK
#line 6046 "../Genesys++-scanner.cpp"

	case YY_END_OF_BUFFER:
		{
		/* Amount of text matched not including the EOB char. */
		int yy_amount_of_matched_text = (int) (yy_cp - (yytext_ptr)) - 1;

		/* Undo the effects of YY_DO_BEFORE_ACTION. */
		*yy_cp = (yy_hold_char);
		YY_RESTORE_YY_MORE_OFFSET

		if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_NEW )
			{
			/* We're scanning a new file or input source.  It's
			 * possible that this happened because the user
			 * just pointed yyin at a new source and called
			 * yylex().  If so, then we have to assure
			 * consistency between YY_CURRENT_BUFFER and our
			 * globals.  Here is the right place to do so, because
			 * this is the first action (other than possibly a
			 * back-up) that will match for the new input source.
			 */
			(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
			YY_CURRENT_BUFFER_LVALUE->yy_input_file = yyin;
			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status = YY_BUFFER_NORMAL;
			}

		/* Note that here we test for yy_c_buf_p "<=" to the position
		 * of the first EOB in the buffer, since yy_c_buf_p will
		 * already have been incremented past the NUL character
		 * (since all states make transitions on EOB to the
		 * end-of-buffer state).  Contrast this with the test
		 * in input().
		 */
		if ( (yy_c_buf_p) <= &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
			{ /* This was really a NUL. */
			yy_state_type yy_next_state;

			(yy_c_buf_p) = (yytext_ptr) + yy_amount_of_matched_text;

			yy_current_state = yy_get_previous_state(  );

			/* Okay, we're now positioned to make the NUL
			 * transition.  We couldn't have
			 * yy_get_previous_state() go ahead and do it
			 * for us because it doesn't know how to deal
			 * with the possibility of jamming (and we don't
			 * want to build jamming into it because then it
			 * will run more slowly).
			 */

			yy_next_state = yy_try_NUL_trans( yy_current_state );

			yy_bp = (yytext_ptr) + YY_MORE_ADJ;

			if ( yy_next_state )
				{
				/* Consume the NUL. */
				yy_cp = ++(yy_c_buf_p);
				yy_current_state = yy_next_state;
				goto yy_match;
				}

			else
				{
				yy_cp = (yy_c_buf_p);
				goto yy_find_action;
				}
			}

		else switch ( yy_get_next_buffer(  ) )
			{
			case EOB_ACT_END_OF_FILE:
				{
				(yy_did_buffer_switch_on_eof) = 0;

				if ( yywrap(  ) )
					{
					/* Note: because we've taken care in
					 * yy_get_next_buffer() to have set up
					 * yytext, we can now set up
					 * yy_c_buf_p so that if some total
					 * hoser (like flex itself) wants to
					 * call the scanner after we return the
					 * YY_NULL, it'll still work - another
					 * YY_NULL will get returned.
					 */
					(yy_c_buf_p) = (yytext_ptr) + YY_MORE_ADJ;

					yy_act = YY_STATE_EOF(YY_START);
					goto do_action;
					}

				else
					{
					if ( ! (yy_did_buffer_switch_on_eof) )
						YY_NEW_FILE;
					}
				break;
				}

			case EOB_ACT_CONTINUE_SCAN:
				(yy_c_buf_p) =
					(yytext_ptr) + yy_amount_of_matched_text;

				yy_current_state = yy_get_previous_state(  );

				yy_cp = (yy_c_buf_p);
				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
				goto yy_match;

			case EOB_ACT_LAST_MATCH:
				(yy_c_buf_p) =
				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)];

				yy_current_state = yy_get_previous_state(  );

				yy_cp = (yy_c_buf_p);
				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
				goto yy_find_action;
			}
		break;
		}

	default:
		YY_FATAL_ERROR(
			"fatal flex scanner internal error--no action found" );
	} /* end of action switch */
		} /* end of scanning one token */
	} /* end of user's declarations */
} /* end of yylex */

/* yy_get_next_buffer - try to read in a new buffer
 *
 * Returns a code representing an action:
 *	EOB_ACT_LAST_MATCH -
 *	EOB_ACT_CONTINUE_SCAN - continue scanning from current position
 *	EOB_ACT_END_OF_FILE - end of file
 */
static int yy_get_next_buffer (void)
{
    	char *dest = YY_CURRENT_BUFFER_LVALUE->yy_ch_buf;
	char *source = (yytext_ptr);
	int number_to_move, i;
	int ret_val;

	if ( (yy_c_buf_p) > &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] )
		YY_FATAL_ERROR(
		"fatal flex scanner internal error--end of buffer missed" );

	if ( YY_CURRENT_BUFFER_LVALUE->yy_fill_buffer == 0 )
		{ /* Don't try to fill the buffer, so this is an EOF. */
		if ( (yy_c_buf_p) - (yytext_ptr) - YY_MORE_ADJ == 1 )
			{
			/* We matched a single character, the EOB, so
			 * treat this as a final EOF.
			 */
			return EOB_ACT_END_OF_FILE;
			}

		else
			{
			/* We matched some text prior to the EOB, first
			 * process it.
			 */
			return EOB_ACT_LAST_MATCH;
			}
		}

	/* Try to read more data. */

	/* First move last chars to start of buffer. */
	number_to_move = (int) ((yy_c_buf_p) - (yytext_ptr) - 1);

	for ( i = 0; i < number_to_move; ++i )
		*(dest++) = *(source++);

	if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_EOF_PENDING )
		/* don't do the read, it's not guaranteed to return an EOF,
		 * just force an EOF
		 */
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars) = 0;

	else
		{
			int num_to_read =
			YY_CURRENT_BUFFER_LVALUE->yy_buf_size - number_to_move - 1;

		while ( num_to_read <= 0 )
			{ /* Not enough room in the buffer - grow it. */

			/* just a shorter name for the current buffer */
			YY_BUFFER_STATE b = YY_CURRENT_BUFFER_LVALUE;

			int yy_c_buf_p_offset =
				(int) ((yy_c_buf_p) - b->yy_ch_buf);

			if ( b->yy_is_our_buffer )
				{
				int new_size = b->yy_buf_size * 2;

				if ( new_size <= 0 )
					b->yy_buf_size += b->yy_buf_size / 8;
				else
					b->yy_buf_size *= 2;

				b->yy_ch_buf = (char *)
					/* Include room in for 2 EOB chars. */
					yyrealloc( (void *) b->yy_ch_buf,
							 (yy_size_t) (b->yy_buf_size + 2)  );
				}
			else
				/* Can't grow it, we don't own it. */
				b->yy_ch_buf = NULL;

			if ( ! b->yy_ch_buf )
				YY_FATAL_ERROR(
				"fatal error - scanner input buffer overflow" );

			(yy_c_buf_p) = &b->yy_ch_buf[yy_c_buf_p_offset];

			num_to_read = YY_CURRENT_BUFFER_LVALUE->yy_buf_size -
						number_to_move - 1;

			}

		if ( num_to_read > YY_READ_BUF_SIZE )
			num_to_read = YY_READ_BUF_SIZE;

		/* Read in more data. */
		YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
			(yy_n_chars), num_to_read );

		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
		}

	if ( (yy_n_chars) == 0 )
		{
		if ( number_to_move == YY_MORE_ADJ )
			{
			ret_val = EOB_ACT_END_OF_FILE;
			yyrestart( yyin  );
			}

		else
			{
			ret_val = EOB_ACT_LAST_MATCH;
			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status =
				YY_BUFFER_EOF_PENDING;
			}
		}

	else
		ret_val = EOB_ACT_CONTINUE_SCAN;

	if (((yy_n_chars) + number_to_move) > YY_CURRENT_BUFFER_LVALUE->yy_buf_size) {
		/* Extend the array by 50%, plus the number we really need. */
		int new_size = (yy_n_chars) + number_to_move + ((yy_n_chars) >> 1);
		YY_CURRENT_BUFFER_LVALUE->yy_ch_buf = (char *) yyrealloc(
			(void *) YY_CURRENT_BUFFER_LVALUE->yy_ch_buf, (yy_size_t) new_size  );
		if ( ! YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
			YY_FATAL_ERROR( "out of dynamic memory in yy_get_next_buffer()" );
		/* "- 2" to take care of EOB's */
		YY_CURRENT_BUFFER_LVALUE->yy_buf_size = (int) (new_size - 2);
	}

	(yy_n_chars) += number_to_move;
	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] = YY_END_OF_BUFFER_CHAR;
	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] = YY_END_OF_BUFFER_CHAR;

	(yytext_ptr) = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[0];

	return ret_val;
}

/* yy_get_previous_state - get the state just before the EOB char was reached */

    static yy_state_type yy_get_previous_state (void)
{
	yy_state_type yy_current_state;
	char *yy_cp;
    
	yy_current_state = (yy_start);

	for ( yy_cp = (yytext_ptr) + YY_MORE_ADJ; yy_cp < (yy_c_buf_p); ++yy_cp )
		{
		if ( *yy_cp )
			{
			yy_current_state = yy_nxt[yy_current_state][YY_SC_TO_UI(*yy_cp)];
			}
		else
			yy_current_state = yy_NUL_trans[yy_current_state];
		if ( yy_accept[yy_current_state] )
			{
			(yy_last_accepting_state) = yy_current_state;
			(yy_last_accepting_cpos) = yy_cp;
			}
		}

	return yy_current_state;
}

/* yy_try_NUL_trans - try to make a transition on the NUL character
 *
 * synopsis
 *	next_state = yy_try_NUL_trans( current_state );
 */
    static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state )
{
	int yy_is_jam;
    	char *yy_cp = (yy_c_buf_p);

	yy_current_state = yy_NUL_trans[yy_current_state];
	yy_is_jam = (yy_current_state == 0);

	if ( ! yy_is_jam )
		{
		if ( yy_accept[yy_current_state] )
			{
			(yy_last_accepting_state) = yy_current_state;
			(yy_last_accepting_cpos) = yy_cp;
			}
		}

		return yy_is_jam ? 0 : yy_current_state;
}

#ifndef YY_NO_UNPUT

#endif

#ifndef YY_NO_INPUT
#ifdef __cplusplus
    static int yyinput (void)
#else
    static int input  (void)
#endif

{
	int c;
    
	*(yy_c_buf_p) = (yy_hold_char);

	if ( *(yy_c_buf_p) == YY_END_OF_BUFFER_CHAR )
		{
		/* yy_c_buf_p now points to the character we want to return.
		 * If this occurs *before* the EOB characters, then it's a
		 * valid NUL; if not, then we've hit the end of the buffer.
		 */
		if ( (yy_c_buf_p) < &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
			/* This was really a NUL. */
			*(yy_c_buf_p) = '\0';

		else
			{ /* need more input */
			int offset = (int) ((yy_c_buf_p) - (yytext_ptr));
			++(yy_c_buf_p);

			switch ( yy_get_next_buffer(  ) )
				{
				case EOB_ACT_LAST_MATCH:
					/* This happens because yy_g_n_b()
					 * sees that we've accumulated a
					 * token and flags that we need to
					 * try matching the token before
					 * proceeding.  But for input(),
					 * there's no matching to consider.
					 * So convert the EOB_ACT_LAST_MATCH
					 * to EOB_ACT_END_OF_FILE.
					 */

					/* Reset buffer status. */
					yyrestart( yyin );

					/*FALLTHROUGH*/

				case EOB_ACT_END_OF_FILE:
					{
					if ( yywrap(  ) )
						return 0;

					if ( ! (yy_did_buffer_switch_on_eof) )
						YY_NEW_FILE;
#ifdef __cplusplus
					return yyinput();
#else
					return input();
#endif
					}

				case EOB_ACT_CONTINUE_SCAN:
					(yy_c_buf_p) = (yytext_ptr) + offset;
					break;
				}
			}
		}

	c = *(unsigned char *) (yy_c_buf_p);	/* cast for 8-bit char's */
	*(yy_c_buf_p) = '\0';	/* preserve yytext */
	(yy_hold_char) = *++(yy_c_buf_p);

	return c;
}
#endif	/* ifndef YY_NO_INPUT */

/** Immediately switch to a different input stream.
 * @param input_file A readable stream.
 * 
 * @note This function does not reset the start condition to @c INITIAL .
 */
    void yyrestart  (FILE * input_file )
{
    
	if ( ! YY_CURRENT_BUFFER ){
        yyensure_buffer_stack ();
		YY_CURRENT_BUFFER_LVALUE =
            yy_create_buffer( yyin, YY_BUF_SIZE );
	}

	yy_init_buffer( YY_CURRENT_BUFFER, input_file );
	yy_load_buffer_state(  );
}

/** Switch to a different input buffer.
 * @param new_buffer The new input buffer.
 * 
 */
    void yy_switch_to_buffer  (YY_BUFFER_STATE  new_buffer )
{
    
	/* TODO. We should be able to replace this entire function body
	 * with
	 *		yypop_buffer_state();
	 *		yypush_buffer_state(new_buffer);
     */
	yyensure_buffer_stack ();
	if ( YY_CURRENT_BUFFER == new_buffer )
		return;

	if ( YY_CURRENT_BUFFER )
		{
		/* Flush out information for old buffer. */
		*(yy_c_buf_p) = (yy_hold_char);
		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
		}

	YY_CURRENT_BUFFER_LVALUE = new_buffer;
	yy_load_buffer_state(  );

	/* We don't actually know whether we did this switch during
	 * EOF (yywrap()) processing, but the only time this flag
	 * is looked at is after yywrap() is called, so it's safe
	 * to go ahead and always set it.
	 */
	(yy_did_buffer_switch_on_eof) = 1;
}

static void yy_load_buffer_state  (void)
{
    	(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
	(yytext_ptr) = (yy_c_buf_p) = YY_CURRENT_BUFFER_LVALUE->yy_buf_pos;
	yyin = YY_CURRENT_BUFFER_LVALUE->yy_input_file;
	(yy_hold_char) = *(yy_c_buf_p);
}

/** Allocate and initialize an input buffer state.
 * @param file A readable stream.
 * @param size The character buffer size in bytes. When in doubt, use @c YY_BUF_SIZE.
 * 
 * @return the allocated buffer state.
 */
    YY_BUFFER_STATE yy_create_buffer  (FILE * file, int  size )
{
	YY_BUFFER_STATE b;
    
	b = (YY_BUFFER_STATE) yyalloc( sizeof( struct yy_buffer_state )  );
	if ( ! b )
		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );

	b->yy_buf_size = size;

	/* yy_ch_buf has to be 2 characters longer than the size given because
	 * we need to put in 2 end-of-buffer characters.
	 */
	b->yy_ch_buf = (char *) yyalloc( (yy_size_t) (b->yy_buf_size + 2)  );
	if ( ! b->yy_ch_buf )
		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );

	b->yy_is_our_buffer = 1;

	yy_init_buffer( b, file );

	return b;
}

/** Destroy the buffer.
 * @param b a buffer created with yy_create_buffer()
 * 
 */
    void yy_delete_buffer (YY_BUFFER_STATE  b )
{
    
	if ( ! b )
		return;

	if ( b == YY_CURRENT_BUFFER ) /* Not sure if we should pop here. */
		YY_CURRENT_BUFFER_LVALUE = (YY_BUFFER_STATE) 0;

	if ( b->yy_is_our_buffer )
		yyfree( (void *) b->yy_ch_buf  );

	yyfree( (void *) b  );
}

/* Initializes or reinitializes a buffer.
 * This function is sometimes called more than once on the same buffer,
 * such as during a yyrestart() or at EOF.
 */
    static void yy_init_buffer  (YY_BUFFER_STATE  b, FILE * file )

{
	int oerrno = errno;
    
	yy_flush_buffer( b );

	b->yy_input_file = file;
	b->yy_fill_buffer = 1;

    /* If b is the current buffer, then yy_init_buffer was _probably_
     * called from yyrestart() or through yy_get_next_buffer.
     * In that case, we don't want to reset the lineno or column.
     */
    if (b != YY_CURRENT_BUFFER){
        b->yy_bs_lineno = 1;
        b->yy_bs_column = 0;
    }

        b->yy_is_interactive = file ? (isatty( fileno(file) ) > 0) : 0;
    
	errno = oerrno;
}

/** Discard all buffered characters. On the next scan, YY_INPUT will be called.
 * @param b the buffer state to be flushed, usually @c YY_CURRENT_BUFFER.
 * 
 */
    void yy_flush_buffer (YY_BUFFER_STATE  b )
{
    	if ( ! b )
		return;

	b->yy_n_chars = 0;

	/* We always need two end-of-buffer characters.  The first causes
	 * a transition to the end-of-buffer state.  The second causes
	 * a jam in that state.
	 */
	b->yy_ch_buf[0] = YY_END_OF_BUFFER_CHAR;
	b->yy_ch_buf[1] = YY_END_OF_BUFFER_CHAR;

	b->yy_buf_pos = &b->yy_ch_buf[0];

	b->yy_at_bol = 1;
	b->yy_buffer_status = YY_BUFFER_NEW;

	if ( b == YY_CURRENT_BUFFER )
		yy_load_buffer_state(  );
}

/** Pushes the new state onto the stack. The new state becomes
 *  the current state. This function will allocate the stack
 *  if necessary.
 *  @param new_buffer The new state.
 *  
 */
void yypush_buffer_state (YY_BUFFER_STATE new_buffer )
{
    	if (new_buffer == NULL)
		return;

	yyensure_buffer_stack();

	/* This block is copied from yy_switch_to_buffer. */
	if ( YY_CURRENT_BUFFER )
		{
		/* Flush out information for old buffer. */
		*(yy_c_buf_p) = (yy_hold_char);
		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
		}

	/* Only push if top exists. Otherwise, replace top. */
	if (YY_CURRENT_BUFFER)
		(yy_buffer_stack_top)++;
	YY_CURRENT_BUFFER_LVALUE = new_buffer;

	/* copied from yy_switch_to_buffer. */
	yy_load_buffer_state(  );
	(yy_did_buffer_switch_on_eof) = 1;
}

/** Removes and deletes the top of the stack, if present.
 *  The next element becomes the new top.
 *  
 */
void yypop_buffer_state (void)
{
    	if (!YY_CURRENT_BUFFER)
		return;

	yy_delete_buffer(YY_CURRENT_BUFFER );
	YY_CURRENT_BUFFER_LVALUE = NULL;
	if ((yy_buffer_stack_top) > 0)
		--(yy_buffer_stack_top);

	if (YY_CURRENT_BUFFER) {
		yy_load_buffer_state(  );
		(yy_did_buffer_switch_on_eof) = 1;
	}
}

/* Allocates the stack if it does not exist.
 *  Guarantees space for at least one push.
 */
static void yyensure_buffer_stack (void)
{
	yy_size_t num_to_alloc;
    
	if (!(yy_buffer_stack)) {

		/* First allocation is just for 2 elements, since we don't know if this
		 * scanner will even need a stack. We use 2 instead of 1 to avoid an
		 * immediate realloc on the next call.
         */
      num_to_alloc = 1; /* After all that talk, this was set to 1 anyways... */
		(yy_buffer_stack) = (struct yy_buffer_state**)yyalloc
								(num_to_alloc * sizeof(struct yy_buffer_state*)
								);
		if ( ! (yy_buffer_stack) )
			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );

		memset((yy_buffer_stack), 0, num_to_alloc * sizeof(struct yy_buffer_state*));

		(yy_buffer_stack_max) = num_to_alloc;
		(yy_buffer_stack_top) = 0;
		return;
	}

	if ((yy_buffer_stack_top) >= ((yy_buffer_stack_max)) - 1){

		/* Increase the buffer to prepare for a possible push. */
		yy_size_t grow_size = 8 /* arbitrary grow size */;

		num_to_alloc = (yy_buffer_stack_max) + grow_size;
		(yy_buffer_stack) = (struct yy_buffer_state**)yyrealloc
								((yy_buffer_stack),
								num_to_alloc * sizeof(struct yy_buffer_state*)
								);
		if ( ! (yy_buffer_stack) )
			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );

		/* zero only the new slots.*/
		memset((yy_buffer_stack) + (yy_buffer_stack_max), 0, grow_size * sizeof(struct yy_buffer_state*));
		(yy_buffer_stack_max) = num_to_alloc;
	}
}

/** Setup the input buffer state to scan directly from a user-specified character buffer.
 * @param base the character buffer
 * @param size the size in bytes of the character buffer
 * 
 * @return the newly allocated buffer state object.
 */
YY_BUFFER_STATE yy_scan_buffer  (char * base, yy_size_t  size )
{
	YY_BUFFER_STATE b;
    
	if ( size < 2 ||
	     base[size-2] != YY_END_OF_BUFFER_CHAR ||
	     base[size-1] != YY_END_OF_BUFFER_CHAR )
		/* They forgot to leave room for the EOB's. */
		return NULL;

	b = (YY_BUFFER_STATE) yyalloc( sizeof( struct yy_buffer_state )  );
	if ( ! b )
		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_buffer()" );

	b->yy_buf_size = (int) (size - 2);	/* "- 2" to take care of EOB's */
	b->yy_buf_pos = b->yy_ch_buf = base;
	b->yy_is_our_buffer = 0;
	b->yy_input_file = NULL;
	b->yy_n_chars = b->yy_buf_size;
	b->yy_is_interactive = 0;
	b->yy_at_bol = 1;
	b->yy_fill_buffer = 0;
	b->yy_buffer_status = YY_BUFFER_NEW;

	yy_switch_to_buffer( b  );

	return b;
}

/** Setup the input buffer state to scan a string. The next call to yylex() will
 * scan from a @e copy of @a str.
 * @param yystr a NUL-terminated string to scan
 * 
 * @return the newly allocated buffer state object.
 * @note If you want to scan bytes that may contain NUL values, then use
 *       yy_scan_bytes() instead.
 */
YY_BUFFER_STATE yy_scan_string (const char * yystr )
{
    
	return yy_scan_bytes( yystr, (int) strlen(yystr) );
}

/** Setup the input buffer state to scan the given bytes. The next call to yylex() will
 * scan from a @e copy of @a bytes.
 * @param yybytes the byte buffer to scan
 * @param _yybytes_len the number of bytes in the buffer pointed to by @a bytes.
 * 
 * @return the newly allocated buffer state object.
 */
YY_BUFFER_STATE yy_scan_bytes  (const char * yybytes, int  _yybytes_len )
{
	YY_BUFFER_STATE b;
	char *buf;
	yy_size_t n;
	int i;
    
	/* Get memory for full buffer, including space for trailing EOB's. */
	n = (yy_size_t) (_yybytes_len + 2);
	buf = (char *) yyalloc( n  );
	if ( ! buf )
		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_bytes()" );

	for ( i = 0; i < _yybytes_len; ++i )
		buf[i] = yybytes[i];

	buf[_yybytes_len] = buf[_yybytes_len+1] = YY_END_OF_BUFFER_CHAR;

	b = yy_scan_buffer( buf, n );
	if ( ! b )
		YY_FATAL_ERROR( "bad buffer in yy_scan_bytes()" );

	/* It's okay to grow etc. this buffer, and we should throw it
	 * away when we're done.
	 */
	b->yy_is_our_buffer = 1;

	return b;
}

#ifndef YY_EXIT_FAILURE
#define YY_EXIT_FAILURE 2
#endif

static void yynoreturn yy_fatal_error (const char* msg )
{
			fprintf( stderr, "%s\n", msg );
	exit( YY_EXIT_FAILURE );
}

/* Redefine yyless() so it works in section 3 code. */

#undef yyless
#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
        int yyless_macro_arg = (n); \
        YY_LESS_LINENO(yyless_macro_arg);\
		yytext[yyleng] = (yy_hold_char); \
		(yy_c_buf_p) = yytext + yyless_macro_arg; \
		(yy_hold_char) = *(yy_c_buf_p); \
		*(yy_c_buf_p) = '\0'; \
		yyleng = yyless_macro_arg; \
		} \
	while ( 0 )

/* Accessor  methods (get/set functions) to struct members. */

/** Get the current line number.
 * 
 */
int yyget_lineno  (void)
{
    
    return yylineno;
}

/** Get the input stream.
 * 
 */
FILE *yyget_in  (void)
{
        return yyin;
}

/** Get the output stream.
 * 
 */
FILE *yyget_out  (void)
{
        return yyout;
}

/** Get the length of the current token.
 * 
 */
int yyget_leng  (void)
{
        return yyleng;
}

/** Get the current token.
 * 
 */

char *yyget_text  (void)
{
        return yytext;
}

/** Set the current line number.
 * @param _line_number line number
 * 
 */
void yyset_lineno (int  _line_number )
{
    
    yylineno = _line_number;
}

/** Set the input stream. This does not discard the current
 * input buffer.
 * @param _in_str A readable stream.
 * 
 * @see yy_switch_to_buffer
 */
void yyset_in (FILE *  _in_str )
{
        yyin = _in_str ;
}

void yyset_out (FILE *  _out_str )
{
        yyout = _out_str ;
}

int yyget_debug  (void)
{
        return yy_flex_debug;
}

void yyset_debug (int  _bdebug )
{
        yy_flex_debug = _bdebug ;
}

static int yy_init_globals (void)
{
        /* Initialization is the same as for the non-reentrant scanner.
     * This function is called from yylex_destroy(), so don't allocate here.
     */

    (yy_buffer_stack) = NULL;
    (yy_buffer_stack_top) = 0;
    (yy_buffer_stack_max) = 0;
    (yy_c_buf_p) = NULL;
    (yy_init) = 0;
    (yy_start) = 0;

/* Defined in main.c */
#ifdef YY_STDINIT
    yyin = stdin;
    yyout = stdout;
#else
    yyin = NULL;
    yyout = NULL;
#endif

    /* For future reference: Set errno on error, since we are called by
     * yylex_init()
     */
    return 0;
}

/* yylex_destroy is for both reentrant and non-reentrant scanners. */
int yylex_destroy  (void)
{
    
    /* Pop the buffer stack, destroying each element. */
	while(YY_CURRENT_BUFFER){
		yy_delete_buffer( YY_CURRENT_BUFFER  );
		YY_CURRENT_BUFFER_LVALUE = NULL;
		yypop_buffer_state();
	}

	/* Destroy the stack itself. */
	yyfree((yy_buffer_stack) );
	(yy_buffer_stack) = NULL;

    /* Reset the globals. This is important in a non-reentrant scanner so the next time
     * yylex() is called, initialization will occur. */
    yy_init_globals( );

    return 0;
}

/*
 * Internal utility routines.
 */

#ifndef yytext_ptr
static void yy_flex_strncpy (char* s1, const char * s2, int n )
{
		
	int i;
	for ( i = 0; i < n; ++i )
		s1[i] = s2[i];
}
#endif

#ifdef YY_NEED_STRLEN
static int yy_flex_strlen (const char * s )
{
	int n;
	for ( n = 0; s[n]; ++n )
		;

	return n;
}
#endif

void *yyalloc (yy_size_t  size )
{
			return malloc(size);
}

void *yyrealloc  (void * ptr, yy_size_t  size )
{
		
	/* The cast to (char *) in the following accommodates both
	 * implementations that use char* generic pointers, and those
	 * that use void* generic pointers.  It works with the latter
	 * because both ANSI C and C++ allow castless assignment from
	 * any pointer type to void*, and deal with argument conversions
	 * as though doing an assignment.
	 */
	return realloc(ptr, size);
}

void yyfree (void * ptr )
{
			free( (char *) ptr );	/* see yyrealloc() for (char *) cast */
}

#define YYTABLES_NAME "yytables"

#line 325 "lexerparser.ll"


void
genesyspp_driver::scan_begin_file ()
{
  //yy_flex_debug = trace_scanning;
  if (file.empty () || file == "-")
    yyin = stdin;
  else if (!(yyin = fopen (file.c_str (), "r")))
    {
      error ("cannot open " + file + ": " + strerror(errno));
      exit (EXIT_FAILURE);
    }
}

void genesyspp_driver::scan_begin_str ()
{
  //yy_flex_debug = trace_scanning;
  if(!str_to_parse.empty()){    
    yy_scan_string (str_to_parse.c_str()); //maybe throw exception on else
  }else{
    std::string str("0");
    yy_scan_string (str.c_str()); //maybe throw exception on else
  }
}



void
genesyspp_driver::scan_end_file ()
{
  fclose (yyin);
}

void
genesyspp_driver::scan_end_str ()
{
  yy_delete_buffer(YY_CURRENT_BUFFER);
}

