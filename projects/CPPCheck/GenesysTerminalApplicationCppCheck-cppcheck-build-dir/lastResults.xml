<?xml version="1.0" encoding="UTF-8"?>
<results version="2">
    <cppcheck version="2.7"/>
    <errors>
        <error id="useInitializationList" severity="performance" msg="Variable &amp;#039;_classename&amp;#039; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&amp;#039;t explicitly write them to the initialization list. You could avoid assigning &amp;#039;_classename&amp;#039; a value by passing the value to the constructor in the initialization list." cwe="398" file0="../../source/kernel/simulator/Attribute.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Property.h" line="18"/>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &amp;#039;_name&amp;#039; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&amp;#039;t explicitly write them to the initialization list. You could avoid assigning &amp;#039;_name&amp;#039; a value by passing the value to the constructor in the initialization list." cwe="398" file0="../../source/kernel/simulator/Attribute.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Property.h" line="19"/>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &amp;#039;_parentname&amp;#039; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&amp;#039;t explicitly write them to the initialization list. You could avoid assigning &amp;#039;_parentname&amp;#039; a value by passing the value to the constructor in the initialization list." cwe="398" file0="../../source/kernel/simulator/Attribute.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Property.h" line="20"/>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &amp;#039;_getter&amp;#039; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&amp;#039;t explicitly write them to the initialization list. You could avoid assigning &amp;#039;_getter&amp;#039; a value by passing the value to the constructor in the initialization list." cwe="398" file0="../../source/kernel/simulator/Attribute.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Property.h" line="94"/>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &amp;#039;_setter&amp;#039; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&amp;#039;t explicitly write them to the initialization list. You could avoid assigning &amp;#039;_setter&amp;#039; a value by passing the value to the constructor in the initialization list." cwe="398" file0="../../source/kernel/simulator/Attribute.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Property.h" line="95"/>
        </error>
        <error id="duplInheritedMember" severity="warning" msg="The class &amp;#039;PropertyT&amp;#039; defines member variable with name &amp;#039;_type&amp;#039; also defined in its parent class &amp;#039;PropertyBase&amp;#039;." verbose="The class &amp;#039;PropertyT&amp;#039; defines member variable with name &amp;#039;_type&amp;#039; also defined in its parent class &amp;#039;PropertyBase&amp;#039;." cwe="398" file0="../../source/kernel/simulator/Attribute.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Property.h" line="107" info="Derived variable &amp;#039;PropertyT::_type&amp;#039;"/>
            <location file="../../source/kernel/simulator/Property.h" line="61" info="Parent variable &amp;#039;PropertyBase::_type&amp;#039;"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;classname&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;classname&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/Attribute.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Property.h" line="17"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;name&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;name&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/Attribute.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Property.h" line="17"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;parentName&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;parentName&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/Attribute.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Property.h" line="17"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;classname&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;classname&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/Attribute.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Property.h" line="93"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;name&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;name&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/Attribute.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Property.h" line="93"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;parentName&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;parentName&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/Attribute.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Property.h" line="93"/>
        </error>
        <error id="duplInheritedMember" severity="warning" msg="The class &amp;#039;PropertyT &amp;lt; double &amp;gt;&amp;#039; defines member variable with name &amp;#039;_type&amp;#039; also defined in its parent class &amp;#039;PropertyBase&amp;#039;." verbose="The class &amp;#039;PropertyT &amp;lt; double &amp;gt;&amp;#039; defines member variable with name &amp;#039;_type&amp;#039; also defined in its parent class &amp;#039;PropertyBase&amp;#039;." cwe="398" file0="../../source/kernel/simulator/Counter.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Property.h" line="107" info="Derived variable &amp;#039;PropertyT &amp;lt; double &amp;gt;::_type&amp;#039;"/>
            <location file="../../source/kernel/simulator/Property.h" line="61" info="Parent variable &amp;#039;PropertyBase::_type&amp;#039;"/>
        </error>
        <error id="duplInheritedMember" severity="warning" msg="The class &amp;#039;PropertyT &amp;lt; unsigned int &amp;gt;&amp;#039; defines member variable with name &amp;#039;_type&amp;#039; also defined in its parent class &amp;#039;PropertyBase&amp;#039;." verbose="The class &amp;#039;PropertyT &amp;lt; unsigned int &amp;gt;&amp;#039; defines member variable with name &amp;#039;_type&amp;#039; also defined in its parent class &amp;#039;PropertyBase&amp;#039;." cwe="398" file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Property.h" line="107" info="Derived variable &amp;#039;PropertyT &amp;lt; unsigned int &amp;gt;::_type&amp;#039;"/>
            <location file="../../source/kernel/simulator/Property.h" line="61" info="Parent variable &amp;#039;PropertyBase::_type&amp;#039;"/>
        </error>
        <error id="duplInheritedMember" severity="warning" msg="The class &amp;#039;PropertyT &amp;lt; std :: string &amp;gt;&amp;#039; defines member variable with name &amp;#039;_type&amp;#039; also defined in its parent class &amp;#039;PropertyBase&amp;#039;." verbose="The class &amp;#039;PropertyT &amp;lt; std :: string &amp;gt;&amp;#039; defines member variable with name &amp;#039;_type&amp;#039; also defined in its parent class &amp;#039;PropertyBase&amp;#039;." cwe="398" file0="../../source/kernel/simulator/ModelComponent.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Property.h" line="107" info="Derived variable &amp;#039;PropertyT &amp;lt; std :: string &amp;gt;::_type&amp;#039;"/>
            <location file="../../source/kernel/simulator/Property.h" line="61" info="Parent variable &amp;#039;PropertyBase::_type&amp;#039;"/>
        </error>
        <error id="duplInheritedMember" severity="warning" msg="The class &amp;#039;PropertyT &amp;lt; bool &amp;gt;&amp;#039; defines member variable with name &amp;#039;_type&amp;#039; also defined in its parent class &amp;#039;PropertyBase&amp;#039;." verbose="The class &amp;#039;PropertyT &amp;lt; bool &amp;gt;&amp;#039; defines member variable with name &amp;#039;_type&amp;#039; also defined in its parent class &amp;#039;PropertyBase&amp;#039;." cwe="398" file0="../../source/kernel/simulator/ModelDataDefinition.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Property.h" line="107" info="Derived variable &amp;#039;PropertyT &amp;lt; bool &amp;gt;::_type&amp;#039;"/>
            <location file="../../source/kernel/simulator/Property.h" line="61" info="Parent variable &amp;#039;PropertyBase::_type&amp;#039;"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;ModelDataManager&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;ModelDataManager&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/Attribute.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelDataManager.h" line="32"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;Plugin&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;Plugin&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/Attribute.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Plugin.h" line="33"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;Plugin&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;Plugin&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/Attribute.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Plugin.h" line="34"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;Attribute&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;Attribute&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/Attribute.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Attribute.h" line="65"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Attribute.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Attribute.h" line="68" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="66" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Attribute.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Attribute.h" line="74" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="87" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Attribute.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Attribute.h" line="75" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="88" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Attribute.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Attribute.h" line="76" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="90" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Attribute.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="87" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/Persistence.h" line="105" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Attribute.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="88" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/Persistence.h" line="113" info="Virtual function in base class"/>
        </error>
        <error id="virtualCallInConstructor" severity="style" msg="Virtual function &amp;#039;_addProperty&amp;#039; is called from constructor &amp;#039;ModelDataDefinition(Model*model,std::string datadefinitionTypename,std::string name=&amp;quot;&amp;quot;,bool insertIntoModel=true)&amp;#039; at line 46. Dynamic binding is not used." verbose="Virtual function &amp;#039;_addProperty&amp;#039; is called from constructor &amp;#039;ModelDataDefinition(Model*model,std::string datadefinitionTypename,std::string name=&amp;quot;&amp;quot;,bool insertIntoModel=true)&amp;#039; at line 46. Dynamic binding is not used." file0="../../source/kernel/simulator/ModelDataDefinition.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="96" info="_addProperty is a virtual function"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.cpp" line="46" info="Calling _addProperty"/>
        </error>
        <error id="virtualCallInConstructor" severity="style" msg="Virtual function &amp;#039;_addProperty&amp;#039; is called from constructor &amp;#039;ModelDataDefinition(Model*model,std::string datadefinitionTypename,std::string name=&amp;quot;&amp;quot;,bool insertIntoModel=true)&amp;#039; at line 49. Dynamic binding is not used." verbose="Virtual function &amp;#039;_addProperty&amp;#039; is called from constructor &amp;#039;ModelDataDefinition(Model*model,std::string datadefinitionTypename,std::string name=&amp;quot;&amp;quot;,bool insertIntoModel=true)&amp;#039; at line 49. Dynamic binding is not used." file0="../../source/kernel/simulator/ModelDataDefinition.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="96" info="_addProperty is a virtual function"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.cpp" line="49" info="Calling _addProperty"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;searchFor&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;searchFor&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/Attribute.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/util/Util.h" line="83"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="../../source/kernel/simulator/Attribute.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/util/Util.h" line="108"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="../../source/kernel/simulator/Attribute.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/util/Util.h" line="117"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;defaultValue&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;defaultValue&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/Attribute.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Persistence.h" line="45"/>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &amp;#039;InternalEvent::_parameter&amp;#039; is not initialized in the constructor." verbose="Member variable &amp;#039;InternalEvent::_parameter&amp;#039; is not initialized in the constructor." cwe="398" file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Event.h" line="56"/>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &amp;#039;InternalEvent::_object&amp;#039; is not initialized in the constructor." verbose="Member variable &amp;#039;InternalEvent::_object&amp;#039; is not initialized in the constructor." cwe="398" file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Event.h" line="56"/>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &amp;#039;_description&amp;#039; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&amp;#039;t explicitly write them to the initialization list. You could avoid assigning &amp;#039;_description&amp;#039; a value by passing the value to the constructor in the initialization list." cwe="398" file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Event.h" line="57"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;description&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;description&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Event.h" line="56"/>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &amp;#039;_text&amp;#039; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&amp;#039;t explicitly write them to the initialization list. You could avoid assigning &amp;#039;_text&amp;#039; a value by passing the value to the constructor in the initialization list." cwe="398" file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/TraceManager.h" line="151"/>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &amp;#039;_text&amp;#039; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&amp;#039;t explicitly write them to the initialization list. You could avoid assigning &amp;#039;_text&amp;#039; a value by passing the value to the constructor in the initialization list." cwe="398" file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/TraceManager.h" line="156"/>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &amp;#039;_e&amp;#039; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&amp;#039;t explicitly write them to the initialization list. You could avoid assigning &amp;#039;_e&amp;#039; a value by passing the value to the constructor in the initialization list." cwe="398" file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/TraceManager.h" line="175"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;TraceManager&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;TraceManager&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/TraceManager.h" line="63"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;TraceEvent&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;TraceEvent&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/TraceManager.h" line="154"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;TraceSimulationProcess&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;TraceSimulationProcess&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/TraceManager.h" line="219"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;text&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;text&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/TraceManager.h" line="149"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;text&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;text&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/TraceManager.h" line="154"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;text&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;text&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/TraceManager.h" line="174"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;text&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;text&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/TraceManager.h" line="188"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;text&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;text&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/TraceManager.h" line="219"/>
        </error>
        <error id="noCopyConstructor" severity="warning" msg="Class &amp;#039;ComponentManager&amp;#039; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &amp;#039;ComponentManager&amp;#039; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ComponentManager.cpp" line="23"/>
        </error>
        <error id="noOperatorEq" severity="warning" msg="Class &amp;#039;ComponentManager&amp;#039; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &amp;#039;ComponentManager&amp;#039; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ComponentManager.cpp" line="23"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;source&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;source&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ComponentManager.cpp" line="114"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;plugin&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;plugin&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ComponentManager.cpp" line="128"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;name&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;name&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ComponentManager.cpp" line="40"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::find_if algorithm instead of a raw loop." verbose="Consider using std::find_if algorithm instead of a raw loop." cwe="398" file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ComponentManager.cpp" line="42"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::find_if algorithm instead of a raw loop." verbose="Consider using std::find_if algorithm instead of a raw loop." cwe="398" file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ComponentManager.cpp" line="51"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::any_of algorithm instead of a raw loop." verbose="Consider using std::any_of algorithm instead of a raw loop." cwe="398" file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ComponentManager.cpp" line="100"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;getSourceComponents&amp;#039; is never used." verbose="The function &amp;#039;getSourceComponents&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ComponentManager.cpp" line="112"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;getTransferInComponents&amp;#039; is never used." verbose="The function &amp;#039;getTransferInComponents&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ComponentManager.cpp" line="124"/>
        </error>
        <error id="duplInheritedMember" severity="warning" msg="The class &amp;#039;SourceModelComponent&amp;#039; defines member variable with name &amp;#039;DEFAULT&amp;#039; also defined in its parent class &amp;#039;ModelComponent&amp;#039;." verbose="The class &amp;#039;SourceModelComponent&amp;#039; defines member variable with name &amp;#039;DEFAULT&amp;#039; also defined in its parent class &amp;#039;ModelComponent&amp;#039;." cwe="398" file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/SourceModelComponent.h" line="67" info="Derived variable &amp;#039;SourceModelComponent::DEFAULT&amp;#039;"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="68" info="Parent variable &amp;#039;ModelComponent::DEFAULT&amp;#039;"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/SourceModelComponent.h" line="49" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="39" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/SourceModelComponent.h" line="51" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="54" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_initBetweenReplications&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_initBetweenReplications&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/SourceModelComponent.h" line="52" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="93" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/SourceModelComponent.h" line="53" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="53" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/SourceModelComponent.h" line="54" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="90" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_createInternalAndAttachedData&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_createInternalAndAttachedData&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/SourceModelComponent.h" line="55" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="95" info="Virtual function in base class"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;StatisticsCollector&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;StatisticsCollector&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/StatisticsCollector.h" line="29"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/StatisticsCollector.h" line="32" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="66" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/StatisticsCollector.h" line="42" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="87" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/StatisticsCollector.h" line="43" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="88" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/StatisticsCollector.h" line="44" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="90" info="Virtual function in base class"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;EntityType&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;EntityType&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/EntityType.h" line="31"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/EntityType.h" line="34" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="66" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/EntityType.h" line="54" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="87" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/EntityType.h" line="55" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="88" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/EntityType.h" line="56" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="90" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_initBetweenReplications&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_initBetweenReplications&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/EntityType.h" line="57" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="93" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_createInternalAndAttachedData&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_createInternalAndAttachedData&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/EntityType.h" line="58" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="95" info="Virtual function in base class"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;ComponentManager&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;ComponentManager&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ComponentManager.h" line="28"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;ModelSimulation&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;ModelSimulation&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelSimulation.h" line="35"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;Model&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;Model&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Model.h" line="45"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;expression&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;expression&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Model.h" line="61"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;expression&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;expression&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Model.h" line="62"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;expression&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;expression&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Model.h" line="63"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;expressionName&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;expressionName&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Model.h" line="63"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;LicenceManager&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;LicenceManager&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/LicenceManager.h" line="27"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;PluginManager&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;PluginManager&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/PluginManager.h" line="27"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;dynamicLibraryFilename&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;dynamicLibraryFilename&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/PluginManager.h" line="34"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;dynamicLibraryFilename&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;dynamicLibraryFilename&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/PluginManager.h" line="35"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;dynamicLibraryFilename&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;dynamicLibraryFilename&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/PluginManager.h" line="36"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;ModelManager&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;ModelManager&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelManager.h" line="24"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;ExperimentManager&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;ExperimentManager&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ExperimentManager.h" line="57"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Entity.h" line="83" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="66" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Entity.h" line="101" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="87" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Entity.h" line="102" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="88" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Entity.h" line="103" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="90" info="Virtual function in base class"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;Entity&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;Entity&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/Entity.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Entity.h" line="78"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelComponent.h" line="39" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="66" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelComponent.h" line="53" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="88" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelComponent.h" line="54" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="87" info="Virtual function in base class"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;expression&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;expression&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Parser_if.h" line="22"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;expression&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;expression&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Parser_if.h" line="23"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;dynamicLibraryFilename&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;dynamicLibraryFilename&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/PluginConnector_if.h" line="24"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;dynamicLibraryFilename&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;dynamicLibraryFilename&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/PluginConnector_if.h" line="25"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;dynamicLibraryFilename&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;dynamicLibraryFilename&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/ComponentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/PluginConnector_if.h" line="26"/>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &amp;#039;connection&amp;#039; can be declared with const" verbose="Parameter &amp;#039;connection&amp;#039; can be declared with const" cwe="398" file0="../../source/kernel/simulator/ConnectionManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ConnectionManager.cpp" line="51"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="../../source/kernel/simulator/ConnectionManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ConnectionManager.cpp" line="52"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;getCurrentInputConnectionsSize&amp;#039; is never used." verbose="The function &amp;#039;getCurrentInputConnectionsSize&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ConnectionManager.cpp" line="98"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;getCurrentOutputConnectionsSize&amp;#039; is never used." verbose="The function &amp;#039;getCurrentOutputConnectionsSize&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ConnectionManager.cpp" line="74"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;getFrontConnection&amp;#039; is never used." verbose="The function &amp;#039;getFrontConnection&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ConnectionManager.cpp" line="25"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;getMaxInputConnections&amp;#039; is never used." verbose="The function &amp;#039;getMaxInputConnections&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ConnectionManager.cpp" line="106"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;getMaxOutputConnections&amp;#039; is never used." verbose="The function &amp;#039;getMaxOutputConnections&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ConnectionManager.cpp" line="82"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;getMinInputConnections&amp;#039; is never used." verbose="The function &amp;#039;getMinInputConnections&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ConnectionManager.cpp" line="114"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;getMinOutputConnections&amp;#039; is never used." verbose="The function &amp;#039;getMinOutputConnections&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ConnectionManager.cpp" line="90"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;removeAtPort&amp;#039; is never used." verbose="The function &amp;#039;removeAtPort&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ConnectionManager.cpp" line="60"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;setMaxInputConnections&amp;#039; is never used." verbose="The function &amp;#039;setMaxInputConnections&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ConnectionManager.cpp" line="102"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;setMaxOutputConnections&amp;#039; is never used." verbose="The function &amp;#039;setMaxOutputConnections&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ConnectionManager.cpp" line="78"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;setMinInputConnections&amp;#039; is never used." verbose="The function &amp;#039;setMinInputConnections&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ConnectionManager.cpp" line="110"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;setMinOutputConnections&amp;#039; is never used." verbose="The function &amp;#039;setMinOutputConnections&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ConnectionManager.cpp" line="86"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;Counter&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;Counter&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/Counter.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Counter.h" line="27"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Counter.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Counter.h" line="30" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="66" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Counter.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Counter.h" line="41" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="87" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Counter.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Counter.h" line="42" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="88" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Counter.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Counter.h" line="43" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="90" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_initBetweenReplications&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_initBetweenReplications&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Counter.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Counter.h" line="44" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="93" info="Virtual function in base class"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;name&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;name&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/Counter.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Counter.cpp" line="26"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;name&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;name&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/Counter.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Counter.cpp" line="30"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;parentName&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;parentName&amp;#039; is assigned a value that is never used." cwe="563" file0="../../source/kernel/simulator/Counter.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Counter.cpp" line="32"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;parentName&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;parentName&amp;#039; is assigned a value that is never used." cwe="563" file0="../../source/kernel/simulator/Counter.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Counter.cpp" line="34"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;incCountValue&amp;#039; is never used." verbose="The function &amp;#039;incCountValue&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Counter.cpp" line="54"/>
        </error>
        <error id="multiCondition" severity="style" msg="Expression is always true because &amp;#039;else if&amp;#039; condition is opposite to previous condition at line 183." verbose="Expression is always true because &amp;#039;else if&amp;#039; condition is opposite to previous condition at line 183." cwe="398" file0="../../source/kernel/simulator/CppSerializer.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/CppSerializer.cpp" line="186" info="else if condition is opposite to first condition"/>
            <location file="../../source/kernel/simulator/CppSerializer.cpp" line="183" info="first condition"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;name&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;name&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/CppSerializer.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/CppSerializer.cpp" line="170"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;type&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;type&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/CppSerializer.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/CppSerializer.cpp" line="170"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::transform algorithm instead of a raw loop." verbose="Consider using std::transform algorithm instead of a raw loop." cwe="398" file0="../../source/kernel/simulator/CppSerializer.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/CppSerializer.cpp" line="197"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::transform algorithm instead of a raw loop." verbose="Consider using std::transform algorithm instead of a raw loop." cwe="398" file0="../../source/kernel/simulator/CppSerializer.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/CppSerializer.cpp" line="198"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;name&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;name&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/CppSerializer.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelSerializer.h" line="71"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;type&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;type&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/CppSerializer.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelSerializer.h" line="71"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;name&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;name&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/Entity.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Entity.cpp" line="22"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;entityTypeName&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;entityTypeName&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/Entity.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Entity.cpp" line="31"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;attributeName&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;attributeName&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/Entity.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Entity.cpp" line="83"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;index&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;index&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/Entity.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Entity.cpp" line="88"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;attributeName&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;attributeName&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/Entity.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Entity.cpp" line="88"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;index&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;index&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/Entity.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Entity.cpp" line="108"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;attributeName&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;attributeName&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/Entity.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Entity.cpp" line="118"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;attributeName&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;attributeName&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/Entity.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Entity.cpp" line="122"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;index&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;index&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/Entity.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Entity.cpp" line="142"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;getEntityTypeName&amp;#039; is never used." verbose="The function &amp;#039;getEntityTypeName&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Entity.cpp" line="38"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;name&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;name&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/EntityType.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/EntityType.cpp" line="26"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;name&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;name&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/EntityType.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/EntityType.cpp" line="30"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;_initialPicture&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;_initialPicture&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/EntityType.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/EntityType.cpp" line="88"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;name&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;name&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/EntityType.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/EntityType.cpp" line="96"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::find_if algorithm instead of a raw loop." verbose="Consider using std::find_if algorithm instead of a raw loop." cwe="398" file0="../../source/kernel/simulator/EntityType.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/EntityType.cpp" line="98"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;addGetStatisticsCollector&amp;#039; is never used." verbose="The function &amp;#039;addGetStatisticsCollector&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/EntityType.cpp" line="96"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;initialNVACost&amp;#039; is never used." verbose="The function &amp;#039;initialNVACost&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/EntityType.cpp" line="76"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;initialOtherCost&amp;#039; is never used." verbose="The function &amp;#039;initialOtherCost&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/EntityType.cpp" line="68"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;initialVACost&amp;#039; is never used." verbose="The function &amp;#039;initialVACost&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/EntityType.cpp" line="84"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;initialWaitingCost&amp;#039; is never used." verbose="The function &amp;#039;initialWaitingCost&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/EntityType.cpp" line="60"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;setInitialNVACost&amp;#039; is never used." verbose="The function &amp;#039;setInitialNVACost&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/EntityType.cpp" line="72"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;setInitialOtherCost&amp;#039; is never used." verbose="The function &amp;#039;setInitialOtherCost&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/EntityType.cpp" line="64"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;setInitialPicture&amp;#039; is never used." verbose="The function &amp;#039;setInitialPicture&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/EntityType.cpp" line="88"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;setInitialVACost&amp;#039; is never used." verbose="The function &amp;#039;setInitialVACost&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/EntityType.cpp" line="80"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;setInitialWaitingCost&amp;#039; is never used." verbose="The function &amp;#039;setInitialWaitingCost&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/EntityType.cpp" line="56"/>
        </error>
        <error id="uselessAssignmentArg" severity="style" msg="Assignment of function parameter has no effect outside the function." verbose="Assignment of function parameter has no effect outside the function." cwe="398" file0="../../source/kernel/simulator/ExperimentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ExperimentManager.cpp" line="53"/>
        </error>
        <error id="uselessAssignmentArg" severity="style" msg="Assignment of function parameter has no effect outside the function." verbose="Assignment of function parameter has no effect outside the function." cwe="398" file0="../../source/kernel/simulator/ExperimentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ExperimentManager.cpp" line="62"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &amp;#039;res&amp;#039; is always false" verbose="Condition &amp;#039;res&amp;#039; is always false" cwe="570" file0="../../source/kernel/simulator/ExperimentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ExperimentManager.cpp" line="64" info="Condition &amp;#039;res&amp;#039; is always false"/>
            <location file="../../source/kernel/simulator/ExperimentManager.cpp" line="63" info="Assignment &amp;#039;res=false&amp;#039;, assigned value is 0"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;filename&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;filename&amp;#039; is assigned a value that is never used." cwe="563" file0="../../source/kernel/simulator/ExperimentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ExperimentManager.cpp" line="53"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;filename&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;filename&amp;#039; is assigned a value that is never used." cwe="563" file0="../../source/kernel/simulator/ExperimentManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ExperimentManager.cpp" line="62"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;getExperiments&amp;#039; is never used." verbose="The function &amp;#039;getExperiments&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ExperimentManager.cpp" line="22"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;loadSimulationExperiment&amp;#039; is never used." verbose="The function &amp;#039;loadSimulationExperiment&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ExperimentManager.cpp" line="59"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;newSimulationExperiment&amp;#039; is never used." verbose="The function &amp;#039;newSimulationExperiment&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ExperimentManager.cpp" line="26"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;saveSimulationExperiment&amp;#039; is never used." verbose="The function &amp;#039;saveSimulationExperiment&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ExperimentManager.cpp" line="50"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;getScenarios&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;getScenarios&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/ExperimentManagerDefaultImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ExperimentManagerDefaultImpl1.h" line="25" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ExperimetManager_if.h" line="27" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;startSimulationOfScenario&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;startSimulationOfScenario&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/ExperimentManagerDefaultImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ExperimentManagerDefaultImpl1.h" line="30" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ExperimetManager_if.h" line="32" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;startExperiment&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;startExperiment&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/ExperimentManagerDefaultImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ExperimentManagerDefaultImpl1.h" line="31" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ExperimetManager_if.h" line="33" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;stopExperiment&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;stopExperiment&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/ExperimentManagerDefaultImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ExperimentManagerDefaultImpl1.h" line="32" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ExperimetManager_if.h" line="34" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;addTraceSimulationHandler&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;addTraceSimulationHandler&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/ExperimentManagerDefaultImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ExperimentManagerDefaultImpl1.h" line="33" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ExperimetManager_if.h" line="35" info="Virtual function in base class"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &amp;#039;veckeyval.size()&amp;gt;1&amp;#039; is always true" verbose="Condition &amp;#039;veckeyval.size()&amp;gt;1&amp;#039; is always true" cwe="571" file0="../../source/kernel/simulator/GenSerializer.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/GenSerializer.cpp" line="138"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;name&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;name&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/GenSerializer.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/GenSerializer.cpp" line="191"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;type&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;type&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/GenSerializer.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/GenSerializer.cpp" line="191"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::transform algorithm instead of a raw loop." verbose="Consider using std::transform algorithm instead of a raw loop." cwe="398" file0="../../source/kernel/simulator/GenSerializer.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/GenSerializer.cpp" line="206"/>
        </error>
        <error id="multiCondition" severity="style" msg="Expression is always true because &amp;#039;else if&amp;#039; condition is opposite to previous condition at line 513." verbose="Expression is always true because &amp;#039;else if&amp;#039; condition is opposite to previous condition at line 513." cwe="398" file0="../../source/kernel/simulator/JsonSerializer.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/JsonSerializer.cpp" line="516" info="else if condition is opposite to first condition"/>
            <location file="../../source/kernel/simulator/JsonSerializer.cpp" line="513" info="first condition"/>
        </error>
        <error id="shadowFunction" severity="style" msg="Local variable &amp;#039;json&amp;#039; shadows outer function" verbose="Local variable &amp;#039;json&amp;#039; shadows outer function" cwe="398" file0="../../source/kernel/simulator/JsonSerializer.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/JsonSerializer.cpp" line="29" info="Shadow variable"/>
            <location file="../../source/kernel/simulator/JsonSerializer.cpp" line="241" info="Shadowed declaration"/>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &amp;#039;fields&amp;#039; shadows outer variable" verbose="Local variable &amp;#039;fields&amp;#039; shadows outer variable" cwe="398" file0="../../source/kernel/simulator/JsonSerializer.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/JsonSerializer.cpp" line="88" info="Shadow variable"/>
            <location file="../../source/kernel/simulator/JsonSerializer.cpp" line="77" info="Shadowed declaration"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;msg&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;msg&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/JsonSerializer.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/JsonSerializer.cpp" line="230"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;name&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;name&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/JsonSerializer.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/JsonSerializer.cpp" line="397"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;name&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;name&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/JsonSerializer.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/JsonSerializer.cpp" line="500"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;type&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;type&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/JsonSerializer.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/JsonSerializer.cpp" line="500"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::transform algorithm instead of a raw loop." verbose="Consider using std::transform algorithm instead of a raw loop." cwe="398" file0="../../source/kernel/simulator/JsonSerializer.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/JsonSerializer.cpp" line="527"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::transform algorithm instead of a raw loop." verbose="Consider using std::transform algorithm instead of a raw loop." cwe="398" file0="../../source/kernel/simulator/JsonSerializer.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/JsonSerializer.cpp" line="528"/>
        </error>
        <error id="unusedStructMember" severity="style" msg="struct member &amp;#039;Json::value&amp;#039; is never used." verbose="struct member &amp;#039;Json::value&amp;#039; is never used." cwe="563" file0="../../source/kernel/simulator/JsonSerializer.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/JsonSerializer.cpp" line="217"/>
        </error>
        <error id="noCopyConstructor" severity="warning" msg="Class &amp;#039;Model&amp;#039; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &amp;#039;Model&amp;#039; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Model.cpp" line="39"/>
        </error>
        <error id="noOperatorEq" severity="warning" msg="Class &amp;#039;Model&amp;#039; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &amp;#039;Model&amp;#039; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Model.cpp" line="39"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;filename&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;filename&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Model.cpp" line="96"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;filename&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;filename&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Model.cpp" line="108"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;expression&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;expression&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Model.cpp" line="119"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;expression&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;expression&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Model.cpp" line="128"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;expressionName&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;expressionName&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Model.cpp" line="128"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;expression&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;expression&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Model.cpp" line="144"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;name&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;name&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Model.cpp" line="322"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;entId&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;entId&amp;#039; is assigned a value that is never used." cwe="563" file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Model.cpp" line="334"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Model.cpp" line="191"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Model.cpp" line="197"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Model.cpp" line="274"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Model.cpp" line="281"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;EventCompare&amp;#039; is never used." verbose="The function &amp;#039;EventCompare&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Model.cpp" line="29"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;removeEntity&amp;#039; is never used." verbose="The function &amp;#039;removeEntity&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Model.cpp" line="332"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;setAutomaticallyCreatesModelDataDefinitions&amp;#039; is never used." verbose="The function &amp;#039;setAutomaticallyCreatesModelDataDefinitions&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Model.cpp" line="356"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;setTracer&amp;#039; is never used." verbose="The function &amp;#039;setTracer&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Model.cpp" line="344"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;ModelPersistenceDefaultImpl2&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;ModelPersistenceDefaultImpl2&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelPersistenceDefaultImpl2.h" line="9"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;ModelCheckerDefaultImpl1&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;ModelCheckerDefaultImpl1&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelCheckerDefaultImpl1.h" line="25"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;checkAll&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;checkAll&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelCheckerDefaultImpl1.h" line="28" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelChecker_if.h" line="28" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;checkConnected&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;checkConnected&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelCheckerDefaultImpl1.h" line="29" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelChecker_if.h" line="29" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;checkSymbols&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;checkSymbols&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelCheckerDefaultImpl1.h" line="30" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelChecker_if.h" line="30" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;checkActivationCode&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;checkActivationCode&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelCheckerDefaultImpl1.h" line="31" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelChecker_if.h" line="31" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;checkLimits&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;checkLimits&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelCheckerDefaultImpl1.h" line="32" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelChecker_if.h" line="32" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;checkOrphaned&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;checkOrphaned&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelCheckerDefaultImpl1.h" line="33" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelChecker_if.h" line="33" info="Virtual function in base class"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;genesyspp_parser&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;genesyspp_parser&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../GenesysParser.h" line="1207"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;value_type&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;value_type&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../GenesysParser.h" line="256"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &amp;#039;by_kind&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Struct &amp;#039;by_kind&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../GenesysParser.h" line="1141"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &amp;#039;by_state&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Struct &amp;#039;by_state&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../GenesysParser.h" line="2711"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &amp;#039;YYSTYPE&amp;#039; since the value of &amp;#039;YYSTYPE&amp;#039; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &amp;#039;YYSTYPE&amp;#039; since the value of &amp;#039;YYSTYPE&amp;#039; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." sinceDate="25/10/2022">
            <location file="../GenesysParser.h" line="235"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &amp;#039;YYSTYPE;__GNUC__&amp;#039; since the value of &amp;#039;YYSTYPE&amp;#039; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &amp;#039;YYSTYPE;__GNUC__&amp;#039; since the value of &amp;#039;YYSTYPE&amp;#039; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." sinceDate="25/10/2022">
            <location file="../GenesysParser.h" line="235"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;StatisticsDefaultImpl1&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;StatisticsDefaultImpl1&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/StatisticsDefaultImpl1.h" line="24"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;getCollector&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;getCollector&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/StatisticsDefaultImpl1.h" line="27" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/Statistics_if.h" line="25" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;setCollector&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;setCollector&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/StatisticsDefaultImpl1.h" line="28" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/Statistics_if.h" line="26" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;numElements&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;numElements&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/StatisticsDefaultImpl1.h" line="30" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/Statistics_if.h" line="28" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;min&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;min&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/StatisticsDefaultImpl1.h" line="31" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/Statistics_if.h" line="29" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;max&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;max&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/StatisticsDefaultImpl1.h" line="32" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/Statistics_if.h" line="30" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;average&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;average&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/StatisticsDefaultImpl1.h" line="33" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/Statistics_if.h" line="31" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;variance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;variance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/StatisticsDefaultImpl1.h" line="34" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/Statistics_if.h" line="32" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;stddeviation&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;stddeviation&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/StatisticsDefaultImpl1.h" line="35" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/Statistics_if.h" line="33" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;variationCoef&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;variationCoef&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/StatisticsDefaultImpl1.h" line="36" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/Statistics_if.h" line="34" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;halfWidthConfidenceInterval&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;halfWidthConfidenceInterval&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/StatisticsDefaultImpl1.h" line="37" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/Statistics_if.h" line="35" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;newSampleSize&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;newSampleSize&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/StatisticsDefaultImpl1.h" line="38" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/Statistics_if.h" line="36" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;getConfidenceLevel&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;getConfidenceLevel&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/StatisticsDefaultImpl1.h" line="39" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/Statistics_if.h" line="37" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;setConfidenceLevel&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;setConfidenceLevel&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/StatisticsDefaultImpl1.h" line="40" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/Statistics_if.h" line="38" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;showReplicationStatistics&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;showReplicationStatistics&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/SimulationReporterDefaultImpl1.h" line="31" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/SimulationReporter_if.h" line="22" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;showSimulationStatistics&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;showSimulationStatistics&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/SimulationReporterDefaultImpl1.h" line="32" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/SimulationReporter_if.h" line="23" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;showSimulationResponses&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;showSimulationResponses&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/SimulationReporterDefaultImpl1.h" line="33" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/SimulationReporter_if.h" line="24" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;showSimulationControls&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;showSimulationControls&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/SimulationReporterDefaultImpl1.h" line="34" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/SimulationReporter_if.h" line="25" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/PluginConnectorDummyImpl1.h" line="25" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/PluginConnector_if.h" line="24" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;connect&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;connect&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/PluginConnectorDummyImpl1.h" line="26" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/PluginConnector_if.h" line="25" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;disconnect&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;disconnect&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/PluginConnectorDummyImpl1.h" line="27" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/PluginConnector_if.h" line="26" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;disconnect&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;disconnect&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/PluginConnectorDummyImpl1.h" line="28" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/PluginConnector_if.h" line="27" info="Virtual function in base class"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;dynamicLibraryFilename&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;dynamicLibraryFilename&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/PluginConnectorDummyImpl1.h" line="25"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;dynamicLibraryFilename&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;dynamicLibraryFilename&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/PluginConnectorDummyImpl1.h" line="26"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;dynamicLibraryFilename&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;dynamicLibraryFilename&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/PluginConnectorDummyImpl1.h" line="27"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;parse&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;parse&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ParserDefaultImpl2.h" line="30" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/Parser_if.h" line="22" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;parse&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;parse&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ParserDefaultImpl2.h" line="31" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/Parser_if.h" line="23" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;getErrorMessage&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;getErrorMessage&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ParserDefaultImpl2.h" line="32" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/Parser_if.h" line="24" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;setSampler&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;setSampler&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ParserDefaultImpl2.h" line="33" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/Parser_if.h" line="25" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;sampler&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;sampler&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ParserDefaultImpl2.h" line="34" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/Parser_if.h" line="26" info="Virtual function in base class"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;expression&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;expression&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ParserDefaultImpl2.h" line="30"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;expression&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;expression&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ParserDefaultImpl2.h" line="31"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;clear&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;clear&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/CollectorDatafileDefaultImpl1.h" line="26" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/Collector_if.h" line="41" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;addValue&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;addValue&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/CollectorDatafileDefaultImpl1.h" line="27" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/Collector_if.h" line="42" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;getLastValue&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;getLastValue&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/CollectorDatafileDefaultImpl1.h" line="28" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/Collector_if.h" line="43" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;numElements&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;numElements&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/CollectorDatafileDefaultImpl1.h" line="29" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/Collector_if.h" line="44" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;getValue&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;getValue&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/CollectorDatafileDefaultImpl1.h" line="31" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/CollectorDatafile_if.h" line="24" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;getNextValue&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;getNextValue&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/CollectorDatafileDefaultImpl1.h" line="32" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/CollectorDatafile_if.h" line="26" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;seekFirstValue&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;seekFirstValue&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/CollectorDatafileDefaultImpl1.h" line="33" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/CollectorDatafile_if.h" line="25" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;getDataFilename&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;getDataFilename&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/CollectorDatafileDefaultImpl1.h" line="34" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/CollectorDatafile_if.h" line="27" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;setDataFilename&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;setDataFilename&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/CollectorDatafileDefaultImpl1.h" line="35" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/CollectorDatafile_if.h" line="28" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;setAddValueHandler&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;setAddValueHandler&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/CollectorDatafileDefaultImpl1.h" line="37" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/Collector_if.h" line="46" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;setClearHandler&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;setClearHandler&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/CollectorDatafileDefaultImpl1.h" line="38" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/Collector_if.h" line="47" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;clear&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;clear&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/CollectorDefaultImpl1.h" line="25" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/Collector_if.h" line="41" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;addValue&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;addValue&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/CollectorDefaultImpl1.h" line="26" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/Collector_if.h" line="42" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;getLastValue&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;getLastValue&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/CollectorDefaultImpl1.h" line="27" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/Collector_if.h" line="43" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;numElements&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;numElements&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/CollectorDefaultImpl1.h" line="28" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/Collector_if.h" line="44" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;setAddValueHandler&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;setAddValueHandler&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/CollectorDefaultImpl1.h" line="30" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/Collector_if.h" line="46" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;setClearHandler&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;setClearHandler&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/CollectorDefaultImpl1.h" line="31" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/Collector_if.h" line="47" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;getCollector&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;getCollector&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/StatisticsDataFileDefaultImpl.h" line="29" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/Statistics_if.h" line="25" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;setCollector&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;setCollector&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/StatisticsDataFileDefaultImpl.h" line="30" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/Statistics_if.h" line="26" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;numElements&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;numElements&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/StatisticsDataFileDefaultImpl.h" line="32" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/Statistics_if.h" line="28" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;min&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;min&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/StatisticsDataFileDefaultImpl.h" line="33" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/Statistics_if.h" line="29" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;max&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;max&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/StatisticsDataFileDefaultImpl.h" line="34" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/Statistics_if.h" line="30" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;average&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;average&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/StatisticsDataFileDefaultImpl.h" line="35" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/Statistics_if.h" line="31" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;variance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;variance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/StatisticsDataFileDefaultImpl.h" line="36" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/Statistics_if.h" line="32" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;stddeviation&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;stddeviation&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/StatisticsDataFileDefaultImpl.h" line="37" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/Statistics_if.h" line="33" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;variationCoef&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;variationCoef&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/StatisticsDataFileDefaultImpl.h" line="38" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/Statistics_if.h" line="34" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;halfWidthConfidenceInterval&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;halfWidthConfidenceInterval&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/StatisticsDataFileDefaultImpl.h" line="39" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/Statistics_if.h" line="35" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;newSampleSize&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;newSampleSize&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/StatisticsDataFileDefaultImpl.h" line="40" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/Statistics_if.h" line="36" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;getConfidenceLevel&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;getConfidenceLevel&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/StatisticsDataFileDefaultImpl.h" line="41" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/Statistics_if.h" line="37" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;setConfidenceLevel&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;setConfidenceLevel&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/StatisticsDataFileDefaultImpl.h" line="42" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/Statistics_if.h" line="38" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;mode&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;mode&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/StatisticsDataFileDefaultImpl.h" line="44" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/StatisticsDataFile_if.h" line="25" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;mediane&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;mediane&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/StatisticsDataFileDefaultImpl.h" line="45" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/StatisticsDataFile_if.h" line="26" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;quartil&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;quartil&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/StatisticsDataFileDefaultImpl.h" line="46" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/StatisticsDataFile_if.h" line="27" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;decil&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;decil&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/StatisticsDataFileDefaultImpl.h" line="47" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/StatisticsDataFile_if.h" line="28" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;centil&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;centil&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/StatisticsDataFileDefaultImpl.h" line="48" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/StatisticsDataFile_if.h" line="29" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;setHistogramNumClasses&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;setHistogramNumClasses&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/StatisticsDataFileDefaultImpl.h" line="49" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/StatisticsDataFile_if.h" line="30" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;histogramNumClasses&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;histogramNumClasses&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/StatisticsDataFileDefaultImpl.h" line="50" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/StatisticsDataFile_if.h" line="31" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;histogramClassLowerLimit&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;histogramClassLowerLimit&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/StatisticsDataFileDefaultImpl.h" line="51" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/StatisticsDataFile_if.h" line="32" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;histogramClassFrequency&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;histogramClassFrequency&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/StatisticsDataFileDefaultImpl.h" line="52" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/StatisticsDataFile_if.h" line="33" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;random&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;random&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/SamplerDefaultImpl1.h" line="36" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/Sampler_if.h" line="30" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;sampleBeta&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;sampleBeta&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/SamplerDefaultImpl1.h" line="38" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/Sampler_if.h" line="32" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;sampleBeta&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;sampleBeta&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/SamplerDefaultImpl1.h" line="39" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/Sampler_if.h" line="33" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;sampleErlang&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;sampleErlang&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/SamplerDefaultImpl1.h" line="40" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/Sampler_if.h" line="34" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;sampleExponential&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;sampleExponential&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/SamplerDefaultImpl1.h" line="41" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/Sampler_if.h" line="35" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;sampleGamma&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;sampleGamma&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/SamplerDefaultImpl1.h" line="43" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/Sampler_if.h" line="37" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;sampleGumbell&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;sampleGumbell&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/SamplerDefaultImpl1.h" line="44" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/Sampler_if.h" line="38" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;sampleLogNormal&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;sampleLogNormal&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/SamplerDefaultImpl1.h" line="45" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/Sampler_if.h" line="39" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;sampleNormal&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;sampleNormal&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/SamplerDefaultImpl1.h" line="46" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/Sampler_if.h" line="40" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;sampleTriangular&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;sampleTriangular&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/SamplerDefaultImpl1.h" line="47" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/Sampler_if.h" line="41" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;sampleUniform&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;sampleUniform&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/SamplerDefaultImpl1.h" line="48" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/Sampler_if.h" line="42" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;sampleWeibull&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;sampleWeibull&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/SamplerDefaultImpl1.h" line="49" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/Sampler_if.h" line="43" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;sampleBinomial&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;sampleBinomial&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/SamplerDefaultImpl1.h" line="52" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/Sampler_if.h" line="46" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;sampleBernoulli&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;sampleBernoulli&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/SamplerDefaultImpl1.h" line="53" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/Sampler_if.h" line="47" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;sampleDiscrete&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;sampleDiscrete&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/SamplerDefaultImpl1.h" line="54" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/Sampler_if.h" line="48" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;sampleDiscrete&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;sampleDiscrete&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/SamplerDefaultImpl1.h" line="55" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/Sampler_if.h" line="49" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;sampleGeometric&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;sampleGeometric&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/SamplerDefaultImpl1.h" line="56" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/Sampler_if.h" line="50" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;setRNGparameters&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;setRNGparameters&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/SamplerDefaultImpl1.h" line="60" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/Sampler_if.h" line="52" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;getRNGparameters&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;getRNGparameters&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/Model.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/SamplerDefaultImpl1.h" line="61" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/Sampler_if.h" line="53" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/ModelCheckerDefaultImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/SinkModelComponent.h" line="31" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="54" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/ModelCheckerDefaultImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/SinkModelComponent.h" line="32" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="53" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/ModelCheckerDefaultImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/SinkModelComponent.h" line="35" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="90" info="Virtual function in base class"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;nextComp&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;nextComp&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../source/kernel/simulator/ModelCheckerDefaultImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelCheckerDefaultImpl1.cpp" line="69"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;plugin&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;plugin&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../source/kernel/simulator/ModelCheckerDefaultImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelCheckerDefaultImpl1.cpp" line="93"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;value&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;value&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../source/kernel/simulator/ModelCheckerDefaultImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelCheckerDefaultImpl1.cpp" line="199"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;limit&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;limit&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../source/kernel/simulator/ModelCheckerDefaultImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelCheckerDefaultImpl1.cpp" line="199"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;checking&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;checking&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/ModelCheckerDefaultImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelCheckerDefaultImpl1.cpp" line="45"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="../../source/kernel/simulator/ModelCheckerDefaultImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelCheckerDefaultImpl1.cpp" line="70"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="../../source/kernel/simulator/ModelCheckerDefaultImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelCheckerDefaultImpl1.cpp" line="99"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="../../source/kernel/simulator/ModelCheckerDefaultImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelCheckerDefaultImpl1.cpp" line="112"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="../../source/kernel/simulator/ModelCheckerDefaultImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelCheckerDefaultImpl1.cpp" line="136"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="../../source/kernel/simulator/ModelCheckerDefaultImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelCheckerDefaultImpl1.cpp" line="152"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="../../source/kernel/simulator/ModelCheckerDefaultImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelCheckerDefaultImpl1.cpp" line="155"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;checkActivationCode&amp;#039; is never used." verbose="The function &amp;#039;checkActivationCode&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelCheckerDefaultImpl1.cpp" line="184"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;i&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;i&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../source/kernel/simulator/ModelComponent.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelComponent.cpp" line="129"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;componentTypename&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;componentTypename&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/ModelComponent.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelComponent.cpp" line="19"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;name&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;name&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/ModelComponent.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelComponent.cpp" line="19"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;description&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;description&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/ModelComponent.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelComponent.cpp" line="72"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;hasBreakpointAt&amp;#039; is never used." verbose="The function &amp;#039;hasBreakpointAt&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelComponent.cpp" line="106"/>
        </error>
        <error id="identicalConditionAfterEarlyExit" severity="warning" msg="Identical condition &amp;#039;data==nullptr&amp;#039;, second condition is always false" verbose="Identical condition &amp;#039;data==nullptr&amp;#039;, second condition is always false" cwe="398" file0="../../source/kernel/simulator/ModelDataDefinition.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelDataDefinition.cpp" line="90" info="Testing identical condition &amp;#039;data==nullptr&amp;#039;"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.cpp" line="87" info="If condition &amp;#039;data==nullptr&amp;#039; is true, the function will return/exit"/>
        </error>
        <error id="identicalConditionAfterEarlyExit" severity="warning" msg="Identical condition &amp;#039;data==nullptr&amp;#039;, second condition is always false" verbose="Identical condition &amp;#039;data==nullptr&amp;#039;, second condition is always false" cwe="398" file0="../../source/kernel/simulator/ModelDataDefinition.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelDataDefinition.cpp" line="136" info="Testing identical condition &amp;#039;data==nullptr&amp;#039;"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.cpp" line="133" info="If condition &amp;#039;data==nullptr&amp;#039; is true, the function will return/exit"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;key&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;key&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/ModelDataDefinition.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelDataDefinition.cpp" line="106"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;key&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;key&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/ModelDataDefinition.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelDataDefinition.cpp" line="152"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;name&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;name&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/ModelDataDefinition.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelDataDefinition.cpp" line="216"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;name&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;name&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/ModelDataDefinition.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelDataDefinition.cpp" line="314"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="../../source/kernel/simulator/ModelDataDefinition.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelDataDefinition.cpp" line="79"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="../../source/kernel/simulator/ModelDataDefinition.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelDataDefinition.cpp" line="162"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="../../source/kernel/simulator/ModelDataDefinition.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelDataDefinition.cpp" line="208"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;_attachedDataRemove&amp;#039; is never used." verbose="The function &amp;#039;_attachedDataRemove&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelDataDefinition.cpp" line="152"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;_getParserChangesInformation&amp;#039; is never used." verbose="The function &amp;#039;_getParserChangesInformation&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelDataDefinition.cpp" line="194"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;_internalDataRemove&amp;#039; is never used." verbose="The function &amp;#039;_internalDataRemove&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelDataDefinition.cpp" line="106"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;getProperties&amp;#039; is never used." verbose="The function &amp;#039;getProperties&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelDataDefinition.cpp" line="364"/>
        </error>
        <error id="noCopyConstructor" severity="warning" msg="Class &amp;#039;ModelDataManager&amp;#039; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &amp;#039;ModelDataManager&amp;#039; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="../../source/kernel/simulator/ModelDataManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelDataManager.cpp" line="22"/>
        </error>
        <error id="noOperatorEq" severity="warning" msg="Class &amp;#039;ModelDataManager&amp;#039; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &amp;#039;ModelDataManager&amp;#039; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="../../source/kernel/simulator/ModelDataManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelDataManager.cpp" line="22"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;datadefinitionTypename&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;datadefinitionTypename&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/ModelDataManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelDataManager.cpp" line="30"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;datadefinitionTypename&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;datadefinitionTypename&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/ModelDataManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelDataManager.cpp" line="61"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;datadefinitionTypename&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;datadefinitionTypename&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/ModelDataManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelDataManager.cpp" line="67"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;elementName&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;elementName&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/ModelDataManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelDataManager.cpp" line="67"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;expressionName&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;expressionName&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/ModelDataManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelDataManager.cpp" line="67"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;datadefinitionTypename&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;datadefinitionTypename&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/ModelDataManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelDataManager.cpp" line="79"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;expressionName&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;expressionName&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/ModelDataManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelDataManager.cpp" line="79"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;datadefinitionTypename&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;datadefinitionTypename&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/ModelDataManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelDataManager.cpp" line="95"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;datadefinitionTypename&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;datadefinitionTypename&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/ModelDataManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelDataManager.cpp" line="169"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;datadefinitionTypename&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;datadefinitionTypename&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/ModelDataManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelDataManager.cpp" line="179"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;name&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;name&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/ModelDataManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelDataManager.cpp" line="179"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;datadefinitionTypename&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;datadefinitionTypename&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/ModelDataManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelDataManager.cpp" line="200"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;name&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;name&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/ModelDataManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelDataManager.cpp" line="200"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::any_of algorithm instead of a raw loop." verbose="Consider using std::any_of algorithm instead of a raw loop." cwe="398" file0="../../source/kernel/simulator/ModelDataManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelDataManager.cpp" line="141"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="../../source/kernel/simulator/ModelDataManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelDataManager.cpp" line="102"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="../../source/kernel/simulator/ModelDataManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelDataManager.cpp" line="115"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="../../source/kernel/simulator/ModelDataManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelDataManager.cpp" line="121"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="../../source/kernel/simulator/ModelDataManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelDataManager.cpp" line="171"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="../../source/kernel/simulator/ModelDataManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelDataManager.cpp" line="182"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="../../source/kernel/simulator/ModelDataManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelDataManager.cpp" line="194"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="../../source/kernel/simulator/ModelDataManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelDataManager.cpp" line="202"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;getParentModel&amp;#039; is never used." verbose="The function &amp;#039;getParentModel&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelDataManager.cpp" line="131"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;setHasChanged&amp;#039; is never used." verbose="The function &amp;#039;setHasChanged&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelDataManager.cpp" line="150"/>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &amp;#039;_name&amp;#039; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&amp;#039;t explicitly write them to the initialization list. You could avoid assigning &amp;#039;_name&amp;#039; a value by passing the value to the constructor in the initialization list." cwe="398" file0="../../source/kernel/simulator/ModelInfo.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelInfo.cpp" line="20"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;_name&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;_name&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/ModelInfo.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelInfo.cpp" line="30"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;_analystName&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;_analystName&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/ModelInfo.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelInfo.cpp" line="39"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;_description&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;_description&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/ModelInfo.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelInfo.cpp" line="48"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;_projectTitle&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;_projectTitle&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/ModelInfo.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelInfo.cpp" line="57"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;_version&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;_version&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/ModelInfo.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelInfo.cpp" line="66"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;setAnalystName&amp;#039; is never used." verbose="The function &amp;#039;setAnalystName&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelInfo.cpp" line="39"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;setProjectTitle&amp;#039; is never used." verbose="The function &amp;#039;setProjectTitle&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelInfo.cpp" line="57"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;filename&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;filename&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/ModelManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelManager.cpp" line="55"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;filename&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;filename&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/ModelManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelManager.cpp" line="61"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;modelSpecification&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;modelSpecification&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/ModelManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelManager.cpp" line="74"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;createFromLanguage&amp;#039; is never used." verbose="The function &amp;#039;createFromLanguage&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelManager.cpp" line="74"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;newModel&amp;#039; is never used." verbose="The function &amp;#039;newModel&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelManager.cpp" line="30"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;saveModel&amp;#039; is never used." verbose="The function &amp;#039;saveModel&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelManager.cpp" line="55"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;setCurrent&amp;#039; is never used." verbose="The function &amp;#039;setCurrent&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelManager.cpp" line="95"/>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &amp;#039;type&amp;#039; shadows outer variable" verbose="Local variable &amp;#039;type&amp;#039; shadows outer variable" cwe="398" file0="../../source/kernel/simulator/ModelPersistenceDefaultImpl2.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelPersistenceDefaultImpl2.cpp" line="80" info="Shadow variable"/>
            <location file="../../source/kernel/simulator/ModelPersistenceDefaultImpl2.cpp" line="70" info="Shadowed declaration"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;name&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;name&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/ModelPersistenceDefaultImpl2.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/GenSerializer.h" line="18"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;type&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;type&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/ModelPersistenceDefaultImpl2.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/GenSerializer.h" line="18"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;name&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;name&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/ModelPersistenceDefaultImpl2.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/XmlSerializer.h" line="18"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;type&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;type&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/ModelPersistenceDefaultImpl2.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/XmlSerializer.h" line="18"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;name&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;name&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/ModelPersistenceDefaultImpl2.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/JsonSerializer.h" line="18"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;type&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;type&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/ModelPersistenceDefaultImpl2.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/JsonSerializer.h" line="18"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;name&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;name&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/ModelPersistenceDefaultImpl2.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/CppSerializer.h" line="18"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;type&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;type&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/ModelPersistenceDefaultImpl2.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/CppSerializer.h" line="18"/>
        </error>
        <error id="noCopyConstructor" severity="warning" msg="Class &amp;#039;ModelSimulation&amp;#039; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &amp;#039;ModelSimulation&amp;#039; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="../../source/kernel/simulator/ModelSimulation.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelSimulation.cpp" line="35"/>
        </error>
        <error id="noOperatorEq" severity="warning" msg="Class &amp;#039;ModelSimulation&amp;#039; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &amp;#039;ModelSimulation&amp;#039; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="../../source/kernel/simulator/ModelSimulation.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelSimulation.cpp" line="35"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;replicationEnded&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;replicationEnded&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../source/kernel/simulator/ModelSimulation.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelSimulation.cpp" line="108"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;cstatModel&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;cstatModel&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../source/kernel/simulator/ModelSimulation.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelSimulation.cpp" line="181"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;counterModel&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;counterModel&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../source/kernel/simulator/ModelSimulation.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelSimulation.cpp" line="210"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;cstat&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;cstat&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../source/kernel/simulator/ModelSimulation.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelSimulation.cpp" line="276"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;counter&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;counter&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../source/kernel/simulator/ModelSimulation.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelSimulation.cpp" line="286"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;cstat&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;cstat&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../source/kernel/simulator/ModelSimulation.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelSimulation.cpp" line="340"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;counter&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;counter&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../source/kernel/simulator/ModelSimulation.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelSimulation.cpp" line="346"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;time&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;time&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../source/kernel/simulator/ModelSimulation.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelSimulation.cpp" line="447"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;_terminatingCondition&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;_terminatingCondition&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/ModelSimulation.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelSimulation.cpp" line="625"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::accumulate algorithm instead of a raw loop." verbose="Consider using std::accumulate algorithm instead of a raw loop." cwe="398" file0="../../source/kernel/simulator/ModelSimulation.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelSimulation.cpp" line="248"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::accumulate algorithm instead of a raw loop." verbose="Consider using std::accumulate algorithm instead of a raw loop." cwe="398" file0="../../source/kernel/simulator/ModelSimulation.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelSimulation.cpp" line="254"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;UtilTypeOfCounter&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;UtilTypeOfCounter&amp;#039; is assigned a value that is never used." cwe="563" file0="../../source/kernel/simulator/ModelSimulation.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelSimulation.cpp" line="179"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="../../source/kernel/simulator/ModelSimulation.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelSimulation.cpp" line="316"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="../../source/kernel/simulator/ModelSimulation.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelSimulation.cpp" line="342"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="../../source/kernel/simulator/ModelSimulation.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelSimulation.cpp" line="348"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="../../source/kernel/simulator/ModelSimulation.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelSimulation.cpp" line="448"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;getBreakpointsOnEntity&amp;#039; is never used." verbose="The function &amp;#039;getBreakpointsOnEntity&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelSimulation.cpp" line="568"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;getBreakpointsOnTime&amp;#039; is never used." verbose="The function &amp;#039;getBreakpointsOnTime&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelSimulation.cpp" line="564"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;getCurrentEvent&amp;#039; is never used." verbose="The function &amp;#039;getCurrentEvent&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelSimulation.cpp" line="673"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;getReporter&amp;#039; is never used." verbose="The function &amp;#039;getReporter&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelSimulation.cpp" line="544"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;getTerminatingCondition&amp;#039; is never used." verbose="The function &amp;#039;getTerminatingCondition&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelSimulation.cpp" line="630"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;getWarmUpPeriodTimeUnit&amp;#039; is never used." verbose="The function &amp;#039;getWarmUpPeriodTimeUnit&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelSimulation.cpp" line="621"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;isInitializeStatistics&amp;#039; is never used." verbose="The function &amp;#039;isInitializeStatistics&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelSimulation.cpp" line="492"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;isInitializeSystem&amp;#039; is never used." verbose="The function &amp;#039;isInitializeSystem&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelSimulation.cpp" line="500"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;isPauseOnEvent&amp;#039; is never used." verbose="The function &amp;#039;isPauseOnEvent&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelSimulation.cpp" line="484"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;isPauseOnReplication&amp;#039; is never used." verbose="The function &amp;#039;isPauseOnReplication&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelSimulation.cpp" line="516"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;isPaused&amp;#039; is never used." verbose="The function &amp;#039;isPaused&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelSimulation.cpp" line="576"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;isShowReportsAfterReplication&amp;#039; is never used." verbose="The function &amp;#039;isShowReportsAfterReplication&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelSimulation.cpp" line="552"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;isShowReportsAfterSimulation&amp;#039; is never used." verbose="The function &amp;#039;isShowReportsAfterSimulation&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelSimulation.cpp" line="560"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;isStepByStep&amp;#039; is never used." verbose="The function &amp;#039;isStepByStep&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelSimulation.cpp" line="508"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;pause&amp;#039; is never used." verbose="The function &amp;#039;pause&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelSimulation.cpp" line="465"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;setInitializeStatistics&amp;#039; is never used." verbose="The function &amp;#039;setInitializeStatistics&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelSimulation.cpp" line="488"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;setInitializeSystem&amp;#039; is never used." verbose="The function &amp;#039;setInitializeSystem&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelSimulation.cpp" line="496"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;setPauseOnEvent&amp;#039; is never used." verbose="The function &amp;#039;setPauseOnEvent&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelSimulation.cpp" line="480"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;setPauseOnReplication&amp;#039; is never used." verbose="The function &amp;#039;setPauseOnReplication&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelSimulation.cpp" line="512"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;setReplicationLengthTimeUnit&amp;#039; is never used." verbose="The function &amp;#039;setReplicationLengthTimeUnit&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelSimulation.cpp" line="598"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;setReplicationReportBaseTimeUnit&amp;#039; is never used." verbose="The function &amp;#039;setReplicationReportBaseTimeUnit&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelSimulation.cpp" line="693"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;setReporter&amp;#039; is never used." verbose="The function &amp;#039;setReporter&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelSimulation.cpp" line="540"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;setShowReportsAfterReplication&amp;#039; is never used." verbose="The function &amp;#039;setShowReportsAfterReplication&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelSimulation.cpp" line="548"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;setShowReportsAfterSimulation&amp;#039; is never used." verbose="The function &amp;#039;setShowReportsAfterSimulation&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelSimulation.cpp" line="556"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;setShowSimulationControlsInReport&amp;#039; is never used." verbose="The function &amp;#039;setShowSimulationControlsInReport&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelSimulation.cpp" line="685"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;setShowSimulationResposesInReport&amp;#039; is never used." verbose="The function &amp;#039;setShowSimulationResposesInReport&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelSimulation.cpp" line="677"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;setStepByStep&amp;#039; is never used." verbose="The function &amp;#039;setStepByStep&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelSimulation.cpp" line="504"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;setTerminatingCondition&amp;#039; is never used." verbose="The function &amp;#039;setTerminatingCondition&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelSimulation.cpp" line="625"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;setWarmUpPeriodTimeUnit&amp;#039; is never used." verbose="The function &amp;#039;setWarmUpPeriodTimeUnit&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelSimulation.cpp" line="616"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;step&amp;#039; is never used." verbose="The function &amp;#039;step&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ModelSimulation.cpp" line="469"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="../../source/kernel/simulator/OnEventManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/OnEventManager.cpp" line="79"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="../../source/kernel/simulator/OnEventManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/OnEventManager.cpp" line="85"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;addOnAfterProcessEventHandler&amp;#039; is never used." verbose="The function &amp;#039;addOnAfterProcessEventHandler&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/OnEventManager.cpp" line="38"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;addOnBreakpointHandler&amp;#039; is never used." verbose="The function &amp;#039;addOnBreakpointHandler&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/OnEventManager.cpp" line="74"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;addOnEntityCreateHandler&amp;#039; is never used." verbose="The function &amp;#039;addOnEntityCreateHandler&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/OnEventManager.cpp" line="42"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;addOnEntityMoveHandler&amp;#039; is never used." verbose="The function &amp;#039;addOnEntityMoveHandler&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/OnEventManager.cpp" line="46"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;addOnEntityRemoveHandler&amp;#039; is never used." verbose="The function &amp;#039;addOnEntityRemoveHandler&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/OnEventManager.cpp" line="50"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;addOnProcessEventHandler&amp;#039; is never used." verbose="The function &amp;#039;addOnProcessEventHandler&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/OnEventManager.cpp" line="34"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;addOnReplicationEndHandler&amp;#039; is never used." verbose="The function &amp;#039;addOnReplicationEndHandler&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/OnEventManager.cpp" line="54"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;addOnReplicationStartHandler&amp;#039; is never used." verbose="The function &amp;#039;addOnReplicationStartHandler&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/OnEventManager.cpp" line="26"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;addOnReplicationStepHandler&amp;#039; is never used." verbose="The function &amp;#039;addOnReplicationStepHandler&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/OnEventManager.cpp" line="30"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;addOnSimulationEndHandler&amp;#039; is never used." verbose="The function &amp;#039;addOnSimulationEndHandler&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/OnEventManager.cpp" line="70"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;addOnSimulationPausedHandler&amp;#039; is never used." verbose="The function &amp;#039;addOnSimulationPausedHandler&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/OnEventManager.cpp" line="62"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;addOnSimulationResumeHandler&amp;#039; is never used." verbose="The function &amp;#039;addOnSimulationResumeHandler&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/OnEventManager.cpp" line="66"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;addOnSimulationStartHandler&amp;#039; is never used." verbose="The function &amp;#039;addOnSimulationStartHandler&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/OnEventManager.cpp" line="58"/>
        </error>
        <error id="uselessAssignmentPtrArg" severity="warning" msg="Assignment of function parameter has no effect outside the function. Did you forget dereferencing it?" verbose="Assignment of function parameter has no effect outside the function. Did you forget dereferencing it?" cwe="398" file0="../../source/kernel/simulator/ParserDefaultImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ParserDefaultImpl1.cpp" line="41"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;expression&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;expression&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/ParserDefaultImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ParserDefaultImpl1.cpp" line="22"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;expression&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;expression&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/ParserDefaultImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ParserDefaultImpl1.cpp" line="32"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;errorMessage&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;errorMessage&amp;#039; is assigned a value that is never used." cwe="563" file0="../../source/kernel/simulator/ParserDefaultImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ParserDefaultImpl1.cpp" line="41"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;ParserDefaultImpl1&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;ParserDefaultImpl1&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/ParserDefaultImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ParserDefaultImpl1.h" line="23"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;parse&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;parse&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/ParserDefaultImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ParserDefaultImpl1.h" line="26" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/Parser_if.h" line="22" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;parse&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;parse&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/ParserDefaultImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ParserDefaultImpl1.h" line="27" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/Parser_if.h" line="23" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;getErrorMessage&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;getErrorMessage&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/ParserDefaultImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ParserDefaultImpl1.h" line="28" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/Parser_if.h" line="24" info="Virtual function in base class"/>
        </error>
        <error id="catchExceptionByValue" severity="style" msg="Exception should be caught by reference." verbose="The exception is caught by value. It could be caught as a (const) reference which is usually recommended in C++." cwe="398" file0="../../source/kernel/simulator/ParserDefaultImpl2.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ParserDefaultImpl2.cpp" line="32"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;expression&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;expression&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/ParserDefaultImpl2.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ParserDefaultImpl2.cpp" line="23"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;expression&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;expression&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/ParserDefaultImpl2.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ParserDefaultImpl2.cpp" line="43"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;defaultValue&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;defaultValue&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/Persistence.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Persistence.cpp" line="74"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::accumulate algorithm instead of a raw loop." verbose="Consider using std::accumulate algorithm instead of a raw loop." cwe="398" file0="../../source/kernel/simulator/Plugin.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Plugin.cpp" line="61"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::accumulate algorithm instead of a raw loop." verbose="Consider using std::accumulate algorithm instead of a raw loop." cwe="398" file0="../../source/kernel/simulator/Plugin.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Plugin.cpp" line="76"/>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &amp;#039;WaitingResource::_quantity&amp;#039; is not initialized in the constructor." verbose="Member variable &amp;#039;WaitingResource::_quantity&amp;#039; is not initialized in the constructor." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Seize.h" line="31"/>
        </error>
        <error id="duplInheritedMember" severity="warning" msg="The class &amp;#039;Seize&amp;#039; defines member variable with name &amp;#039;DEFAULT&amp;#039; also defined in its parent class &amp;#039;ModelComponent&amp;#039;." verbose="The class &amp;#039;Seize&amp;#039; defines member variable with name &amp;#039;DEFAULT&amp;#039; also defined in its parent class &amp;#039;ModelComponent&amp;#039;." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Seize.h" line="166" info="Derived variable &amp;#039;Seize::DEFAULT&amp;#039;"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="68" info="Parent variable &amp;#039;ModelComponent::DEFAULT&amp;#039;"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;Seize&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;Seize&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Seize.h" line="124"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Seize.h" line="36" info="Function in derived class"/>
            <location file="../../source/plugins/data/Queue.h" line="36" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Seize.h" line="127" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="39" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Seize.h" line="150" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="56" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Seize.h" line="151" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="54" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_initBetweenReplications&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_initBetweenReplications&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Seize.h" line="152" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="93" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Seize.h" line="153" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="53" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Seize.h" line="154" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="90" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_createInternalAndAttachedData&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_createInternalAndAttachedData&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Seize.h" line="155" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="95" info="Virtual function in base class"/>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &amp;#039;_name&amp;#039; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&amp;#039;t explicitly write them to the initialization list. You could avoid assigning &amp;#039;_name&amp;#039; a value by passing the value to the constructor in the initialization list." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/ExFiStatMac.h" line="23"/>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &amp;#039;_refinementName&amp;#039; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&amp;#039;t explicitly write them to the initialization list. You could avoid assigning &amp;#039;_refinementName&amp;#039; a value by passing the value to the constructor in the initialization list." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/ExFiStatMac.h" line="24"/>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &amp;#039;_parameterName&amp;#039; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&amp;#039;t explicitly write them to the initialization list. You could avoid assigning &amp;#039;_parameterName&amp;#039; a value by passing the value to the constructor in the initialization list." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/ExFiStatMac.h" line="82"/>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &amp;#039;_guardExpression&amp;#039; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&amp;#039;t explicitly write them to the initialization list. You could avoid assigning &amp;#039;_guardExpression&amp;#039; a value by passing the value to the constructor in the initialization list." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/ExFiStatMac.h" line="85"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;FSM_State&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;FSM_State&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/ExFiStatMac.h" line="22"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;ExFiStatMac&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;ExFiStatMac&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/ExFiStatMac.h" line="102"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/ExFiStatMac.h" line="109" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="66" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/ExFiStatMac.h" line="111" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="87" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/ExFiStatMac.h" line="112" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="88" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/ExFiStatMac.h" line="114" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="90" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_initBetweenReplications&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_initBetweenReplications&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/ExFiStatMac.h" line="115" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="93" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_createInternalAndAttachedData&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_createInternalAndAttachedData&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/ExFiStatMac.h" line="116" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="95" info="Virtual function in base class"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;name&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;name&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/ExFiStatMac.h" line="22"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;refinementName&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;refinementName&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/ExFiStatMac.h" line="22"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;_name&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;_name&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/ExFiStatMac.h" line="29"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;_refinementName&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;_refinementName&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/ExFiStatMac.h" line="53"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;parameterName&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;parameterName&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/ExFiStatMac.h" line="81"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;guardExpression&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;guardExpression&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/ExFiStatMac.h" line="81"/>
        </error>
        <error id="duplInheritedMember" severity="warning" msg="The class &amp;#039;Assign&amp;#039; defines member variable with name &amp;#039;DEFAULT&amp;#039; also defined in its parent class &amp;#039;ModelComponent&amp;#039;." verbose="The class &amp;#039;Assign&amp;#039; defines member variable with name &amp;#039;DEFAULT&amp;#039; also defined in its parent class &amp;#039;ModelComponent&amp;#039;." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Assign.h" line="85" info="Derived variable &amp;#039;Assign::DEFAULT&amp;#039;"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="68" info="Parent variable &amp;#039;ModelComponent::DEFAULT&amp;#039;"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;Assign&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;Assign&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Assign.h" line="63"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Assign.h" line="66" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="39" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Assign.h" line="74" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="56" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Assign.h" line="75" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="54" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Assign.h" line="76" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="53" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Assign.h" line="78" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="90" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_createInternalAndAttachedData&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_createInternalAndAttachedData&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Assign.h" line="79" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="95" info="Virtual function in base class"/>
        </error>
        <error id="duplInheritedMember" severity="warning" msg="The class &amp;#039;Batch&amp;#039; defines member variable with name &amp;#039;DEFAULT&amp;#039; also defined in its parent class &amp;#039;ModelComponent&amp;#039;." verbose="The class &amp;#039;Batch&amp;#039; defines member variable with name &amp;#039;DEFAULT&amp;#039; also defined in its parent class &amp;#039;ModelComponent&amp;#039;." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Batch.h" line="105" info="Derived variable &amp;#039;Batch::DEFAULT&amp;#039;"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="68" info="Parent variable &amp;#039;ModelComponent::DEFAULT&amp;#039;"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;Batch&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;Batch&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Batch.h" line="68"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Batch.h" line="71" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="39" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_createInternalAndAttachedData&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_createInternalAndAttachedData&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Batch.h" line="90" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="95" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Batch.h" line="91" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="90" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Batch.h" line="93" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="56" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Batch.h" line="94" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="54" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Batch.h" line="95" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="53" info="Virtual function in base class"/>
        </error>
        <error id="duplInheritedMember" severity="warning" msg="The class &amp;#039;Delay&amp;#039; defines member variable with name &amp;#039;DEFAULT&amp;#039; also defined in its parent class &amp;#039;ModelComponent&amp;#039;." verbose="The class &amp;#039;Delay&amp;#039; defines member variable with name &amp;#039;DEFAULT&amp;#039; also defined in its parent class &amp;#039;ModelComponent&amp;#039;." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Delay.h" line="70" info="Derived variable &amp;#039;Delay::DEFAULT&amp;#039;"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="68" info="Parent variable &amp;#039;ModelComponent::DEFAULT&amp;#039;"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;Delay&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;Delay&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Delay.h" line="43"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Delay.h" line="53" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="39" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Delay.h" line="59" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="56" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Delay.h" line="60" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="54" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Delay.h" line="61" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="53" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Delay.h" line="64" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="90" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_createInternalAndAttachedData&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_createInternalAndAttachedData&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Delay.h" line="65" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="95" info="Virtual function in base class"/>
        </error>
        <error id="duplInheritedMember" severity="warning" msg="The class &amp;#039;DummyComponent&amp;#039; defines member variable with name &amp;#039;DEFAULT&amp;#039; also defined in its parent class &amp;#039;ModelComponent&amp;#039;." verbose="The class &amp;#039;DummyComponent&amp;#039; defines member variable with name &amp;#039;DEFAULT&amp;#039; also defined in its parent class &amp;#039;ModelComponent&amp;#039;." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/DummyComponent.h" line="48" info="Derived variable &amp;#039;DummyComponent::DEFAULT&amp;#039;"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="68" info="Parent variable &amp;#039;ModelComponent::DEFAULT&amp;#039;"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;DummyComponent&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;DummyComponent&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/DummyComponent.h" line="25"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/DummyComponent.h" line="28" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="39" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/DummyComponent.h" line="34" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="54" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/DummyComponent.h" line="35" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="53" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/DummyComponent.h" line="36" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="56" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/DummyComponent.h" line="38" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="90" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_initBetweenReplications&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_initBetweenReplications&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/DummyComponent.h" line="39" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="93" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_createInternalAndAttachedData&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_createInternalAndAttachedData&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/DummyComponent.h" line="40" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="95" info="Virtual function in base class"/>
        </error>
        <error id="duplInheritedMember" severity="warning" msg="The class &amp;#039;Wait&amp;#039; defines member variable with name &amp;#039;DEFAULT&amp;#039; also defined in its parent class &amp;#039;ModelComponent&amp;#039;." verbose="The class &amp;#039;Wait&amp;#039; defines member variable with name &amp;#039;DEFAULT&amp;#039; also defined in its parent class &amp;#039;ModelComponent&amp;#039;." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Wait.h" line="115" info="Derived variable &amp;#039;Wait::DEFAULT&amp;#039;"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="68" info="Parent variable &amp;#039;ModelComponent::DEFAULT&amp;#039;"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;Wait&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;Wait&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Wait.h" line="85"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Wait.h" line="88" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="39" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Wait.h" line="100" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="54" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Wait.h" line="101" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="53" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Wait.h" line="102" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="56" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Wait.h" line="104" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="90" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_initBetweenReplications&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_initBetweenReplications&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Wait.h" line="105" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="93" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_createInternalAndAttachedData&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_createInternalAndAttachedData&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Wait.h" line="106" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="95" info="Virtual function in base class"/>
        </error>
        <error id="duplInheritedMember" severity="warning" msg="The class &amp;#039;Match&amp;#039; defines member variable with name &amp;#039;DEFAULT&amp;#039; also defined in its parent class &amp;#039;ModelComponent&amp;#039;." verbose="The class &amp;#039;Match&amp;#039; defines member variable with name &amp;#039;DEFAULT&amp;#039; also defined in its parent class &amp;#039;ModelComponent&amp;#039;." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Match.h" line="88" info="Derived variable &amp;#039;Match::DEFAULT&amp;#039;"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="68" info="Parent variable &amp;#039;ModelComponent::DEFAULT&amp;#039;"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;Match&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;Match&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Match.h" line="55"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Match.h" line="58" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="39" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Match.h" line="64" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="56" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Match.h" line="65" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="54" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Match.h" line="66" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="53" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Match.h" line="78" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="90" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_createInternalAndAttachedData&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_createInternalAndAttachedData&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Match.h" line="79" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="95" info="Virtual function in base class"/>
        </error>
        <error id="duplInheritedMember" severity="warning" msg="The class &amp;#039;Release&amp;#039; defines member variable with name &amp;#039;DEFAULT&amp;#039; also defined in its parent class &amp;#039;ModelComponent&amp;#039;." verbose="The class &amp;#039;Release&amp;#039; defines member variable with name &amp;#039;DEFAULT&amp;#039; also defined in its parent class &amp;#039;ModelComponent&amp;#039;." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Release.h" line="92" info="Derived variable &amp;#039;Release::DEFAULT&amp;#039;"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="68" info="Parent variable &amp;#039;ModelComponent::DEFAULT&amp;#039;"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;Release&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;Release&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Release.h" line="66"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Release.h" line="69" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="39" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Release.h" line="81" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="56" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Release.h" line="82" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="54" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_initBetweenReplications&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_initBetweenReplications&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Release.h" line="83" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="93" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Release.h" line="84" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="53" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Release.h" line="85" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="90" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_createInternalAndAttachedData&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_createInternalAndAttachedData&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Release.h" line="86" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="95" info="Virtual function in base class"/>
        </error>
        <error id="duplInheritedMember" severity="warning" msg="The class &amp;#039;Route&amp;#039; defines member variable with name &amp;#039;DEFAULT&amp;#039; also defined in its parent class &amp;#039;ModelComponent&amp;#039;." verbose="The class &amp;#039;Route&amp;#039; defines member variable with name &amp;#039;DEFAULT&amp;#039; also defined in its parent class &amp;#039;ModelComponent&amp;#039;." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Route.h" line="96" info="Derived variable &amp;#039;Route::DEFAULT&amp;#039;"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="68" info="Parent variable &amp;#039;ModelComponent::DEFAULT&amp;#039;"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;Route&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;Route&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Route.h" line="62"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Route.h" line="65" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="39" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Route.h" line="83" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="56" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Route.h" line="84" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="54" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Route.h" line="85" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="53" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Route.h" line="88" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="90" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_createInternalAndAttachedData&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_createInternalAndAttachedData&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Route.h" line="89" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="95" info="Virtual function in base class"/>
        </error>
        <error id="duplInheritedMember" severity="warning" msg="The class &amp;#039;Signal&amp;#039; defines member variable with name &amp;#039;DEFAULT&amp;#039; also defined in its parent class &amp;#039;ModelComponent&amp;#039;." verbose="The class &amp;#039;Signal&amp;#039; defines member variable with name &amp;#039;DEFAULT&amp;#039; also defined in its parent class &amp;#039;ModelComponent&amp;#039;." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Signal.h" line="67" info="Derived variable &amp;#039;Signal::DEFAULT&amp;#039;"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="68" info="Parent variable &amp;#039;ModelComponent::DEFAULT&amp;#039;"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;Signal&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;Signal&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Signal.h" line="41"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Signal.h" line="44" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="39" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Signal.h" line="55" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="54" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Signal.h" line="56" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="53" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Signal.h" line="57" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="56" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Signal.h" line="59" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="90" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_initBetweenReplications&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_initBetweenReplications&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Signal.h" line="60" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="93" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_createInternalAndAttachedData&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_createInternalAndAttachedData&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Signal.h" line="61" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="95" info="Virtual function in base class"/>
        </error>
        <error id="duplInheritedMember" severity="warning" msg="The class &amp;#039;Write&amp;#039; defines member variable with name &amp;#039;DEFAULT&amp;#039; also defined in its parent class &amp;#039;ModelComponent&amp;#039;." verbose="The class &amp;#039;Write&amp;#039; defines member variable with name &amp;#039;DEFAULT&amp;#039; also defined in its parent class &amp;#039;ModelComponent&amp;#039;." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Write.h" line="59" info="Derived variable &amp;#039;Write::DEFAULT&amp;#039;"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="68" info="Parent variable &amp;#039;ModelComponent::DEFAULT&amp;#039;"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;Write&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;Write&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Write.h" line="33"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Write.h" line="36" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="39" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Write.h" line="49" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="56" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_initBetweenReplications&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_initBetweenReplications&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Write.h" line="50" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="93" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Write.h" line="51" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="54" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Write.h" line="52" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="53" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Write.h" line="53" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="90" info="Virtual function in base class"/>
        </error>
        <error id="duplInheritedMember" severity="warning" msg="The class &amp;#039;LSODE&amp;#039; defines member variable with name &amp;#039;DEFAULT&amp;#039; also defined in its parent class &amp;#039;ModelComponent&amp;#039;." verbose="The class &amp;#039;LSODE&amp;#039; defines member variable with name &amp;#039;DEFAULT&amp;#039; also defined in its parent class &amp;#039;ModelComponent&amp;#039;." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/LSODE.h" line="58" info="Derived variable &amp;#039;LSODE::DEFAULT&amp;#039;"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="68" info="Parent variable &amp;#039;ModelComponent::DEFAULT&amp;#039;"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;LSODE&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;LSODE&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/LSODE.h" line="26"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/LSODE.h" line="29" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="39" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/LSODE.h" line="45" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="56" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/LSODE.h" line="46" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="54" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/LSODE.h" line="47" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="53" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/LSODE.h" line="50" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="90" info="Virtual function in base class"/>
        </error>
        <error id="duplInheritedMember" severity="warning" msg="The class &amp;#039;FiniteStateMachine&amp;#039; defines member variable with name &amp;#039;DEFAULT&amp;#039; also defined in its parent class &amp;#039;ModelComponent&amp;#039;." verbose="The class &amp;#039;FiniteStateMachine&amp;#039; defines member variable with name &amp;#039;DEFAULT&amp;#039; also defined in its parent class &amp;#039;ModelComponent&amp;#039;." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/FiniteStateMachine.h" line="47" info="Derived variable &amp;#039;FiniteStateMachine::DEFAULT&amp;#039;"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="68" info="Parent variable &amp;#039;ModelComponent::DEFAULT&amp;#039;"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;FiniteStateMachine&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;FiniteStateMachine&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/FiniteStateMachine.h" line="24"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/FiniteStateMachine.h" line="27" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="39" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/FiniteStateMachine.h" line="33" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="54" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/FiniteStateMachine.h" line="34" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="53" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/FiniteStateMachine.h" line="35" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="56" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/FiniteStateMachine.h" line="37" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="90" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_initBetweenReplications&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_initBetweenReplications&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/FiniteStateMachine.h" line="38" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="93" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_createInternalAndAttachedData&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_createInternalAndAttachedData&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/FiniteStateMachine.h" line="39" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="95" info="Virtual function in base class"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;Access&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;Access&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Access.h" line="55"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Access.h" line="58" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="39" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Access.h" line="64" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="56" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Access.h" line="65" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="54" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Access.h" line="66" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="53" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Access.h" line="69" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="90" info="Virtual function in base class"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;Variable&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;Variable&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Variable.h" line="92"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Variable.h" line="95" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="66" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Variable.h" line="115" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="87" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Variable.h" line="116" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="88" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Variable.h" line="117" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="90" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_initBetweenReplications&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_initBetweenReplications&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Variable.h" line="118" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="93" info="Virtual function in base class"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;Queue&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;Queue&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Queue.h" line="100"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Queue.h" line="103" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="66" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Queue.h" line="124" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="87" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Queue.h" line="125" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="88" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Queue.h" line="127" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="90" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_initBetweenReplications&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_initBetweenReplications&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Queue.h" line="128" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="93" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_createInternalAndAttachedData&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_createInternalAndAttachedData&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Queue.h" line="129" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="95" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_getParserChangesInformation&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_getParserChangesInformation&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Queue.h" line="130" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="92" info="Virtual function in base class"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;EntityGroup&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;EntityGroup&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/EntityGroup.h" line="30"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/EntityGroup.h" line="33" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="66" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/EntityGroup.h" line="45" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="87" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/EntityGroup.h" line="46" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="88" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/EntityGroup.h" line="47" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="90" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_createInternalAndAttachedData&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_createInternalAndAttachedData&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/EntityGroup.h" line="48" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="95" info="Virtual function in base class"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;CppCode&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;CppCode&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/CppCode.h" line="35"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/CppCode.h" line="42" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="66" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/CppCode.h" line="52" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="87" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/CppCode.h" line="53" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="88" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/CppCode.h" line="55" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="90" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_createInternalAndAttachedData&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_createInternalAndAttachedData&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/CppCode.h" line="58" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="95" info="Virtual function in base class"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;generalMessage&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;generalMessage&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/CppCode.h" line="24"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;CppForG&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;CppForG&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/CppForG.h" line="23"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/CppForG.h" line="26" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="39" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/CppForG.h" line="35" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="56" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/CppForG.h" line="36" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="54" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/CppForG.h" line="37" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="53" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/CppForG.h" line="40" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="90" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_createInternalAndAttachedData&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_createInternalAndAttachedData&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/CppForG.h" line="41" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="95" info="Virtual function in base class"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;Create&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;Create&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Create.h" line="69"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Create.h" line="72" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/SourceModelComponent.h" line="49" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Create.h" line="78" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="56" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Create.h" line="79" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/SourceModelComponent.h" line="51" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_initBetweenReplications&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_initBetweenReplications&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Create.h" line="80" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/SourceModelComponent.h" line="52" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Create.h" line="81" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/SourceModelComponent.h" line="53" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Create.h" line="82" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/SourceModelComponent.h" line="54" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_createInternalAndAttachedData&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_createInternalAndAttachedData&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Create.h" line="83" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/SourceModelComponent.h" line="55" info="Virtual function in base class"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;Decide&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;Decide&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Decide.h" line="76"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Decide.h" line="82" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="39" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Decide.h" line="88" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="56" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Decide.h" line="89" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="54" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Decide.h" line="90" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="53" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Decide.h" line="93" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="90" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_createInternalAndAttachedData&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_createInternalAndAttachedData&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Decide.h" line="94" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="95" info="Virtual function in base class"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;Dispose&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;Dispose&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Dispose.h" line="40"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Dispose.h" line="43" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="39" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Dispose.h" line="49" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="56" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Dispose.h" line="50" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/SinkModelComponent.h" line="31" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_initBetweenReplications&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_initBetweenReplications&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Dispose.h" line="51" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="93" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Dispose.h" line="52" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/SinkModelComponent.h" line="32" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Dispose.h" line="53" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/SinkModelComponent.h" line="35" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_createInternalAndAttachedData&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_createInternalAndAttachedData&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Dispose.h" line="54" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="95" info="Virtual function in base class"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;DropOff&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;DropOff&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/DropOff.h" line="43"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/DropOff.h" line="46" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="39" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/DropOff.h" line="52" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="56" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/DropOff.h" line="53" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="54" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/DropOff.h" line="56" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="53" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/DropOff.h" line="57" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="90" info="Virtual function in base class"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;DummyElement&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;DummyElement&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/DummyElement.h" line="20"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/DummyElement.h" line="27" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="66" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/DummyElement.h" line="29" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="87" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/DummyElement.h" line="30" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="88" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/DummyElement.h" line="32" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="90" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_initBetweenReplications&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_initBetweenReplications&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/DummyElement.h" line="33" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="93" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_createInternalAndAttachedData&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_createInternalAndAttachedData&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/DummyElement.h" line="34" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="95" info="Virtual function in base class"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;Station&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;Station&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Station.h" line="66"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Station.h" line="69" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="66" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Station.h" line="81" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="87" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Station.h" line="82" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="88" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Station.h" line="83" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="90" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_createInternalAndAttachedData&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_createInternalAndAttachedData&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Station.h" line="84" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="95" info="Virtual function in base class"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;Enter&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;Enter&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Enter.h" line="101"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Enter.h" line="104" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="39" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Enter.h" line="114" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="56" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Enter.h" line="115" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="54" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Enter.h" line="116" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="53" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Enter.h" line="119" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="90" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_createInternalAndAttachedData&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_createInternalAndAttachedData&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Enter.h" line="120" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="95" info="Virtual function in base class"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;Exit&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;Exit&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Exit.h" line="39"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Exit.h" line="42" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="39" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Exit.h" line="48" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="56" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Exit.h" line="49" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="54" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Exit.h" line="50" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="53" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Exit.h" line="53" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="90" info="Virtual function in base class"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;SignalData&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;SignalData&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/SignalData.h" line="28"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/SignalData.h" line="35" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="66" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/SignalData.h" line="43" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="87" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/SignalData.h" line="44" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="88" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/SignalData.h" line="46" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="90" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_initBetweenReplications&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_initBetweenReplications&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/SignalData.h" line="47" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="93" info="Virtual function in base class"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;Leave&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;Leave&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Leave.h" line="96"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Leave.h" line="99" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="39" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Leave.h" line="109" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="56" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Leave.h" line="110" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="54" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Leave.h" line="111" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="53" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Leave.h" line="114" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="90" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_createInternalAndAttachedData&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_createInternalAndAttachedData&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Leave.h" line="115" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="95" info="Virtual function in base class"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;MarkovChain&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;MarkovChain&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/MarkovChain.h" line="23"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/MarkovChain.h" line="26" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="39" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/MarkovChain.h" line="41" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="56" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_initBetweenReplications&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_initBetweenReplications&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/MarkovChain.h" line="42" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="93" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/MarkovChain.h" line="43" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="54" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/MarkovChain.h" line="44" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="53" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/MarkovChain.h" line="45" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="90" info="Virtual function in base class"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;PickUp&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;PickUp&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/PickUp.h" line="40"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/PickUp.h" line="43" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="39" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/PickUp.h" line="49" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="56" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/PickUp.h" line="50" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="54" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/PickUp.h" line="51" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="53" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/PickUp.h" line="54" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="90" info="Virtual function in base class"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;Failure&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;Failure&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Failure.h" line="80"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Failure.h" line="87" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="66" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Failure.h" line="108" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="87" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Failure.h" line="109" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="88" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Failure.h" line="111" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="90" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_initBetweenReplications&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_initBetweenReplications&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Failure.h" line="112" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="93" info="Virtual function in base class"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;Resource&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;Resource&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Resource.h" line="97"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Resource.h" line="100" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="66" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Resource.h" line="128" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="87" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Resource.h" line="129" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="88" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Resource.h" line="131" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="90" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_createInternalAndAttachedData&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_createInternalAndAttachedData&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Resource.h" line="132" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="95" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_initBetweenReplications&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_initBetweenReplications&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Resource.h" line="133" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="93" info="Virtual function in base class"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;Set&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;Set&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Set.h" line="58"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Set.h" line="65" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="66" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Set.h" line="72" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="87" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Set.h" line="73" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="88" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Set.h" line="75" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="90" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_getParserChangesInformation&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_getParserChangesInformation&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Set.h" line="76" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="92" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_createInternalAndAttachedData&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_createInternalAndAttachedData&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Set.h" line="77" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="95" info="Virtual function in base class"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;SeizableItem&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;SeizableItem&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/SeizableItem.h" line="35"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;QueueableItem&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;QueueableItem&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/QueueableItem.h" line="31"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;Remove&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;Remove&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Remove.h" line="39"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Remove.h" line="42" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="39" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Remove.h" line="48" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="56" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Remove.h" line="49" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="54" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Remove.h" line="50" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="53" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Remove.h" line="53" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="90" info="Virtual function in base class"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;PickStation&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;PickStation&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/PickStation.h" line="64"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/PickStation.h" line="67" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="39" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/PickStation.h" line="73" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="56" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/PickStation.h" line="74" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="54" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/PickStation.h" line="75" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="53" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/PickStation.h" line="78" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="90" info="Virtual function in base class"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;Process&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;Process&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Process.h" line="27"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Process.h" line="30" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="39" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Process.h" line="50" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="56" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Process.h" line="52" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="54" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Process.h" line="53" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="53" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Process.h" line="54" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="90" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_createInternalAndAttachedData&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_createInternalAndAttachedData&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Process.h" line="55" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="95" info="Virtual function in base class"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;Record&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;Record&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Record.h" line="64"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Record.h" line="75" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="39" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Record.h" line="81" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="56" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Record.h" line="82" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="54" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Record.h" line="83" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="53" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Record.h" line="86" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="90" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_createInternalAndAttachedData&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_createInternalAndAttachedData&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Record.h" line="87" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="95" info="Virtual function in base class"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;expression&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;expression&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Record.h" line="69"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;Label&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;Label&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Label.h" line="20"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Label.h" line="27" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="66" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Label.h" line="33" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="87" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Label.h" line="34" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="88" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Label.h" line="36" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="90" info="Virtual function in base class"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;SequenceStep&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;SequenceStep&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Sequence.h" line="26"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;SequenceStep&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;SequenceStep&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Sequence.h" line="27"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;Sequence&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;Sequence&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Sequence.h" line="86"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Sequence.h" line="33" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/Persistence.h" line="105" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Sequence.h" line="34" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/Persistence.h" line="113" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Sequence.h" line="89" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="66" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Sequence.h" line="97" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="87" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Sequence.h" line="98" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="88" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Sequence.h" line="99" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="90" info="Virtual function in base class"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;Start&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;Start&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Start.h" line="41"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Start.h" line="44" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="39" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Start.h" line="50" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="56" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Start.h" line="51" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="54" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Start.h" line="52" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="53" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Start.h" line="55" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="90" info="Virtual function in base class"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;Search&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;Search&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Search.h" line="57"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Search.h" line="60" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="39" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Search.h" line="66" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="56" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Search.h" line="67" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="54" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Search.h" line="70" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="53" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Search.h" line="71" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="90" info="Virtual function in base class"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;Stop&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;Stop&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Stop.h" line="38"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Stop.h" line="41" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="39" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Stop.h" line="47" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="56" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Stop.h" line="48" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="54" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Stop.h" line="49" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="53" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Stop.h" line="52" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="90" info="Virtual function in base class"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;Store&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;Store&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Store.h" line="52"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Store.h" line="55" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="39" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Store.h" line="61" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="56" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Store.h" line="62" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="54" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Store.h" line="63" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="53" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Store.h" line="66" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="90" info="Virtual function in base class"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;Separate&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;Separate&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Separate.h" line="67"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Separate.h" line="70" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="39" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Separate.h" line="76" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="56" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Separate.h" line="77" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="54" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Separate.h" line="78" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="53" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Separate.h" line="81" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="90" info="Virtual function in base class"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;Submodel&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;Submodel&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Submodel.h" line="24"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Submodel.h" line="27" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="39" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Submodel.h" line="33" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="56" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Submodel.h" line="34" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="54" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Submodel.h" line="35" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="53" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Submodel.h" line="38" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="90" info="Virtual function in base class"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;Unstore&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;Unstore&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Unstore.h" line="47"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Unstore.h" line="50" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="39" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_onDispatchEvent&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Unstore.h" line="56" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="56" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Unstore.h" line="57" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="54" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Unstore.h" line="58" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelComponent.h" line="53" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/components/Unstore.h" line="61" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="90" info="Virtual function in base class"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;Formula&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;Formula&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Formula.h" line="24"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Formula.h" line="27" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="66" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Formula.h" line="41" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="87" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Formula.h" line="42" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="88" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Formula.h" line="43" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="90" info="Virtual function in base class"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;File&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;File&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/File.h" line="66"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/File.h" line="73" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="66" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/File.h" line="76" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="87" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/File.h" line="77" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="88" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/File.h" line="79" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="90" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_getParserChangesInformation&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_getParserChangesInformation&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/File.h" line="80" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="92" info="Virtual function in base class"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;Schedule&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;Schedule&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Schedule.h" line="74"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Schedule.h" line="77" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="66" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Schedule.h" line="84" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="87" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Schedule.h" line="85" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="88" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Schedule.h" line="86" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="90" info="Virtual function in base class"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;Storage&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;Storage&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Storage.h" line="39"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;show&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Storage.h" line="46" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="66" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_loadInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Storage.h" line="55" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="87" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_saveInstance&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Storage.h" line="56" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="88" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_check&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Storage.h" line="58" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="90" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;_getParserChangesInformation&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;_getParserChangesInformation&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/plugins/data/Storage.h" line="59" info="Function in derived class"/>
            <location file="../../source/kernel/simulator/ModelDataDefinition.h" line="92" info="Virtual function in base class"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;dynamicLibraryFilename&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;dynamicLibraryFilename&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" line="81"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;dynamicLibraryFilename&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;dynamicLibraryFilename&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" line="87"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;dynamicLibraryFilename&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;dynamicLibraryFilename&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/PluginConnectorDummyImpl1.cpp" line="217"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;pluginTypename&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;pluginTypename&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/PluginInformation.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/PluginInformation.cpp" line="18"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;pluginTypename&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;pluginTypename&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/PluginInformation.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/PluginInformation.cpp" line="26"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;observation&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;observation&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/PluginInformation.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/PluginInformation.cpp" line="122"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;version&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;version&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/PluginInformation.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/PluginInformation.cpp" line="126"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;date&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;date&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/PluginInformation.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/PluginInformation.cpp" line="130"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;author&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;author&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/PluginInformation.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/PluginInformation.cpp" line="134"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;_descriptionHelp&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;_descriptionHelp&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/PluginInformation.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/PluginInformation.cpp" line="170"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;_languageTemplate&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;_languageTemplate&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/PluginInformation.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/PluginInformation.cpp" line="186"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;_category&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;_category&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/PluginInformation.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/PluginInformation.cpp" line="194"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;getAuthor&amp;#039; is never used." verbose="The function &amp;#039;getAuthor&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/PluginInformation.cpp" line="82"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;getDate&amp;#039; is never used." verbose="The function &amp;#039;getDate&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/PluginInformation.cpp" line="78"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;getMaximumInputs&amp;#039; is never used." verbose="The function &amp;#039;getMaximumInputs&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/PluginInformation.cpp" line="158"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;getMaximumOutputs&amp;#039; is never used." verbose="The function &amp;#039;getMaximumOutputs&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/PluginInformation.cpp" line="142"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;getMinimumInputs&amp;#039; is never used." verbose="The function &amp;#039;getMinimumInputs&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/PluginInformation.cpp" line="166"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;getObservation&amp;#039; is never used." verbose="The function &amp;#039;getObservation&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/PluginInformation.cpp" line="70"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;insertDynamicLibFileDependence&amp;#039; is never used." verbose="The function &amp;#039;insertDynamicLibFileDependence&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/PluginInformation.cpp" line="90"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;setAuthor&amp;#039; is never used." verbose="The function &amp;#039;setAuthor&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/PluginInformation.cpp" line="134"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;setCategory&amp;#039; is never used." verbose="The function &amp;#039;setCategory&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/PluginInformation.cpp" line="194"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;setDate&amp;#039; is never used." verbose="The function &amp;#039;setDate&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/PluginInformation.cpp" line="130"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;setDynamicLibFilenameDependencies&amp;#039; is never used." verbose="The function &amp;#039;setDynamicLibFilenameDependencies&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/PluginInformation.cpp" line="94"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;setFields&amp;#039; is never used." verbose="The function &amp;#039;setFields&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/PluginInformation.cpp" line="178"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;setMaximumInputs&amp;#039; is never used." verbose="The function &amp;#039;setMaximumInputs&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/PluginInformation.cpp" line="154"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;setMaximumOutputs&amp;#039; is never used." verbose="The function &amp;#039;setMaximumOutputs&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/PluginInformation.cpp" line="138"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;setMinimumInputs&amp;#039; is never used." verbose="The function &amp;#039;setMinimumInputs&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/PluginInformation.cpp" line="162"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;setMinimumOutputs&amp;#039; is never used." verbose="The function &amp;#039;setMinimumOutputs&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/PluginInformation.cpp" line="146"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;setObservation&amp;#039; is never used." verbose="The function &amp;#039;setObservation&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/PluginInformation.cpp" line="122"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;setReceiveTransfer&amp;#039; is never used." verbose="The function &amp;#039;setReceiveTransfer&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/PluginInformation.cpp" line="110"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;setSendTransfer&amp;#039; is never used." verbose="The function &amp;#039;setSendTransfer&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/PluginInformation.cpp" line="106"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;setSink&amp;#039; is never used." verbose="The function &amp;#039;setSink&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/PluginInformation.cpp" line="114"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;setSource&amp;#039; is never used." verbose="The function &amp;#039;setSource&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/PluginInformation.cpp" line="118"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;setVersion&amp;#039; is never used." verbose="The function &amp;#039;setVersion&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/PluginInformation.cpp" line="126"/>
        </error>
        <error id="noCopyConstructor" severity="warning" msg="Class &amp;#039;PluginManager&amp;#039; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &amp;#039;PluginManager&amp;#039; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="../../source/kernel/simulator/PluginManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/PluginManager.cpp" line="27"/>
        </error>
        <error id="noOperatorEq" severity="warning" msg="Class &amp;#039;PluginManager&amp;#039; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &amp;#039;PluginManager&amp;#039; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="../../source/kernel/simulator/PluginManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/PluginManager.cpp" line="27"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;pluginTypeName&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;pluginTypeName&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/PluginManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/PluginManager.cpp" line="158"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;pluginTypename&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;pluginTypename&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/PluginManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/PluginManager.cpp" line="188"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;name&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;name&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/PluginManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/PluginManager.cpp" line="188"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::accumulate algorithm instead of a raw loop." verbose="Consider using std::accumulate algorithm instead of a raw loop." cwe="398" file0="../../source/kernel/simulator/PluginManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/PluginManager.cpp" line="34"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::any_of, std::all_of, std::none_of, or std::accumulate algorithm instead of a raw loop." verbose="Consider using std::any_of, std::all_of, std::none_of, or std::accumulate algorithm instead of a raw loop." cwe="398" file0="../../source/kernel/simulator/PluginManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/PluginManager.cpp" line="80"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="../../source/kernel/simulator/PluginManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/PluginManager.cpp" line="159"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;completePluginsFieldsAndTemplates&amp;#039; is never used." verbose="The function &amp;#039;completePluginsFieldsAndTemplates&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/PluginManager.cpp" line="53"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="../../source/kernel/simulator/SimulationReporterDefaultImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/SimulationReporterDefaultImpl1.cpp" line="176"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;_name&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;_name&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/SimulationScenario.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/SimulationScenario.cpp" line="25"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;_modelFilename&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;_modelFilename&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/SimulationScenario.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/SimulationScenario.cpp" line="33"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;_scenarioDescription&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;_scenarioDescription&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/SimulationScenario.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/SimulationScenario.cpp" line="49"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::find_if algorithm instead of a raw loop." verbose="Consider using std::find_if algorithm instead of a raw loop." cwe="398" file0="../../source/kernel/simulator/SimulationScenario.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/SimulationScenario.cpp" line="67"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::find_if algorithm instead of a raw loop." verbose="Consider using std::find_if algorithm instead of a raw loop." cwe="398" file0="../../source/kernel/simulator/SimulationScenario.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/SimulationScenario.cpp" line="76"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;getControlValue&amp;#039; is never used." verbose="The function &amp;#039;getControlValue&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/SimulationScenario.cpp" line="74"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;getControlValues&amp;#039; is never used." verbose="The function &amp;#039;getControlValues&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/SimulationScenario.cpp" line="61"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;getModelFilename&amp;#039; is never used." verbose="The function &amp;#039;getModelFilename&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/SimulationScenario.cpp" line="37"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;getResponseValue&amp;#039; is never used." verbose="The function &amp;#039;getResponseValue&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/SimulationScenario.cpp" line="65"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;getResponseValues&amp;#039; is never used." verbose="The function &amp;#039;getResponseValues&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/SimulationScenario.cpp" line="57"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;getScenarioDescription&amp;#039; is never used." verbose="The function &amp;#039;getScenarioDescription&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/SimulationScenario.cpp" line="53"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;getScenarioName&amp;#039; is never used." verbose="The function &amp;#039;getScenarioName&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/SimulationScenario.cpp" line="29"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;getSelectedControls&amp;#039; is never used." verbose="The function &amp;#039;getSelectedControls&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/SimulationScenario.cpp" line="45"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;getSelectedResponses&amp;#039; is never used." verbose="The function &amp;#039;getSelectedResponses&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/SimulationScenario.cpp" line="41"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;setControl&amp;#039; is never used." verbose="The function &amp;#039;setControl&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/SimulationScenario.cpp" line="83"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;setModelFilename&amp;#039; is never used." verbose="The function &amp;#039;setModelFilename&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/SimulationScenario.cpp" line="33"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;setScenarioDescription&amp;#039; is never used." verbose="The function &amp;#039;setScenarioDescription&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/SimulationScenario.cpp" line="49"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;setScenarioName&amp;#039; is never used." verbose="The function &amp;#039;setScenarioName&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/SimulationScenario.cpp" line="25"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;setSelectedControls&amp;#039; is never used." verbose="The function &amp;#039;setSelectedControls&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/SimulationScenario.cpp" line="88"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;startSimulation&amp;#039; is never used." verbose="The function &amp;#039;startSimulation&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/SimulationScenario.cpp" line="18"/>
        </error>
        <error id="noCopyConstructor" severity="warning" msg="Class &amp;#039;Simulator&amp;#039; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &amp;#039;Simulator&amp;#039; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="../../source/kernel/simulator/Simulator.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Simulator.cpp" line="46"/>
        </error>
        <error id="noOperatorEq" severity="warning" msg="Class &amp;#039;Simulator&amp;#039; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &amp;#039;Simulator&amp;#039; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="../../source/kernel/simulator/Simulator.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Simulator.cpp" line="46"/>
        </error>
        <error id="unusedVariable" severity="style" msg="Unused variable: text" verbose="Unused variable: text" cwe="563" file0="../../source/kernel/simulator/Simulator.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Simulator.cpp" line="105"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;CreateSimulator&amp;#039; is never used." verbose="The function &amp;#039;CreateSimulator&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Simulator.cpp" line="24"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;CreateSimulator2&amp;#039; is never used." verbose="The function &amp;#039;CreateSimulator2&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Simulator.cpp" line="20"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;DestroySimulator&amp;#039; is never used." verbose="The function &amp;#039;DestroySimulator&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Simulator.cpp" line="32"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;DestroySimulator2&amp;#039; is never used." verbose="The function &amp;#039;DestroySimulator2&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Simulator.cpp" line="28"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;getExperimenter&amp;#039; is never used." verbose="The function &amp;#039;getExperimenter&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Simulator.cpp" line="72"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;getModels&amp;#039; is never used." verbose="The function &amp;#039;getModels&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Simulator.cpp" line="60"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;getParser&amp;#039; is never used." verbose="The function &amp;#039;getParser&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/Simulator.cpp" line="68"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;componentTypename&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;componentTypename&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/SinkModelComponent.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/SinkModelComponent.cpp" line="18"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;name&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;name&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/SinkModelComponent.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/SinkModelComponent.cpp" line="18"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;componentTypename&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;componentTypename&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/SourceModelComponent.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/SourceModelComponent.cpp" line="20"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;name&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;name&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/SourceModelComponent.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/SourceModelComponent.cpp" line="20"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;entityTypeName&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;entityTypeName&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/SourceModelComponent.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/SourceModelComponent.cpp" line="105"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;_timeBetweenCreations&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;_timeBetweenCreations&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/SourceModelComponent.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/SourceModelComponent.cpp" line="126"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;_maxCreationsExpression&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;_maxCreationsExpression&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/SourceModelComponent.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/SourceModelComponent.cpp" line="134"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;getEntitiesCreated&amp;#039; is never used." verbose="The function &amp;#039;getEntitiesCreated&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/SourceModelComponent.cpp" line="146"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;getEntitiesPerCreation&amp;#039; is never used." verbose="The function &amp;#039;getEntitiesPerCreation&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/SourceModelComponent.cpp" line="159"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;getEntityType&amp;#039; is never used." verbose="The function &amp;#039;getEntityType&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/SourceModelComponent.cpp" line="114"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;getFirstCreation&amp;#039; is never used." verbose="The function &amp;#039;getFirstCreation&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/SourceModelComponent.cpp" line="97"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;getMaxCreations&amp;#039; is never used." verbose="The function &amp;#039;getMaxCreations&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/SourceModelComponent.cpp" line="142"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;getTimeBetweenCreationsExpression&amp;#039; is never used." verbose="The function &amp;#039;getTimeBetweenCreationsExpression&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/SourceModelComponent.cpp" line="130"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;getTimeUnit&amp;#039; is never used." verbose="The function &amp;#039;getTimeUnit&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/SourceModelComponent.cpp" line="122"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;setEntitiesCreated&amp;#039; is never used." verbose="The function &amp;#039;setEntitiesCreated&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/SourceModelComponent.cpp" line="150"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;setEntitiesPerCreation&amp;#039; is never used." verbose="The function &amp;#039;setEntitiesPerCreation&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/SourceModelComponent.cpp" line="154"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;setEntityTypeName&amp;#039; is never used." verbose="The function &amp;#039;setEntityTypeName&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/SourceModelComponent.cpp" line="105"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;setFirstCreation&amp;#039; is never used." verbose="The function &amp;#039;setFirstCreation&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/SourceModelComponent.cpp" line="93"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;setMaxCreations&amp;#039; is never used." verbose="The function &amp;#039;setMaxCreations&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/SourceModelComponent.cpp" line="138"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;setTimeBetweenCreationsExpression&amp;#039; is never used." verbose="The function &amp;#039;setTimeBetweenCreationsExpression&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/SourceModelComponent.cpp" line="126"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;setTimeUnit&amp;#039; is never used." verbose="The function &amp;#039;setTimeUnit&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/SourceModelComponent.cpp" line="118"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;name&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;name&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/StatisticsCollector.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/StatisticsCollector.cpp" line="26"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;name&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;name&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/StatisticsCollector.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/StatisticsCollector.cpp" line="33"/>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &amp;#039;TraceManager::_errorMessages&amp;#039; is not initialized in the constructor." verbose="Member variable &amp;#039;TraceManager::_errorMessages&amp;#039; is not initialized in the constructor." cwe="398" file0="../../source/kernel/simulator/TraceManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/TraceManager.cpp" line="19"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;text&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;text&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/TraceManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/TraceManager.cpp" line="67"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;text&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;text&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/TraceManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/TraceManager.cpp" line="86"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;text&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;text&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/TraceManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/TraceManager.cpp" line="90"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;text&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;text&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/TraceManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/TraceManager.cpp" line="94"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;text&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;text&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/TraceManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/TraceManager.cpp" line="111"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;text&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;text&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/TraceManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/TraceManager.cpp" line="130"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;text&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;text&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/TraceManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/TraceManager.cpp" line="147"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="../../source/kernel/simulator/TraceManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/TraceManager.cpp" line="77"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="../../source/kernel/simulator/TraceManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/TraceManager.cpp" line="80"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="../../source/kernel/simulator/TraceManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/TraceManager.cpp" line="103"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="../../source/kernel/simulator/TraceManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/TraceManager.cpp" line="106"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="../../source/kernel/simulator/TraceManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/TraceManager.cpp" line="121"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="../../source/kernel/simulator/TraceManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/TraceManager.cpp" line="124"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="../../source/kernel/simulator/TraceManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/TraceManager.cpp" line="138"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="../../source/kernel/simulator/TraceManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/TraceManager.cpp" line="141"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="../../source/kernel/simulator/TraceManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/TraceManager.cpp" line="155"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="../../source/kernel/simulator/TraceManager.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/TraceManager.cpp" line="158"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;addTraceErrorHandler&amp;#039; is never used." verbose="The function &amp;#039;addTraceErrorHandler&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/TraceManager.cpp" line="53"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;addTraceHandler&amp;#039; is never used." verbose="The function &amp;#039;addTraceHandler&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/TraceManager.cpp" line="45"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;addTraceReportHandler&amp;#039; is never used." verbose="The function &amp;#039;addTraceReportHandler&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/TraceManager.cpp" line="57"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;addTraceSimulationExceptionRuleModelData&amp;#039; is never used." verbose="The function &amp;#039;addTraceSimulationExceptionRuleModelData&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/TraceManager.cpp" line="61"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;addTraceSimulationHandler&amp;#039; is never used." verbose="The function &amp;#039;addTraceSimulationHandler&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/TraceManager.cpp" line="49"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;errorMessages&amp;#039; is never used." verbose="The function &amp;#039;errorMessages&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/TraceManager.cpp" line="164"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;isTraceSimulationRuleAllAllowed&amp;#039; is never used." verbose="The function &amp;#039;isTraceSimulationRuleAllAllowed&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/TraceManager.cpp" line="41"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;setTraceSimulationRuleAllAllowed&amp;#039; is never used." verbose="The function &amp;#039;setTraceSimulationRuleAllAllowed&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/TraceManager.cpp" line="37"/>
        </error>
        <error id="multiCondition" severity="style" msg="Expression is always true because &amp;#039;else if&amp;#039; condition is opposite to previous condition at line 322." verbose="Expression is always true because &amp;#039;else if&amp;#039; condition is opposite to previous condition at line 322." cwe="398" file0="../../source/kernel/simulator/XmlSerializer.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/XmlSerializer.cpp" line="325" info="else if condition is opposite to first condition"/>
            <location file="../../source/kernel/simulator/XmlSerializer.cpp" line="322" info="first condition"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;index&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;index&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../source/kernel/simulator/XmlSerializer.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/XmlSerializer.cpp" line="44"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;name&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;name&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/XmlSerializer.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/XmlSerializer.cpp" line="309"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;type&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;type&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/simulator/XmlSerializer.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/XmlSerializer.cpp" line="309"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::transform algorithm instead of a raw loop." verbose="Consider using std::transform algorithm instead of a raw loop." cwe="398" file0="../../source/kernel/simulator/XmlSerializer.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/XmlSerializer.cpp" line="336"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::transform algorithm instead of a raw loop." verbose="Consider using std::transform algorithm instead of a raw loop." cwe="398" file0="../../source/kernel/simulator/XmlSerializer.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/XmlSerializer.cpp" line="337"/>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &amp;#039;CollectorDatafileDefaultImpl1::_lastValue&amp;#039; is not initialized in the constructor." verbose="Member variable &amp;#039;CollectorDatafileDefaultImpl1::_lastValue&amp;#039; is not initialized in the constructor." cwe="398" file0="../../source/kernel/statistics/CollectorDatafileDefaultImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/CollectorDatafileDefaultImpl1.cpp" line="22"/>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &amp;#039;CollectorDatafileDefaultImpl1::_numElements&amp;#039; is not initialized in the constructor." verbose="Member variable &amp;#039;CollectorDatafileDefaultImpl1::_numElements&amp;#039; is not initialized in the constructor." cwe="398" file0="../../source/kernel/statistics/CollectorDatafileDefaultImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/CollectorDatafileDefaultImpl1.cpp" line="22"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;filename&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;filename&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/statistics/CollectorDatafileDefaultImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/CollectorDatafileDefaultImpl1.cpp" line="93"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;getNextValue&amp;#039; is never used." verbose="The function &amp;#039;getNextValue&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/CollectorDatafileDefaultImpl1.cpp" line="82"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;seekFirstValue&amp;#039; is never used." verbose="The function &amp;#039;seekFirstValue&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/CollectorDatafileDefaultImpl1.cpp" line="86"/>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &amp;#039;CollectorDefaultImpl1::_lastValue&amp;#039; is not initialized in the constructor." verbose="Member variable &amp;#039;CollectorDefaultImpl1::_lastValue&amp;#039; is not initialized in the constructor." cwe="398" file0="../../source/kernel/statistics/CollectorDefaultImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/CollectorDefaultImpl1.cpp" line="18"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;getLastValue&amp;#039; is never used." verbose="The function &amp;#039;getLastValue&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/CollectorDefaultImpl1.cpp" line="36"/>
        </error>
        <error id="missingReturn" severity="error" msg="Found a exit path from function with non-void return type that has missing return statement" verbose="Found a exit path from function with non-void return type that has missing return statement" cwe="758" file0="../../source/kernel/statistics/SamplerBoostImpl.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/SamplerBoostImpl.cpp" line="73"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;random&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;random&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/statistics/SamplerBoostImpl.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/SamplerBoostImpl.h" line="31" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/Sampler_if.h" line="30" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;sampleBeta&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;sampleBeta&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/statistics/SamplerBoostImpl.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/SamplerBoostImpl.h" line="32" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/Sampler_if.h" line="32" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;sampleDiscrete&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;sampleDiscrete&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/statistics/SamplerBoostImpl.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/SamplerBoostImpl.h" line="33" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/Sampler_if.h" line="48" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;sampleNormal&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;sampleNormal&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/statistics/SamplerBoostImpl.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/SamplerBoostImpl.h" line="38" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/Sampler_if.h" line="40" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;sampleTriangular&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;sampleTriangular&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/statistics/SamplerBoostImpl.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/SamplerBoostImpl.h" line="39" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/Sampler_if.h" line="41" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;sampleUniform&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;sampleUniform&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/statistics/SamplerBoostImpl.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/SamplerBoostImpl.h" line="40" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/Sampler_if.h" line="42" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;sampleWeibull&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;sampleWeibull&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/statistics/SamplerBoostImpl.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/SamplerBoostImpl.h" line="41" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/Sampler_if.h" line="43" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;setRNGparameters&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;setRNGparameters&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/statistics/SamplerBoostImpl.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/SamplerBoostImpl.h" line="45" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/Sampler_if.h" line="52" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;getRNGparameters&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;getRNGparameters&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="../../source/kernel/statistics/SamplerBoostImpl.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/SamplerBoostImpl.h" line="46" info="Function in derived class"/>
            <location file="../../source/kernel/statistics/Sampler_if.h" line="53" info="Virtual function in base class"/>
        </error>
        <error id="unpreciseMathCall" severity="style" msg="Expression &amp;#039;log(1 + x)&amp;#039; can be replaced by &amp;#039;log1p(x)&amp;#039; to avoid loss of precision." verbose="Expression &amp;#039;log(1 + x)&amp;#039; can be replaced by &amp;#039;log1p(x)&amp;#039; to avoid loss of precision." cwe="758" file0="../../source/kernel/statistics/SamplerDefaultImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/SamplerDefaultImpl1.cpp" line="86"/>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &amp;#039;SamplerDefaultImpl1::_lastnormal&amp;#039; is not initialized in the constructor." verbose="Member variable &amp;#039;SamplerDefaultImpl1::_lastnormal&amp;#039; is not initialized in the constructor." cwe="398" file0="../../source/kernel/statistics/SamplerDefaultImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/SamplerDefaultImpl1.cpp" line="24"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;u&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;u&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../source/kernel/statistics/SamplerDefaultImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/SamplerDefaultImpl1.cpp" line="175"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;v&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;v&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../source/kernel/statistics/SamplerDefaultImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/SamplerDefaultImpl1.cpp" line="175"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;w&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;w&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../source/kernel/statistics/SamplerDefaultImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/SamplerDefaultImpl1.cpp" line="175"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;U&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;U&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../source/kernel/statistics/SamplerDefaultImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/SamplerDefaultImpl1.cpp" line="217"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;getRNGparameters&amp;#039; is never used." verbose="The function &amp;#039;getRNGparameters&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/SamplerDefaultImpl1.cpp" line="38"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;sampleBernoulli&amp;#039; is never used." verbose="The function &amp;#039;sampleBernoulli&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/SamplerDefaultImpl1.cpp" line="229"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;sampleBinomial&amp;#039; is never used." verbose="The function &amp;#039;sampleBinomial&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/SamplerDefaultImpl1.cpp" line="215"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;sampleDiscrete&amp;#039; is never used." verbose="The function &amp;#039;sampleDiscrete&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/SamplerDefaultImpl1.cpp" line="109"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;sampleErlang&amp;#039; is never used." verbose="The function &amp;#039;sampleErlang&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/SamplerDefaultImpl1.cpp" line="59"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;sampleExponential&amp;#039; is never used." verbose="The function &amp;#039;sampleExponential&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/SamplerDefaultImpl1.cpp" line="55"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;sampleGeometric&amp;#039; is never used." verbose="The function &amp;#039;sampleGeometric&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/SamplerDefaultImpl1.cpp" line="239"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;sampleGumbell&amp;#039; is never used." verbose="The function &amp;#039;sampleGumbell&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/SamplerDefaultImpl1.cpp" line="246"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;sampleLogNormal&amp;#039; is never used." verbose="The function &amp;#039;sampleLogNormal&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/SamplerDefaultImpl1.cpp" line="83"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;sampleTriangular&amp;#039; is never used." verbose="The function &amp;#039;sampleTriangular&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/SamplerDefaultImpl1.cpp" line="91"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;sampleUniform&amp;#039; is never used." verbose="The function &amp;#039;sampleUniform&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/SamplerDefaultImpl1.cpp" line="51"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;sampleWeibull&amp;#039; is never used." verbose="The function &amp;#039;sampleWeibull&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/SamplerDefaultImpl1.cpp" line="210"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;setRNGparameters&amp;#039; is never used." verbose="The function &amp;#039;setRNGparameters&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/SamplerDefaultImpl1.cpp" line="33"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;filename&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;filename&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/statistics/SorttFile.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/SorttFile.cpp" line="26"/>
        </error>
        <error id="noCopyConstructor" severity="warning" msg="Class &amp;#039;StatisticsDatafileDefaultImpl1&amp;#039; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &amp;#039;StatisticsDatafileDefaultImpl1&amp;#039; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="../../source/kernel/statistics/StatisticsDataFileDefaultImpl.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/StatisticsDataFileDefaultImpl.cpp" line="19"/>
        </error>
        <error id="noOperatorEq" severity="warning" msg="Class &amp;#039;StatisticsDatafileDefaultImpl1&amp;#039; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &amp;#039;StatisticsDatafileDefaultImpl1&amp;#039; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="../../source/kernel/statistics/StatisticsDataFileDefaultImpl.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/StatisticsDataFileDefaultImpl.cpp" line="19"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;tmpValue&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;tmpValue&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../source/kernel/statistics/StatisticsDataFileDefaultImpl.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/StatisticsDataFileDefaultImpl.cpp" line="291"/>
        </error>
        <error id="uninitvar" severity="error" msg="Uninitialized variable: modeValue" verbose="Uninitialized variable: modeValue" cwe="457" file0="../../source/kernel/statistics/StatisticsDataFileDefaultImpl.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/StatisticsDataFileDefaultImpl.cpp" line="190" info=""/>
            <location file="../../source/kernel/statistics/StatisticsDataFileDefaultImpl.cpp" line="174" info="Assuming condition is false"/>
        </error>
        <error id="unusedVariable" severity="style" msg="Unused variable: quartil" verbose="Unused variable: quartil" cwe="563" file0="../../source/kernel/statistics/StatisticsDataFileDefaultImpl.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/StatisticsDataFileDefaultImpl.cpp" line="218"/>
        </error>
        <error id="unusedVariable" severity="style" msg="Unused variable: tmpValue2" verbose="Unused variable: tmpValue2" cwe="563" file0="../../source/kernel/statistics/StatisticsDataFileDefaultImpl.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/StatisticsDataFileDefaultImpl.cpp" line="218"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;centil&amp;#039; is never used." verbose="The function &amp;#039;centil&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/StatisticsDataFileDefaultImpl.cpp" line="246"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;decil&amp;#039; is never used." verbose="The function &amp;#039;decil&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/StatisticsDataFileDefaultImpl.cpp" line="232"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;histogramClassFrequency&amp;#039; is never used." verbose="The function &amp;#039;histogramClassFrequency&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/StatisticsDataFileDefaultImpl.cpp" line="284"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;quartil&amp;#039; is never used." verbose="The function &amp;#039;quartil&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/StatisticsDataFileDefaultImpl.cpp" line="212"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;setHistogramNumClasses&amp;#039; is never used." verbose="The function &amp;#039;setHistogramNumClasses&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/StatisticsDataFileDefaultImpl.cpp" line="260"/>
        </error>
        <error id="noCopyConstructor" severity="warning" msg="Class &amp;#039;StatisticsDefaultImpl1&amp;#039; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &amp;#039;StatisticsDefaultImpl1&amp;#039; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="../../source/kernel/statistics/StatisticsDefaultImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/StatisticsDefaultImpl1.cpp" line="25"/>
        </error>
        <error id="noOperatorEq" severity="warning" msg="Class &amp;#039;StatisticsDefaultImpl1&amp;#039; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &amp;#039;StatisticsDefaultImpl1&amp;#039; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="../../source/kernel/statistics/StatisticsDefaultImpl1.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/StatisticsDefaultImpl1.cpp" line="25"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;newSampleSize&amp;#039; is never used." verbose="The function &amp;#039;newSampleSize&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/StatisticsDefaultImpl1.cpp" line="127"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;setCollector&amp;#039; is never used." verbose="The function &amp;#039;setCollector&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/StatisticsDefaultImpl1.cpp" line="135"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;setConfidenceLevel&amp;#039; is never used." verbose="The function &amp;#039;setConfidenceLevel&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/statistics/StatisticsDefaultImpl1.cpp" line="116"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;text&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;text&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../source/kernel/util/Util.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/util/Util.cpp" line="66"/>
        </error>
        <error id="constVariable" severity="style" msg="Variable &amp;#039;scaleValues&amp;#039; can be declared with const" verbose="Variable &amp;#039;scaleValues&amp;#039; can be declared with const" cwe="398" file0="../../source/kernel/util/Util.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/util/Util.cpp" line="150"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="../../source/kernel/util/Util.cpp" sinceDate="25/10/2022">
            <location file="../../source/kernel/util/Util.cpp" line="45"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;SepKeyVal&amp;#039; is never used." verbose="The function &amp;#039;SepKeyVal&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/util/Util.cpp" line="37"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;StrTimeUnitShort&amp;#039; is never used." verbose="The function &amp;#039;StrTimeUnitShort&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/util/Util.cpp" line="72"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;getEntityLimit&amp;#039; is never used." verbose="The function &amp;#039;getEntityLimit&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/LicenceManager.cpp" line="79"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;getHostsLimit&amp;#039; is never used." verbose="The function &amp;#039;getHostsLimit&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/LicenceManager.cpp" line="83"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;getThreadsLimit&amp;#039; is never used." verbose="The function &amp;#039;getThreadsLimit&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/LicenceManager.cpp" line="87"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;insertActivationCode&amp;#039; is never used." verbose="The function &amp;#039;insertActivationCode&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/LicenceManager.cpp" line="62"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;lookforActivationCode&amp;#039; is never used." verbose="The function &amp;#039;lookforActivationCode&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/LicenceManager.cpp" line="57"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;removeActivationCode&amp;#039; is never used." verbose="The function &amp;#039;removeActivationCode&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/LicenceManager.cpp" line="67"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;showActivationCode&amp;#039; is never used." verbose="The function &amp;#039;showActivationCode&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/LicenceManager.cpp" line="52"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;getScenarios&amp;#039; is never used." verbose="The function &amp;#039;getScenarios&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ExperimentManagerDefaultImpl1.cpp" line="19"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;startExperiment&amp;#039; is never used." verbose="The function &amp;#039;startExperiment&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ExperimentManagerDefaultImpl1.cpp" line="49"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;startSimulationOfScenario&amp;#039; is never used." verbose="The function &amp;#039;startSimulationOfScenario&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ExperimentManagerDefaultImpl1.cpp" line="45"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;stopExperiment&amp;#039; is never used." verbose="The function &amp;#039;stopExperiment&amp;#039; is never used." cwe="561" sinceDate="25/10/2022">
            <location file="../../source/kernel/simulator/ExperimentManagerDefaultImpl1.cpp" line="53"/>
        </error>
    </errors>
</results>
